{
    "pipes": [
        {
            "name": "CheckDateValidPipe",
            "id": "pipe-CheckDateValidPipe-4a799b4edb6da39a2c5f6c11451fcdaa6de50450a74679d23bb1e120805dbe2b9e36bff4108df3c863c503dc597fd5b623112c12e3f34b7d129d3898a1347335",
            "file": "src/app/core/pipe/check-date.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 7,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "standalone": false,
            "ngname": "checkDateValid",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'checkDateValid',\r\n})\r\nexport class CheckDateValidPipe implements PipeTransform {\r\n    transform(value: any, args?: any): any {\r\n        let today = new Date().setHours(0,0,0);\r\n        let date = new Date(value).setHours(0,0,0);\r\n        return today >= date ? 'Tidak Aktif':'Aktif';\r\n    }\r\n}\r\n"
        },
        {
            "name": "CurrPipe",
            "id": "pipe-CurrPipe-45a13f7c170c2d8fea2600567d0fff4692732926fa2e1d2ad6de76859e480896ee62408f1aeaf17c272026c101a9938bc08f25f73f4f87389f3d40f4d67100b4",
            "file": "src/app/core/pipe/curr.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 8,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "standalone": false,
            "ngname": "curr",
            "sourceCode": "import { CurrencyPipe } from '@angular/common';\r\nimport { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'curr',\r\n})\r\nexport class CurrPipe extends CurrencyPipe implements PipeTransform {\r\n    transform(value: any, args?: any): any {\r\n\r\n        let result;\r\n        result = super.transform(value, args);\r\n    \r\n    \r\n        return result.replaceAll('.00','').replaceAll('$','').replaceAll(',','.');\r\n      }\r\n}\r\n"
        },
        {
            "name": "FormatDatePipe",
            "id": "pipe-FormatDatePipe-f8916ab871362bb1319970467487f53a1a2138a279a586b08ec624cfc48b85105751d2fc4a1905b1b64a07bd356382cdb47915d12eddcd0fab58bbf5332f2008",
            "file": "src/app/core/pipe/date-format.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "haveTime",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "haveTime",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "standalone": false,
            "ngname": "formatDate",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n@Pipe({\r\n    name: 'formatDate',\r\n})\r\nexport class FormatDatePipe extends DatePipe implements PipeTransform {\r\n    constructor() {\r\n        super('en-US');\r\n    }\r\n\r\n    transform(value: any, haveTime?: any): any {\r\n        let format = 'dd-MM-yyyy';\r\n        if (haveTime) {\r\n            format = 'dd-MM-yyyy HH:mm';\r\n        }\r\n        if (value && value != '-') {\r\n            if (value instanceof Date) {\r\n            } else {\r\n                value = value.replaceAll('-', '/');\r\n            }\r\n\r\n            let b: any;\r\n            if (value instanceof Date) {\r\n                b = value;\r\n            } else {\r\n                b = new Date((value += haveTime ? ' GMT+0700' : ''));\r\n            }\r\n            if (b.getFullYear() === 9999) {\r\n                return '-';\r\n            } else {\r\n                return super.transform(b, format);\r\n            }\r\n        } else {\r\n            return '-';\r\n        }\r\n    }\r\n}\r\n"
        },
        {
            "name": "FormatDateTimeZonePipe",
            "id": "pipe-FormatDateTimeZonePipe-a560486ea9ec94b5514c6bd840715ceba65a1782f5d82ee4d16ec45b88679b1e6146cead6f25114d17d7fba0f9d2e3c987c2075da5c2d36b6cbe2ea59826754d",
            "file": "src/app/core/pipe/dateTimeZone-format.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "haveTime",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "dateDay",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "haveTime",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "dateDay",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "standalone": false,
            "ngname": "formatDateTimeZone",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n@Pipe({\r\n    name: 'formatDateTimeZone',\r\n})\r\nexport class FormatDateTimeZonePipe extends DatePipe implements PipeTransform {\r\n    constructor() {\r\n        // super(authService.getSession().locale);\r\n        super('en-US');\r\n    }\r\n\r\n    transform(value: any, haveTime?: any, dateDay?: any): any {\r\n        let format = 'dd-MM-yyyy';\r\n        if (haveTime) {\r\n            format = 'dd-MM-yyyy HH:mm';\r\n        }\r\n        if (dateDay) {\r\n            format = 'EEEE, dd LLLL yyyy HH:mm';\r\n        }\r\n        if (value && value != '-') {\r\n            if (value instanceof Date) {\r\n            } else {\r\n                value = value.replaceAll('-', '/');\r\n            }\r\n\r\n            let b: any;\r\n            if (value instanceof Date) {\r\n                b = value;\r\n            } else {\r\n                b = new Date((value += haveTime ? ' GMT+0000' : ''));\r\n            }\r\n            if (b.getFullYear() === 9999) {\r\n                return '-';\r\n            } else {\r\n                return super.transform(b, format);\r\n            }\r\n        } else {\r\n            return '-';\r\n        }\r\n    }\r\n}\r\n"
        },
        {
            "name": "FormatTimePipe",
            "id": "pipe-FormatTimePipe-9a25043dcade44ac8ffded6ac5204d5a05abfe6827cfb0c8352304941939bd2870f20e9fd39b521aae525cc16dd386237bebd3a4e51b2a119ae50d83d56ef1bc",
            "file": "src/app/core/pipe/time-format.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "standalone": false,
            "ngname": "formatTime",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n@Pipe({\r\n    name: 'formatTime',\r\n})\r\nexport class FormatTimePipe extends DatePipe implements PipeTransform {\r\n    constructor() {\r\n        super('en-US');\r\n    }\r\n\r\n    transform(value: any): any {\r\n        let formated = \"-\";\r\n        if(value){\r\n            let format=\"HH:mm\";\r\n            let date = new Date(\"2022/01/01 \"+value+\" GMT+0700\");\r\n            formated=super.transform(date,format)\r\n        }\r\n        return formated;\r\n    }\r\n}\r\n\r\n\r\n"
        },
        {
            "name": "SpaceToCommaPipe",
            "id": "pipe-SpaceToCommaPipe-67a878aca47f517f36003690dc0dd3760d79b73838edfdaf70c5db334e381862ed044e8809a8d1ffeafce430e24d4224340211711be1bc9df7d518640b0b8789",
            "file": "src/app/core/pipe/space-to-comma.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 7,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "standalone": false,
            "ngname": "spaceToComma",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'spaceToComma',\r\n})\r\nexport class SpaceToCommaPipe implements PipeTransform {\r\n    transform(value: any, args?: any): any {\r\n        let data = value.split(' ').toString();\r\n        if(data.charAt(data.length - 1)==\",\"){\r\n            data =data.substring(0, data.length - 1)\r\n        }\r\n        return data;\r\n    }\r\n}\r\n"
        }
    ],
    "interfaces": [
        {
            "name": "AppConfig",
            "id": "interface-AppConfig-9b31cccca39f8137a487f58c9a8b074ccafaa354ec7c977e16dd33d9e324f36fb53f6ac8f8798512306cd0d275ab0b2c2c1a49f362a80e7925c83dbfe92399d4",
            "file": "src/app/core/config/app.config.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export const AppConstant = {\r\n    userSessionKey: btoa('currSession'),\r\n    resetPasswordMessage: 'Apakah Anda yakin akan <b>mereset</b> password?',\r\n    prepaymentMessage: 'Apakah Anda yakin akan melanjutkan <b>pembayaran</b>?',\r\n    activateMessage:\r\n        'Apakah Anda yakin akan <b>mengaktifkan</b> <br> pengguna ini?',\r\n    deactivateMessage:\r\n        'Apakah Anda yakin akan <b>menonaktfikan</b> <br> pengguna ini?',\r\n    paidMessage: 'Apakah Anda yakin untuk <b>membayarkan</b> data ini?',\r\n    reopenMessage: 'Apakah Anda yakin akan <b>membuka kembali</b> proses?',\r\n    extendMessage: 'Apakah Anda yakin akan <b>memperpanjang?</b>',\r\n    terminateMessage: 'Apakah Anda yakin akan <b>memberhentikan?</b>',\r\n    closeMessage: 'Apakah Anda yakin akan <b>menyelesaikan</b> proses ?',\r\n    rollbackMessage: 'Apakah Anda yakin akan <b>membalikan</b> proses?',\r\n    cancelMessage: 'Apakah Anda yakin untuk <b>membatalkan</b> data ini?',\r\n    kembaliMessage: 'Apakah Anda yakin akan <b>kembali</b> ke halaman utama?',\r\n    processMessage: 'Apakah Anda yakin akan <b>memproses</b>?',\r\n    rejectMessage: 'Apakah Anda yakin untuk <b>menolak</b> data ini?',\r\n    sendMessage: 'Apakah Anda yakin untuk <b>mengaktivasi premium</b>?',\r\n    renewMessage: 'Apakah Anda yakin untuk <b>perpanjang premium</b>?',\r\n    approveMessage: 'Apakah Anda yakin untuk <b>menyetujui</b> data ini?',\r\n    updateMessage: 'Apakah Anda yakin akan <b>memperbarui</b>?',\r\n    absenMessage:\r\n        'Apakah anda yakin akan mengganti status <br> kehadiran, menjadi <b>Absen</b>?',\r\n    deleteMessage: 'Apakah Anda yakin akan <b>menghapus</b> data ini?',\r\n    earlyOutMessage:\r\n        'Apakah Anda yakin akan mengganti status <br> kehadiran, menjadi <b>Pulang Cepat</b>?',\r\n    lateMessage:\r\n        'Apakah Anda yakin akan mengganti status <br> kehadiran, menjadi <b>Terlambat</b>?',\r\n    presentMessage:\r\n        'Apakah Anda yakin akan mengganti status <br> kehadiran, menjadi <b>Hadir</b>?',\r\n    ApprovedMessage: 'Apakah Anda yakin untuk <b>menyetujui</b> data ini?',\r\n    RejectedMessage: 'Apakah Anda yakin untuk <b>menolak</b> data ini?',\r\n    PaidMessage: 'Apakah Anda yakin untuk <b>membayarkan</b> data ini?',\r\n    changeBalance:\r\n        'Perubahan persentasi pengajuan gaji instan berlaku di bulan berikutnya.',\r\n    month: [\r\n        'Januari',\r\n        'Februari',\r\n        'Maret',\r\n        'April',\r\n        'Mei',\r\n        'Juni',\r\n        'Juli',\r\n        'Agustus',\r\n        'September',\r\n        'Oktober',\r\n        'November',\r\n        'Desember',\r\n    ],\r\n    rowsPerPage: 10,\r\n    rowsPerPageOptions: [10, 20, 50],\r\n    rowsCard: 9,\r\n    rowsCardOptions: [9, 18, 27],\r\n};\r\n\r\nexport interface AppConfig {\r\n    inputStyle?: string;\r\n    dark?: boolean;\r\n    theme?: string;\r\n    ripple?: boolean;\r\n    loading?:boolean;\r\n}\r\n",
            "properties": [
                {
                    "name": "dark",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 62
                },
                {
                    "name": "inputStyle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 61
                },
                {
                    "name": "loading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 65
                },
                {
                    "name": "ripple",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 64
                },
                {
                    "name": "theme",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 63
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "AppConfig",
            "id": "interface-AppConfig-80f213192af3c299209f89ac2426408ae856aff8c59b429e470330f732c4454294804a1ad8701d720bf847827486585f08c567b691bde54d6b58882d6fe97d62-1",
            "file": "src/app/showcase/api/appconfig.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface AppConfig {\r\n    inputStyle?: string;\r\n    dark?: boolean;\r\n    theme?: string;\r\n    ripple?: boolean;\r\n    loading?:boolean;\r\n}",
            "properties": [
                {
                    "name": "dark",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "inputStyle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "loading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "ripple",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "theme",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "AppConfig-1"
        },
        {
            "name": "Company",
            "id": "interface-Company-b5073a137a63b3cf05e9a2a5f1fdf21d8abd99efd986897d6415508e82502159a27e15c9794d1134648dbb157ca0fb85d2783153300a12394d9a2d14fe0011e9",
            "file": "src/app/core/service/authentication.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { AppConstant } from '../config/app.config';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class AuthenticationService {\r\n    privilegeMenu: any;\r\n\r\n    constructor() {}\r\n\r\n    private setLocalStorage(key: string, value: any) {\r\n        localStorage.setItem(key, btoa(JSON.stringify(value)));\r\n    }\r\n\r\n    private getLocalStorage(key: string) {\r\n        const item = localStorage.getItem(key);\r\n\r\n        if (item) {\r\n            return JSON.parse(atob(item));\r\n        } else {\r\n            return item;\r\n        }\r\n    }\r\n\r\n    isLoggedIn(): boolean {\r\n        return this.getLocalStorage(AppConstant.userSessionKey) !== null;\r\n    }\r\n\r\n    destroySession() {\r\n        localStorage.clear();\r\n    }\r\n\r\n    createSession(session) {\r\n        this.setLocalStorage(AppConstant.userSessionKey, session);\r\n        localStorage.setItem('seen_badge', 'false');\r\n    }\r\n    getSession(): UserSession {\r\n        if (!this.getLocalStorage(AppConstant.userSessionKey).token) {\r\n            return JSON.parse(this.getLocalStorage(AppConstant.userSessionKey));\r\n        } else {\r\n            return this.getLocalStorage(AppConstant.userSessionKey);\r\n        }\r\n    }\r\n}\r\nexport interface UserSession {\r\n    token: Token;\r\n    user: User;\r\n    selectedCompanyId: string;\r\n    subStat: string;\r\n}\r\n\r\ninterface User {\r\n    id: string;\r\n    userRoles: any[];\r\n    tenant: Tenant;\r\n    isSa: boolean;\r\n    version: number;\r\n}\r\n\r\ninterface Tenant {\r\n    id: string;\r\n    companies: Company[];\r\n    tenantModules: TenantModule[];\r\n}\r\n\r\ninterface TenantModule {\r\n    id: string;\r\n    label: string;\r\n    icon: string;\r\n    routerLink: string[];\r\n    items: Item2[];\r\n    userWidgets: any[];\r\n}\r\n\r\ninterface Item2 {\r\n    id: string;\r\n    label: string;\r\n    routerLink: (null | null | string | string)[];\r\n    icon: string;\r\n    items?: Item[];\r\n}\r\n\r\ninterface Item {\r\n    id: string;\r\n    label: string;\r\n    routerLink: string[];\r\n    icon: string;\r\n}\r\n\r\ninterface Company {\r\n    id: string;\r\n    name: string;\r\n}\r\n\r\ninterface Token {\r\n    accessToken: string;\r\n    refreshToken: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 92
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 93
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "Country",
            "id": "interface-Country-d3c2bcc43779a7fcd7f7db208994dd4e9444e38657d12fe9a25a8a1d8b80cc1cbaa1bfcdbb9a7cce0cc8967888c2d1a563add6b84f4b26417a6ad6db719f68a1",
            "file": "src/app/showcase/api/customer.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Country {\r\n    name?: string;\r\n    code?: string;\r\n}\r\n\r\nexport interface Representative {\r\n    name?: string;\r\n    image?: string;\r\n}\r\n\r\nexport interface Customer {\r\n    id?: number;\r\n    name?: string;\r\n    country?: Country;\r\n    company?: string;\r\n    date?: string;\r\n    status?: string;\r\n    activity?: number;\r\n    representative?: Representative;\r\n}\r\n",
            "properties": [
                {
                    "name": "code",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "Customer",
            "id": "interface-Customer-d3c2bcc43779a7fcd7f7db208994dd4e9444e38657d12fe9a25a8a1d8b80cc1cbaa1bfcdbb9a7cce0cc8967888c2d1a563add6b84f4b26417a6ad6db719f68a1",
            "file": "src/app/showcase/api/customer.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Country {\r\n    name?: string;\r\n    code?: string;\r\n}\r\n\r\nexport interface Representative {\r\n    name?: string;\r\n    image?: string;\r\n}\r\n\r\nexport interface Customer {\r\n    id?: number;\r\n    name?: string;\r\n    country?: Country;\r\n    company?: string;\r\n    date?: string;\r\n    status?: string;\r\n    activity?: number;\r\n    representative?: Representative;\r\n}\r\n",
            "properties": [
                {
                    "name": "activity",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "company",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "country",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Country",
                    "optional": true,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "representative",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Representative",
                    "optional": true,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 17
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "ErrorValidationApi",
            "id": "interface-ErrorValidationApi-d17e089a18fdda7ffd8ed5f100a152c0534020ca1bd705986cc59a719a5f6bf2c29ff14b3a4687442cf5c160fa1dfae39d726e09d4b2e88ae0f61e5fa6c6df8e",
            "file": "src/app/core/service/message-box.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from '@angular/core';\r\n\r\nimport { MessageService } from 'primeng/api';\r\n\r\nexport interface ErrorValidationApi {\r\n    key: string;\r\n    message: any[];\r\n}\r\n\r\n/**\r\n * A convenient service for showing notification message box\r\n */\r\n@Injectable({\r\n    providedIn: 'root',\r\n\r\n})\r\nexport class MessageBoxService {\r\n    constructor(private messageService: MessageService) {}\r\n\r\n    public showWarn(message: string, title: string = 'Warning') {\r\n        this.showMessage('warn', title, message);\r\n    }\r\n\r\n    public showSuccess(message: string, title: string = 'Success') {\r\n        this.showMessage('success', title, message);\r\n    }\r\n\r\n    public showInfo(message: string, title: string = 'Information') {\r\n        this.showMessage('info', title, message);\r\n    }\r\n\r\n    public showError(message: string, title: string = 'Error') {\r\n        this.showMessage('error', title, message);\r\n    }\r\n\r\n    private showMessage(severity: string, title: string, message: string) {\r\n        this.messageService.add({\r\n            severity,\r\n            summary: title,\r\n            detail: message,\r\n            key:'info'\r\n        });\r\n    }\r\n\r\n    /**\r\n     * This method is used to handle 422 HTTP status response from API\r\n     * with status code = 444 (JSON Format validation violation)\r\n     * @param   errorValidationApi List of Error Validation API\r\n     * @returns any[]\r\n     */\r\n    public showMessageValidationFromApi(\r\n        errorValidationApi: ErrorValidationApi[]\r\n    ): void {\r\n        const msgs: any[] = [];\r\n\r\n        for (const summary of errorValidationApi) {\r\n            for (const detail of summary.message) {\r\n                msgs.push({\r\n                    severity: 'warn',\r\n                    summary: summary.key,\r\n                    detail,\r\n                });\r\n            }\r\n        }\r\n\r\n        this.messageService.addAll(msgs);\r\n    }\r\n}\r\n",
            "properties": [
                {
                    "name": "key",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "message",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "Image",
            "id": "interface-Image-c43d940369611864b543e2302238a5acffbfb8588adbcde644efab7fa9f04d5a3d0c842ed6a5433c4e81f75fba00a62754a059a1f70a62093562ba5dbf19efb7",
            "file": "src/app/showcase/api/image.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Image {\r\n    previewImageSrc?;\r\n    thumbnailImageSrc?;\r\n    alt?;\r\n    title?;\r\n}\r\n",
            "properties": [
                {
                    "name": "alt",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "previewImageSrc",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": true,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "thumbnailImageSrc",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": true,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": true,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "Item",
            "id": "interface-Item-b5073a137a63b3cf05e9a2a5f1fdf21d8abd99efd986897d6415508e82502159a27e15c9794d1134648dbb157ca0fb85d2783153300a12394d9a2d14fe0011e9",
            "file": "src/app/core/service/authentication.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { AppConstant } from '../config/app.config';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class AuthenticationService {\r\n    privilegeMenu: any;\r\n\r\n    constructor() {}\r\n\r\n    private setLocalStorage(key: string, value: any) {\r\n        localStorage.setItem(key, btoa(JSON.stringify(value)));\r\n    }\r\n\r\n    private getLocalStorage(key: string) {\r\n        const item = localStorage.getItem(key);\r\n\r\n        if (item) {\r\n            return JSON.parse(atob(item));\r\n        } else {\r\n            return item;\r\n        }\r\n    }\r\n\r\n    isLoggedIn(): boolean {\r\n        return this.getLocalStorage(AppConstant.userSessionKey) !== null;\r\n    }\r\n\r\n    destroySession() {\r\n        localStorage.clear();\r\n    }\r\n\r\n    createSession(session) {\r\n        this.setLocalStorage(AppConstant.userSessionKey, session);\r\n        localStorage.setItem('seen_badge', 'false');\r\n    }\r\n    getSession(): UserSession {\r\n        if (!this.getLocalStorage(AppConstant.userSessionKey).token) {\r\n            return JSON.parse(this.getLocalStorage(AppConstant.userSessionKey));\r\n        } else {\r\n            return this.getLocalStorage(AppConstant.userSessionKey);\r\n        }\r\n    }\r\n}\r\nexport interface UserSession {\r\n    token: Token;\r\n    user: User;\r\n    selectedCompanyId: string;\r\n    subStat: string;\r\n}\r\n\r\ninterface User {\r\n    id: string;\r\n    userRoles: any[];\r\n    tenant: Tenant;\r\n    isSa: boolean;\r\n    version: number;\r\n}\r\n\r\ninterface Tenant {\r\n    id: string;\r\n    companies: Company[];\r\n    tenantModules: TenantModule[];\r\n}\r\n\r\ninterface TenantModule {\r\n    id: string;\r\n    label: string;\r\n    icon: string;\r\n    routerLink: string[];\r\n    items: Item2[];\r\n    userWidgets: any[];\r\n}\r\n\r\ninterface Item2 {\r\n    id: string;\r\n    label: string;\r\n    routerLink: (null | null | string | string)[];\r\n    icon: string;\r\n    items?: Item[];\r\n}\r\n\r\ninterface Item {\r\n    id: string;\r\n    label: string;\r\n    routerLink: string[];\r\n    icon: string;\r\n}\r\n\r\ninterface Company {\r\n    id: string;\r\n    name: string;\r\n}\r\n\r\ninterface Token {\r\n    accessToken: string;\r\n    refreshToken: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 88
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 85
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 86
                },
                {
                    "name": "routerLink",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 87
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "Item2",
            "id": "interface-Item2-b5073a137a63b3cf05e9a2a5f1fdf21d8abd99efd986897d6415508e82502159a27e15c9794d1134648dbb157ca0fb85d2783153300a12394d9a2d14fe0011e9",
            "file": "src/app/core/service/authentication.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { AppConstant } from '../config/app.config';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class AuthenticationService {\r\n    privilegeMenu: any;\r\n\r\n    constructor() {}\r\n\r\n    private setLocalStorage(key: string, value: any) {\r\n        localStorage.setItem(key, btoa(JSON.stringify(value)));\r\n    }\r\n\r\n    private getLocalStorage(key: string) {\r\n        const item = localStorage.getItem(key);\r\n\r\n        if (item) {\r\n            return JSON.parse(atob(item));\r\n        } else {\r\n            return item;\r\n        }\r\n    }\r\n\r\n    isLoggedIn(): boolean {\r\n        return this.getLocalStorage(AppConstant.userSessionKey) !== null;\r\n    }\r\n\r\n    destroySession() {\r\n        localStorage.clear();\r\n    }\r\n\r\n    createSession(session) {\r\n        this.setLocalStorage(AppConstant.userSessionKey, session);\r\n        localStorage.setItem('seen_badge', 'false');\r\n    }\r\n    getSession(): UserSession {\r\n        if (!this.getLocalStorage(AppConstant.userSessionKey).token) {\r\n            return JSON.parse(this.getLocalStorage(AppConstant.userSessionKey));\r\n        } else {\r\n            return this.getLocalStorage(AppConstant.userSessionKey);\r\n        }\r\n    }\r\n}\r\nexport interface UserSession {\r\n    token: Token;\r\n    user: User;\r\n    selectedCompanyId: string;\r\n    subStat: string;\r\n}\r\n\r\ninterface User {\r\n    id: string;\r\n    userRoles: any[];\r\n    tenant: Tenant;\r\n    isSa: boolean;\r\n    version: number;\r\n}\r\n\r\ninterface Tenant {\r\n    id: string;\r\n    companies: Company[];\r\n    tenantModules: TenantModule[];\r\n}\r\n\r\ninterface TenantModule {\r\n    id: string;\r\n    label: string;\r\n    icon: string;\r\n    routerLink: string[];\r\n    items: Item2[];\r\n    userWidgets: any[];\r\n}\r\n\r\ninterface Item2 {\r\n    id: string;\r\n    label: string;\r\n    routerLink: (null | null | string | string)[];\r\n    icon: string;\r\n    items?: Item[];\r\n}\r\n\r\ninterface Item {\r\n    id: string;\r\n    label: string;\r\n    routerLink: string[];\r\n    icon: string;\r\n}\r\n\r\ninterface Company {\r\n    id: string;\r\n    name: string;\r\n}\r\n\r\ninterface Token {\r\n    accessToken: string;\r\n    refreshToken: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 80
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 77
                },
                {
                    "name": "items",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Item[]",
                    "optional": true,
                    "description": "",
                    "line": 81
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 78
                },
                {
                    "name": "routerLink",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "(null | null | string | string)[]",
                    "optional": false,
                    "description": "",
                    "line": 79
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "Product",
            "id": "interface-Product-51f52bad475b8f7c3acf9319d67c12887da47a0bbdc9942d5844983750a51646bf14c1d5687e01be4fbd66fe27f444318d8b3a620bbbea13ec3b104b7e75ed7c",
            "file": "src/app/showcase/api/product.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Product {\r\n    id?: string;\r\n    code?: string;\r\n    name?: string;\r\n    description?: string;\r\n    price?: number;\r\n    quantity?: number;\r\n    inventoryStatus?: string;\r\n    category?: string;\r\n    image?: string;\r\n    rating?: number;\r\n}\r\n",
            "properties": [
                {
                    "name": "category",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "code",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "image",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "inventoryStatus",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "price",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "quantity",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "rating",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 11
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "Representative",
            "id": "interface-Representative-d3c2bcc43779a7fcd7f7db208994dd4e9444e38657d12fe9a25a8a1d8b80cc1cbaa1bfcdbb9a7cce0cc8967888c2d1a563add6b84f4b26417a6ad6db719f68a1",
            "file": "src/app/showcase/api/customer.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Country {\r\n    name?: string;\r\n    code?: string;\r\n}\r\n\r\nexport interface Representative {\r\n    name?: string;\r\n    image?: string;\r\n}\r\n\r\nexport interface Customer {\r\n    id?: number;\r\n    name?: string;\r\n    country?: Country;\r\n    company?: string;\r\n    date?: string;\r\n    status?: string;\r\n    activity?: number;\r\n    representative?: Representative;\r\n}\r\n",
            "properties": [
                {
                    "name": "image",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "Tenant",
            "id": "interface-Tenant-b5073a137a63b3cf05e9a2a5f1fdf21d8abd99efd986897d6415508e82502159a27e15c9794d1134648dbb157ca0fb85d2783153300a12394d9a2d14fe0011e9",
            "file": "src/app/core/service/authentication.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { AppConstant } from '../config/app.config';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class AuthenticationService {\r\n    privilegeMenu: any;\r\n\r\n    constructor() {}\r\n\r\n    private setLocalStorage(key: string, value: any) {\r\n        localStorage.setItem(key, btoa(JSON.stringify(value)));\r\n    }\r\n\r\n    private getLocalStorage(key: string) {\r\n        const item = localStorage.getItem(key);\r\n\r\n        if (item) {\r\n            return JSON.parse(atob(item));\r\n        } else {\r\n            return item;\r\n        }\r\n    }\r\n\r\n    isLoggedIn(): boolean {\r\n        return this.getLocalStorage(AppConstant.userSessionKey) !== null;\r\n    }\r\n\r\n    destroySession() {\r\n        localStorage.clear();\r\n    }\r\n\r\n    createSession(session) {\r\n        this.setLocalStorage(AppConstant.userSessionKey, session);\r\n        localStorage.setItem('seen_badge', 'false');\r\n    }\r\n    getSession(): UserSession {\r\n        if (!this.getLocalStorage(AppConstant.userSessionKey).token) {\r\n            return JSON.parse(this.getLocalStorage(AppConstant.userSessionKey));\r\n        } else {\r\n            return this.getLocalStorage(AppConstant.userSessionKey);\r\n        }\r\n    }\r\n}\r\nexport interface UserSession {\r\n    token: Token;\r\n    user: User;\r\n    selectedCompanyId: string;\r\n    subStat: string;\r\n}\r\n\r\ninterface User {\r\n    id: string;\r\n    userRoles: any[];\r\n    tenant: Tenant;\r\n    isSa: boolean;\r\n    version: number;\r\n}\r\n\r\ninterface Tenant {\r\n    id: string;\r\n    companies: Company[];\r\n    tenantModules: TenantModule[];\r\n}\r\n\r\ninterface TenantModule {\r\n    id: string;\r\n    label: string;\r\n    icon: string;\r\n    routerLink: string[];\r\n    items: Item2[];\r\n    userWidgets: any[];\r\n}\r\n\r\ninterface Item2 {\r\n    id: string;\r\n    label: string;\r\n    routerLink: (null | null | string | string)[];\r\n    icon: string;\r\n    items?: Item[];\r\n}\r\n\r\ninterface Item {\r\n    id: string;\r\n    label: string;\r\n    routerLink: string[];\r\n    icon: string;\r\n}\r\n\r\ninterface Company {\r\n    id: string;\r\n    name: string;\r\n}\r\n\r\ninterface Token {\r\n    accessToken: string;\r\n    refreshToken: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "companies",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Company[]",
                    "optional": false,
                    "description": "",
                    "line": 63
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 62
                },
                {
                    "name": "tenantModules",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TenantModule[]",
                    "optional": false,
                    "description": "",
                    "line": 64
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "TenantModule",
            "id": "interface-TenantModule-b5073a137a63b3cf05e9a2a5f1fdf21d8abd99efd986897d6415508e82502159a27e15c9794d1134648dbb157ca0fb85d2783153300a12394d9a2d14fe0011e9",
            "file": "src/app/core/service/authentication.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { AppConstant } from '../config/app.config';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class AuthenticationService {\r\n    privilegeMenu: any;\r\n\r\n    constructor() {}\r\n\r\n    private setLocalStorage(key: string, value: any) {\r\n        localStorage.setItem(key, btoa(JSON.stringify(value)));\r\n    }\r\n\r\n    private getLocalStorage(key: string) {\r\n        const item = localStorage.getItem(key);\r\n\r\n        if (item) {\r\n            return JSON.parse(atob(item));\r\n        } else {\r\n            return item;\r\n        }\r\n    }\r\n\r\n    isLoggedIn(): boolean {\r\n        return this.getLocalStorage(AppConstant.userSessionKey) !== null;\r\n    }\r\n\r\n    destroySession() {\r\n        localStorage.clear();\r\n    }\r\n\r\n    createSession(session) {\r\n        this.setLocalStorage(AppConstant.userSessionKey, session);\r\n        localStorage.setItem('seen_badge', 'false');\r\n    }\r\n    getSession(): UserSession {\r\n        if (!this.getLocalStorage(AppConstant.userSessionKey).token) {\r\n            return JSON.parse(this.getLocalStorage(AppConstant.userSessionKey));\r\n        } else {\r\n            return this.getLocalStorage(AppConstant.userSessionKey);\r\n        }\r\n    }\r\n}\r\nexport interface UserSession {\r\n    token: Token;\r\n    user: User;\r\n    selectedCompanyId: string;\r\n    subStat: string;\r\n}\r\n\r\ninterface User {\r\n    id: string;\r\n    userRoles: any[];\r\n    tenant: Tenant;\r\n    isSa: boolean;\r\n    version: number;\r\n}\r\n\r\ninterface Tenant {\r\n    id: string;\r\n    companies: Company[];\r\n    tenantModules: TenantModule[];\r\n}\r\n\r\ninterface TenantModule {\r\n    id: string;\r\n    label: string;\r\n    icon: string;\r\n    routerLink: string[];\r\n    items: Item2[];\r\n    userWidgets: any[];\r\n}\r\n\r\ninterface Item2 {\r\n    id: string;\r\n    label: string;\r\n    routerLink: (null | null | string | string)[];\r\n    icon: string;\r\n    items?: Item[];\r\n}\r\n\r\ninterface Item {\r\n    id: string;\r\n    label: string;\r\n    routerLink: string[];\r\n    icon: string;\r\n}\r\n\r\ninterface Company {\r\n    id: string;\r\n    name: string;\r\n}\r\n\r\ninterface Token {\r\n    accessToken: string;\r\n    refreshToken: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 70
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 68
                },
                {
                    "name": "items",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Item2[]",
                    "optional": false,
                    "description": "",
                    "line": 72
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 69
                },
                {
                    "name": "routerLink",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 71
                },
                {
                    "name": "userWidgets",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 73
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "Token",
            "id": "interface-Token-b5073a137a63b3cf05e9a2a5f1fdf21d8abd99efd986897d6415508e82502159a27e15c9794d1134648dbb157ca0fb85d2783153300a12394d9a2d14fe0011e9",
            "file": "src/app/core/service/authentication.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { AppConstant } from '../config/app.config';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class AuthenticationService {\r\n    privilegeMenu: any;\r\n\r\n    constructor() {}\r\n\r\n    private setLocalStorage(key: string, value: any) {\r\n        localStorage.setItem(key, btoa(JSON.stringify(value)));\r\n    }\r\n\r\n    private getLocalStorage(key: string) {\r\n        const item = localStorage.getItem(key);\r\n\r\n        if (item) {\r\n            return JSON.parse(atob(item));\r\n        } else {\r\n            return item;\r\n        }\r\n    }\r\n\r\n    isLoggedIn(): boolean {\r\n        return this.getLocalStorage(AppConstant.userSessionKey) !== null;\r\n    }\r\n\r\n    destroySession() {\r\n        localStorage.clear();\r\n    }\r\n\r\n    createSession(session) {\r\n        this.setLocalStorage(AppConstant.userSessionKey, session);\r\n        localStorage.setItem('seen_badge', 'false');\r\n    }\r\n    getSession(): UserSession {\r\n        if (!this.getLocalStorage(AppConstant.userSessionKey).token) {\r\n            return JSON.parse(this.getLocalStorage(AppConstant.userSessionKey));\r\n        } else {\r\n            return this.getLocalStorage(AppConstant.userSessionKey);\r\n        }\r\n    }\r\n}\r\nexport interface UserSession {\r\n    token: Token;\r\n    user: User;\r\n    selectedCompanyId: string;\r\n    subStat: string;\r\n}\r\n\r\ninterface User {\r\n    id: string;\r\n    userRoles: any[];\r\n    tenant: Tenant;\r\n    isSa: boolean;\r\n    version: number;\r\n}\r\n\r\ninterface Tenant {\r\n    id: string;\r\n    companies: Company[];\r\n    tenantModules: TenantModule[];\r\n}\r\n\r\ninterface TenantModule {\r\n    id: string;\r\n    label: string;\r\n    icon: string;\r\n    routerLink: string[];\r\n    items: Item2[];\r\n    userWidgets: any[];\r\n}\r\n\r\ninterface Item2 {\r\n    id: string;\r\n    label: string;\r\n    routerLink: (null | null | string | string)[];\r\n    icon: string;\r\n    items?: Item[];\r\n}\r\n\r\ninterface Item {\r\n    id: string;\r\n    label: string;\r\n    routerLink: string[];\r\n    icon: string;\r\n}\r\n\r\ninterface Company {\r\n    id: string;\r\n    name: string;\r\n}\r\n\r\ninterface Token {\r\n    accessToken: string;\r\n    refreshToken: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "accessToken",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 97
                },
                {
                    "name": "refreshToken",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 98
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "UploadEvent",
            "id": "interface-UploadEvent-c0cc1796a382fc6d15ae47845318b8b5d57642133094671376bb5069c99d29e011d6770f4c4659b05d9f3b7e51172a0ce65a2d4c446108919fc66122d5bf5dc5",
            "file": "src/stories/primeng/input-fields/input-file-upload/input-file-upload.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { MessageService } from 'primeng/api';\r\n\r\ninterface UploadEvent {\r\n    originalEvent: Event;\r\n    files: File[];\r\n}\r\n@Component({\r\n    selector: 'c-fileUpload',\r\n    template: ` <p-fileUpload\r\n        mode=\"basic\"\r\n        chooseLabel=\"Choose\"\r\n        name=\"demo[]\"\r\n        url=\"https://www.primefaces.org/cdn/api/upload.php\"\r\n        accept=\"image/*\"\r\n        [maxFileSize]=\"maxFileSize\"\r\n        (onUpload)=\"onUpload($event)\"\r\n    ></p-fileUpload>`,\r\n    styleUrls: [],\r\n    providers: [MessageService],\r\n})\r\nexport default class InputUpload {\r\n    @Input() maxFileSize = 1048576;\r\n\r\n    constructor(private messageService: MessageService) {}\r\n\r\n    onUpload(event: UploadEvent) {\r\n        this.messageService.add({\r\n            severity: 'info',\r\n            summary: 'Success',\r\n            detail: 'File Uploaded with Basic Mode',\r\n        });\r\n    }\r\n}\r\n",
            "properties": [
                {
                    "name": "files",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "File[]",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "originalEvent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Event",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        },
        {
            "name": "User",
            "id": "interface-User-9c7e5f1bbbab702cb032307d130876cb68969b0cd4eedef32a0c8cad8081a54e5f8f577ed6ad4539c1b99a1d246cb34031d198c2ea8eba440e64e91b14f01fdc",
            "file": "src/stories/User.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {}\n",
            "properties": [],
            "indexSignatures": [],
            "methods": []
        },
        {
            "name": "User",
            "id": "interface-User-b5073a137a63b3cf05e9a2a5f1fdf21d8abd99efd986897d6415508e82502159a27e15c9794d1134648dbb157ca0fb85d2783153300a12394d9a2d14fe0011e9-1",
            "file": "src/app/core/service/authentication.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { AppConstant } from '../config/app.config';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class AuthenticationService {\r\n    privilegeMenu: any;\r\n\r\n    constructor() {}\r\n\r\n    private setLocalStorage(key: string, value: any) {\r\n        localStorage.setItem(key, btoa(JSON.stringify(value)));\r\n    }\r\n\r\n    private getLocalStorage(key: string) {\r\n        const item = localStorage.getItem(key);\r\n\r\n        if (item) {\r\n            return JSON.parse(atob(item));\r\n        } else {\r\n            return item;\r\n        }\r\n    }\r\n\r\n    isLoggedIn(): boolean {\r\n        return this.getLocalStorage(AppConstant.userSessionKey) !== null;\r\n    }\r\n\r\n    destroySession() {\r\n        localStorage.clear();\r\n    }\r\n\r\n    createSession(session) {\r\n        this.setLocalStorage(AppConstant.userSessionKey, session);\r\n        localStorage.setItem('seen_badge', 'false');\r\n    }\r\n    getSession(): UserSession {\r\n        if (!this.getLocalStorage(AppConstant.userSessionKey).token) {\r\n            return JSON.parse(this.getLocalStorage(AppConstant.userSessionKey));\r\n        } else {\r\n            return this.getLocalStorage(AppConstant.userSessionKey);\r\n        }\r\n    }\r\n}\r\nexport interface UserSession {\r\n    token: Token;\r\n    user: User;\r\n    selectedCompanyId: string;\r\n    subStat: string;\r\n}\r\n\r\ninterface User {\r\n    id: string;\r\n    userRoles: any[];\r\n    tenant: Tenant;\r\n    isSa: boolean;\r\n    version: number;\r\n}\r\n\r\ninterface Tenant {\r\n    id: string;\r\n    companies: Company[];\r\n    tenantModules: TenantModule[];\r\n}\r\n\r\ninterface TenantModule {\r\n    id: string;\r\n    label: string;\r\n    icon: string;\r\n    routerLink: string[];\r\n    items: Item2[];\r\n    userWidgets: any[];\r\n}\r\n\r\ninterface Item2 {\r\n    id: string;\r\n    label: string;\r\n    routerLink: (null | null | string | string)[];\r\n    icon: string;\r\n    items?: Item[];\r\n}\r\n\r\ninterface Item {\r\n    id: string;\r\n    label: string;\r\n    routerLink: string[];\r\n    icon: string;\r\n}\r\n\r\ninterface Company {\r\n    id: string;\r\n    name: string;\r\n}\r\n\r\ninterface Token {\r\n    accessToken: string;\r\n    refreshToken: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 54
                },
                {
                    "name": "isSa",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 57
                },
                {
                    "name": "tenant",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Tenant",
                    "optional": false,
                    "description": "",
                    "line": 56
                },
                {
                    "name": "userRoles",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 55
                },
                {
                    "name": "version",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 58
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "User-1"
        },
        {
            "name": "UserSession",
            "id": "interface-UserSession-b5073a137a63b3cf05e9a2a5f1fdf21d8abd99efd986897d6415508e82502159a27e15c9794d1134648dbb157ca0fb85d2783153300a12394d9a2d14fe0011e9",
            "file": "src/app/core/service/authentication.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { AppConstant } from '../config/app.config';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class AuthenticationService {\r\n    privilegeMenu: any;\r\n\r\n    constructor() {}\r\n\r\n    private setLocalStorage(key: string, value: any) {\r\n        localStorage.setItem(key, btoa(JSON.stringify(value)));\r\n    }\r\n\r\n    private getLocalStorage(key: string) {\r\n        const item = localStorage.getItem(key);\r\n\r\n        if (item) {\r\n            return JSON.parse(atob(item));\r\n        } else {\r\n            return item;\r\n        }\r\n    }\r\n\r\n    isLoggedIn(): boolean {\r\n        return this.getLocalStorage(AppConstant.userSessionKey) !== null;\r\n    }\r\n\r\n    destroySession() {\r\n        localStorage.clear();\r\n    }\r\n\r\n    createSession(session) {\r\n        this.setLocalStorage(AppConstant.userSessionKey, session);\r\n        localStorage.setItem('seen_badge', 'false');\r\n    }\r\n    getSession(): UserSession {\r\n        if (!this.getLocalStorage(AppConstant.userSessionKey).token) {\r\n            return JSON.parse(this.getLocalStorage(AppConstant.userSessionKey));\r\n        } else {\r\n            return this.getLocalStorage(AppConstant.userSessionKey);\r\n        }\r\n    }\r\n}\r\nexport interface UserSession {\r\n    token: Token;\r\n    user: User;\r\n    selectedCompanyId: string;\r\n    subStat: string;\r\n}\r\n\r\ninterface User {\r\n    id: string;\r\n    userRoles: any[];\r\n    tenant: Tenant;\r\n    isSa: boolean;\r\n    version: number;\r\n}\r\n\r\ninterface Tenant {\r\n    id: string;\r\n    companies: Company[];\r\n    tenantModules: TenantModule[];\r\n}\r\n\r\ninterface TenantModule {\r\n    id: string;\r\n    label: string;\r\n    icon: string;\r\n    routerLink: string[];\r\n    items: Item2[];\r\n    userWidgets: any[];\r\n}\r\n\r\ninterface Item2 {\r\n    id: string;\r\n    label: string;\r\n    routerLink: (null | null | string | string)[];\r\n    icon: string;\r\n    items?: Item[];\r\n}\r\n\r\ninterface Item {\r\n    id: string;\r\n    label: string;\r\n    routerLink: string[];\r\n    icon: string;\r\n}\r\n\r\ninterface Company {\r\n    id: string;\r\n    name: string;\r\n}\r\n\r\ninterface Token {\r\n    accessToken: string;\r\n    refreshToken: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "selectedCompanyId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "subStat",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "token",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Token",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User",
                    "optional": false,
                    "description": "",
                    "line": 48
                }
            ],
            "indexSignatures": [],
            "kind": 168,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "ApiService",
            "id": "injectable-ApiService-cd9c04a9efd352ef1324ec45313df2d597666b49bcd5ad9fd1e92ff4c2f80d35aebe9c2aef30bdb4c4900d1dd6fb739940300926efac824ddd64cd757ed2692b",
            "file": "src/app/core/service/api.service.ts",
            "properties": [
                {
                    "name": "header",
                    "defaultValue": "new HttpHeaders()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "headerUpload",
                    "defaultValue": "new HttpHeaders()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "userSession",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                }
            ],
            "methods": [
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "uri",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "isShowSpinner",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 223,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "uri",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "isShowSpinner",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteAll",
                    "args": [
                        {
                            "name": "uri",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "body",
                            "type": "object[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 255,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "uri",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "body",
                            "type": "object[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "dummyGet",
                    "args": [],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 308,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "get",
                    "args": [
                        {
                            "name": "uri",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "param",
                            "type": "HttpParams",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "isShowSpinner",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 130,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "uri",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "param",
                            "type": "HttpParams",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "isShowSpinner",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getCompany",
                    "args": [
                        {
                            "name": "uri",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "param",
                            "type": "HttpParams",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 288,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "uri",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "param",
                            "type": "HttpParams",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getDummyHeaders",
                    "args": [
                        {
                            "name": "str",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "HttpHeaders",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "str",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getHeaders",
                    "args": [],
                    "optional": false,
                    "returnType": "HttpHeaders",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getHeaderUpload",
                    "args": [],
                    "optional": false,
                    "returnType": "HttpHeaders",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getSSOToken",
                    "args": [
                        {
                            "name": "isShowSpinner",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 83,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isShowSpinner",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleError",
                    "args": [
                        {
                            "name": "err",
                            "type": "HttpErrorResponse",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "err",
                            "type": "HttpErrorResponse",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "logout",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 242,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "mapToAppResponse",
                    "args": [
                        {
                            "name": "response",
                            "type": "HttpResponse<any>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "response",
                            "type": "HttpResponse<any>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "patch",
                    "args": [
                        {
                            "name": "uri",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "body",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "isShowSpinner",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 269,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "uri",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "body",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "isShowSpinner",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "post",
                    "args": [
                        {
                            "name": "uri",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "body",
                            "type": "object",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "isShowSpinner",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 150,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "uri",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "body",
                            "type": "object",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "isShowSpinner",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "postFormData",
                    "args": [
                        {
                            "name": "uri",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "body",
                            "type": "object",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "isShowSpinner",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 168,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "uri",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "body",
                            "type": "object",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "isShowSpinner",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "postFormDataProgress",
                    "args": [
                        {
                            "name": "uri",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "body",
                            "type": "object",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 301,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "uri",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "body",
                            "type": "object",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "postLogin",
                    "args": [
                        {
                            "name": "uri",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "body",
                            "type": "object",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "isShowSpinner",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "uri",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "body",
                            "type": "object",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "isShowSpinner",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "postLoginSSO",
                    "args": [
                        {
                            "name": "token",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "isShowSpinner",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 106,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "token",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "isShowSpinner",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "put",
                    "args": [
                        {
                            "name": "uri",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "body",
                            "type": "object",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "isShowSpinner",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 187,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "uri",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "body",
                            "type": "object",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "isShowSpinner",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "putFormData",
                    "args": [
                        {
                            "name": "uri",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "body",
                            "type": "object",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "isShowSpinner",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 205,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "uri",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "body",
                            "type": "object",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "isShowSpinner",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "<p>Http wrapper service</p>\n",
            "rawdescription": "\n\nHttp wrapper service\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport {\r\n    HttpClient,\r\n    HttpErrorResponse,\r\n    HttpHeaders,\r\n    HttpParams,\r\n    HttpResponse,\r\n} from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, finalize, map } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { AuthenticationService } from './authentication.service';\r\n\r\n/**\r\n * Http wrapper service\r\n */\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class ApiService {\r\n    protected header = new HttpHeaders();\r\n    protected headerUpload = new HttpHeaders();\r\n    userSession;\r\n    constructor(\r\n        private httpClient: HttpClient,\r\n        private spinner: NgxSpinnerService,\r\n        private authService: AuthenticationService\r\n    ) {}\r\n    getHeaders(): HttpHeaders {\r\n        return this.header\r\n            .append(\r\n                'Authorization',\r\n                'Bearer ' + this.authService.getSession()?.token?.accessToken\r\n            )\r\n            .append('Accept', 'application/json')\r\n            .append('Content-Type', 'application/json');\r\n    }\r\n    getHeaderUpload(): HttpHeaders {\r\n        return this.header\r\n            .append(\r\n                'Authorization',\r\n                'Bearer ' + this.authService.getSession()?.token?.accessToken\r\n            )\r\n            .append('enctype', 'multipart/form-data');\r\n    }\r\n    getDummyHeaders(str): HttpHeaders {\r\n        return this.header\r\n            .append(\r\n                'Authorization',\r\n                'Bearer '+str)\r\n            .append('Accept', 'application/json')\r\n            .append('Content-Type', 'application/json');\r\n    }\r\n    private handleError(err: HttpErrorResponse): Observable<any> {\r\n        return throwError(err.error);\r\n    }\r\n\r\n    private mapToAppResponse(response: HttpResponse<any>): any {\r\n        return response.body;\r\n    }\r\n\r\n    postLogin(uri: string, body: object, isShowSpinner?): Observable<any> {\r\n        //pasang loading\r\n        if (isShowSpinner) {\r\n            this.spinner.show();\r\n        }\r\n        return this.httpClient\r\n            .post<any>(environment.apiUrl + uri, body, {\r\n                observe: 'response',\r\n                responseType: 'text' as 'json',\r\n            })\r\n            .pipe(\r\n                map((response) => this.mapToAppResponse(response)),\r\n                catchError(this.handleError),\r\n                finalize(() => {\r\n                    this.spinner.hide();\r\n                })\r\n            );\r\n    }\r\n\r\n    getSSOToken(\r\n        isShowSpinner?\r\n    ): Observable<any> {\r\n        if (isShowSpinner) {\r\n            this.spinner.show();\r\n        }\r\n        return this.httpClient\r\n            .post<any>(environment.apiUrl + \"open/auth/login\",\r\n            {\r\n                \"username\": \"upahkuweb\",\r\n                \"password\": \"password123*\",\r\n            }, {\r\n                observe: 'response',\r\n            })\r\n            .pipe(\r\n                map((response) => this.mapToAppResponse(response)),\r\n                catchError(this.handleError),\r\n                finalize(() => {\r\n                    this.spinner.hide();\r\n                })\r\n            );\r\n    }\r\n\r\n    postLoginSSO(token,\r\n        isShowSpinner?\r\n    ): Observable<any> {\r\n        if (isShowSpinner) {\r\n            this.spinner.show();\r\n        }\r\n        return this.httpClient\r\n            .post<any>(environment.apiUrl + \"open/auth/code\",{\r\n                \"username\": \"ADMWID032000\",\r\n                \"password\": \"63sqom19Z5\",\r\n                \"agent\":navigator.userAgent,\r\n            }, {\r\n                headers: this.getDummyHeaders(token),\r\n                observe: 'response',\r\n            })\r\n            .pipe(\r\n                map((response) => this.mapToAppResponse(response)),\r\n                catchError(this.handleError),\r\n                finalize(() => {\r\n                    this.spinner.hide();\r\n                })\r\n            );\r\n    }\r\n\r\n    get(uri: string, param?: HttpParams, isShowSpinner?): Observable<any> {\r\n        //pasang loading\r\n        if (isShowSpinner) {\r\n            this.spinner.show();\r\n        }\r\n        return this.httpClient\r\n            .get<any>(environment.apiUrl + uri, {\r\n                headers: this.getHeaders(),\r\n                observe: 'response',\r\n                params: param,\r\n            })\r\n            .pipe(\r\n                map((response) => this.mapToAppResponse(response)),\r\n                catchError(this.handleError),\r\n                finalize(() => {\r\n                    this.spinner.hide();\r\n                })\r\n            );\r\n    }\r\n\r\n    post(uri: string, body: object, isShowSpinner?): Observable<any> {\r\n        if (isShowSpinner) {\r\n            this.spinner.show();\r\n        }\r\n        return this.httpClient\r\n            .post<any>(environment.apiUrl + uri, body, {\r\n                headers: this.getHeaders(),\r\n                observe: 'response',\r\n                responseType: 'text' as 'json',\r\n            })\r\n            .pipe(\r\n                map((response) => this.mapToAppResponse(response)),\r\n                catchError(this.handleError),\r\n                finalize(() => {\r\n                    this.spinner.hide();\r\n                })\r\n            );\r\n    }\r\n    postFormData(uri: string, body: object, isShowSpinner?): Observable<any> {\r\n        if (isShowSpinner) {\r\n            this.spinner.show();\r\n        }\r\n        return this.httpClient\r\n            .post<any>(environment.apiUrl + uri, body, {\r\n                headers: this.getHeaderUpload(),\r\n                observe: 'response',\r\n                responseType: 'text' as 'json',\r\n            })\r\n            .pipe(\r\n                map((response) => this.mapToAppResponse(response)),\r\n                catchError(this.handleError),\r\n                finalize(() => {\r\n                    this.spinner.hide();\r\n                })\r\n            );\r\n    }\r\n\r\n    put(uri: string, body: object, isShowSpinner?): Observable<any> {\r\n        if (isShowSpinner) {\r\n            this.spinner.show();\r\n        }\r\n        return this.httpClient\r\n            .put<any>(environment.apiUrl + uri, body, {\r\n                headers: this.getHeaders(),\r\n                observe: 'response',\r\n                responseType: 'text' as 'json',\r\n            })\r\n            .pipe(\r\n                map((response) => this.mapToAppResponse(response)),\r\n                catchError(this.handleError),\r\n                finalize(() => {\r\n                    this.spinner.hide();\r\n                })\r\n            );\r\n    }\r\n    putFormData(uri: string, body: object, isShowSpinner?): Observable<any> {\r\n        if (isShowSpinner) {\r\n            this.spinner.show();\r\n        }\r\n        return this.httpClient\r\n            .put<any>(environment.apiUrl + uri, body, {\r\n                headers: this.getHeaderUpload(),\r\n                observe: 'response',\r\n                responseType: 'text' as 'json',\r\n            })\r\n            .pipe(\r\n                map((response) => this.mapToAppResponse(response)),\r\n                catchError(this.handleError),\r\n                finalize(() => {\r\n                    this.spinner.hide();\r\n                })\r\n            );\r\n    }\r\n    delete(uri: string, isShowSpinner?): Observable<any> {\r\n        if (isShowSpinner) {\r\n            this.spinner.show();\r\n        }\r\n        return this.httpClient\r\n            .delete<any>(environment.apiUrl + uri, {\r\n                headers: this.getHeaders(),\r\n                observe: 'response',\r\n                responseType: 'text' as 'json',\r\n            })\r\n            .pipe(\r\n                map((response) => this.mapToAppResponse(response)),\r\n                catchError(this.handleError),\r\n                finalize(() => {\r\n                    this.spinner.hide();\r\n                })\r\n            );\r\n    }\r\n\r\n    logout(): Observable<any> {\r\n        return this.httpClient\r\n            .delete<any>(environment.apiUrl + 'logout', {\r\n                headers: this.getHeaders(),\r\n                observe: 'response',\r\n                responseType: 'text' as 'json',\r\n            })\r\n            .pipe(\r\n                map((response) => this.mapToAppResponse(response)),\r\n                catchError(this.handleError)\r\n            );\r\n    }\r\n\r\n    deleteAll(uri: string, body: object[]): Observable<any> {\r\n        return this.httpClient\r\n            .request('DELETE', environment.apiUrl + uri, {\r\n                headers: this.getHeaders(),\r\n                observe: 'response',\r\n                responseType: 'text' as 'json',\r\n                body,\r\n            })\r\n            .pipe(\r\n                map((response) => this.mapToAppResponse(response)),\r\n                catchError(this.handleError)\r\n            );\r\n    }\r\n\r\n    patch(uri: string, body?: any, isShowSpinner?): Observable<any> {\r\n        if (isShowSpinner) {\r\n            this.spinner.show();\r\n        }\r\n        return this.httpClient\r\n            .patch<any>(environment.apiUrl + uri, body, {\r\n                headers: this.getHeaders(),\r\n                observe: 'response',\r\n                responseType: 'text' as 'json',\r\n            })\r\n            .pipe(\r\n                map((response) => this.mapToAppResponse(response)),\r\n                catchError(this.handleError),\r\n                finalize(() => {\r\n                    this.spinner.hide();\r\n                })\r\n            );\r\n    }\r\n\r\n    getCompany(uri: string, param?: HttpParams): Observable<any> {\r\n        return this.httpClient\r\n            .get<any>(environment.apiUrl + uri, {\r\n                headers: this.getHeaders(),\r\n                observe: 'response',\r\n                params: param,\r\n            })\r\n            .pipe(\r\n                map((response) => this.mapToAppResponse(response)),\r\n                catchError(this.handleError)\r\n            );\r\n    }\r\n\r\n    postFormDataProgress(uri: string, body: object): Observable<any> {\r\n        return this.httpClient.post<any>(environment.apiUrl + uri, body, {\r\n            reportProgress: true,\r\n            observe: 'events',\r\n            responseType: 'text' as 'json',\r\n        });\r\n    }\r\n    dummyGet() {\r\n        return [\r\n            { key: '1', value: '2020', id: '' },\r\n            { key: '2', value: '2021', id: '' },\r\n            { key: '3', value: '2022', id: '' },\r\n            { key: '4', value: '2023', id: '' },\r\n        ];\r\n    }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "spinner",
                        "type": "NgxSpinnerService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "authService",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 25,
                "jsdoctags": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "spinner",
                        "type": "NgxSpinnerService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "authService",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "AuthenticationService",
            "id": "injectable-AuthenticationService-b5073a137a63b3cf05e9a2a5f1fdf21d8abd99efd986897d6415508e82502159a27e15c9794d1134648dbb157ca0fb85d2783153300a12394d9a2d14fe0011e9",
            "file": "src/app/core/service/authentication.service.ts",
            "properties": [
                {
                    "name": "privilegeMenu",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "methods": [
                {
                    "name": "createSession",
                    "args": [
                        {
                            "name": "session",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "session",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "destroySession",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getLocalStorage",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getSession",
                    "args": [],
                    "optional": false,
                    "returnType": "UserSession",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "isLoggedIn",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setLocalStorage",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { AppConstant } from '../config/app.config';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class AuthenticationService {\r\n    privilegeMenu: any;\r\n\r\n    constructor() {}\r\n\r\n    private setLocalStorage(key: string, value: any) {\r\n        localStorage.setItem(key, btoa(JSON.stringify(value)));\r\n    }\r\n\r\n    private getLocalStorage(key: string) {\r\n        const item = localStorage.getItem(key);\r\n\r\n        if (item) {\r\n            return JSON.parse(atob(item));\r\n        } else {\r\n            return item;\r\n        }\r\n    }\r\n\r\n    isLoggedIn(): boolean {\r\n        return this.getLocalStorage(AppConstant.userSessionKey) !== null;\r\n    }\r\n\r\n    destroySession() {\r\n        localStorage.clear();\r\n    }\r\n\r\n    createSession(session) {\r\n        this.setLocalStorage(AppConstant.userSessionKey, session);\r\n        localStorage.setItem('seen_badge', 'false');\r\n    }\r\n    getSession(): UserSession {\r\n        if (!this.getLocalStorage(AppConstant.userSessionKey).token) {\r\n            return JSON.parse(this.getLocalStorage(AppConstant.userSessionKey));\r\n        } else {\r\n            return this.getLocalStorage(AppConstant.userSessionKey);\r\n        }\r\n    }\r\n}\r\nexport interface UserSession {\r\n    token: Token;\r\n    user: User;\r\n    selectedCompanyId: string;\r\n    subStat: string;\r\n}\r\n\r\ninterface User {\r\n    id: string;\r\n    userRoles: any[];\r\n    tenant: Tenant;\r\n    isSa: boolean;\r\n    version: number;\r\n}\r\n\r\ninterface Tenant {\r\n    id: string;\r\n    companies: Company[];\r\n    tenantModules: TenantModule[];\r\n}\r\n\r\ninterface TenantModule {\r\n    id: string;\r\n    label: string;\r\n    icon: string;\r\n    routerLink: string[];\r\n    items: Item2[];\r\n    userWidgets: any[];\r\n}\r\n\r\ninterface Item2 {\r\n    id: string;\r\n    label: string;\r\n    routerLink: (null | null | string | string)[];\r\n    icon: string;\r\n    items?: Item[];\r\n}\r\n\r\ninterface Item {\r\n    id: string;\r\n    label: string;\r\n    routerLink: string[];\r\n    icon: string;\r\n}\r\n\r\ninterface Company {\r\n    id: string;\r\n    name: string;\r\n}\r\n\r\ninterface Token {\r\n    accessToken: string;\r\n    refreshToken: string;\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "type": "injectable"
        },
        {
            "name": "AuthGuard",
            "id": "injectable-AuthGuard-1b1f37302e0b6c0c349f59845a690999b57e2af3cb5691abed6dc773b559b03a21201b885687438e09daab7f77192357c883878a127190ffebe7de1321fe279a",
            "file": "src/app/core/auth.guard.ts",
            "properties": [],
            "methods": [
                {
                    "name": "canActivate",
                    "args": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable | Promise | boolean | UrlTree",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { AuthenticationService } from './service/authentication.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard  {\r\n  constructor(\r\n    private auth: AuthenticationService,\r\n    private router:Router\r\n) { }\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n      if(!this.auth.isLoggedIn()){\r\n        if(environment.isSSO){\r\n          window.location.href = environment.linovWordpress;\r\n\r\n        }else{\r\n          this.router.navigate(['/login'])\r\n        }\r\n      }\r\n    return true;\r\n  }\r\n  \r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "auth",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "auth",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "ConfigService",
            "id": "injectable-ConfigService-d5c5bfba130c94b647965122f1e6910b55a9a8783bf9db4715a1406cb1e1a62a74f7b2c707682bb6b50ad585c64640845ef051625c45ab73a5956062965dd5fd",
            "file": "src/app/core/service/app.config.service.ts",
            "properties": [
                {
                    "name": "config",
                    "defaultValue": "{\r\n        theme: 'linov-default',\r\n        dark: false,\r\n        inputStyle: 'outlined',\r\n        ripple: true,\r\n        loading:false\r\n    }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AppConfig",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "configUpdate",
                    "defaultValue": "new Subject<AppConfig>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "configUpdate$",
                    "defaultValue": "this.configUpdate.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "menuToggle",
                    "defaultValue": "new Subject<Boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "menuToggle$",
                    "defaultValue": "this.menuToggle.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methods": [
                {
                    "name": "getConfig",
                    "args": [],
                    "optional": false,
                    "returnType": "AppConfig",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setLoading",
                    "args": [
                        {
                            "name": "boolean",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "boolean",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "triggerToggleMenu",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateConfig",
                    "args": [
                        {
                            "name": "config",
                            "type": "AppConfig",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "config",
                            "type": "AppConfig",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { AppConfig } from '../config/app.config';\r\n\r\n@Injectable()\r\nexport class ConfigService {\r\n\r\n    config: AppConfig = {\r\n        theme: 'linov-default',\r\n        dark: false,\r\n        inputStyle: 'outlined',\r\n        ripple: true,\r\n        loading:false\r\n    };\r\n\r\n    private configUpdate = new Subject<AppConfig>();\r\n\r\n    configUpdate$ = this.configUpdate.asObservable();\r\n\r\n    private menuToggle = new Subject<Boolean>();\r\n\r\n    menuToggle$ = this.menuToggle.asObservable();\r\n\r\n    updateConfig(config: AppConfig) {\r\n        this.config = config;\r\n        this.configUpdate.next(config);\r\n    }\r\n\r\n    triggerToggleMenu() {\r\n        this.menuToggle.next(true);\r\n    }\r\n\r\n    getConfig() {\r\n        return this.config;\r\n    }\r\n\r\n    setLoading(boolean){\r\n        this.config.loading=boolean;\r\n        this.configUpdate.next(this.config);\r\n    }\r\n}\r\n",
            "type": "injectable"
        },
        {
            "name": "ConfigService",
            "id": "injectable-ConfigService-b9bd6b809b2d77ad6306d47702e618acf2b8974d51f1d4dbbe7ce649bfe26b1e6fb7647694c93df1231b039a1cf0efcd4ac82abc6937658b7448579f18b6a1a9-1",
            "file": "src/app/showcase/service/app.config.service.ts",
            "properties": [
                {
                    "name": "config",
                    "defaultValue": "{\r\n        theme: 'linov-default',\r\n        dark: false,\r\n        inputStyle: 'outlined',\r\n        ripple: true,\r\n        loading:false\r\n    }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AppConfig",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "configUpdate",
                    "defaultValue": "new Subject<AppConfig>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "configUpdate$",
                    "defaultValue": "this.configUpdate.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "menuToggle",
                    "defaultValue": "new Subject<Boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "menuToggle$",
                    "defaultValue": "this.menuToggle.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methods": [
                {
                    "name": "getConfig",
                    "args": [],
                    "optional": false,
                    "returnType": "AppConfig",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setLoading",
                    "args": [
                        {
                            "name": "boolean",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "boolean",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "triggerToggleMenu",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateConfig",
                    "args": [
                        {
                            "name": "config",
                            "type": "AppConfig",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "config",
                            "type": "AppConfig",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { AppConfig } from '../api/appconfig';\r\n\r\n@Injectable()\r\nexport class ConfigService {\r\n\r\n    config: AppConfig = {\r\n        theme: 'linov-default',\r\n        dark: false,\r\n        inputStyle: 'outlined',\r\n        ripple: true,\r\n        loading:false\r\n    };\r\n\r\n    private configUpdate = new Subject<AppConfig>();\r\n\r\n    configUpdate$ = this.configUpdate.asObservable();\r\n\r\n    private menuToggle = new Subject<Boolean>();\r\n\r\n    menuToggle$ = this.menuToggle.asObservable();\r\n\r\n    updateConfig(config: AppConfig) {\r\n        this.config = config;\r\n        this.configUpdate.next(config);\r\n    }\r\n\r\n    triggerToggleMenu() {\r\n        this.menuToggle.next(true);\r\n    }\r\n\r\n    getConfig() {\r\n        return this.config;\r\n    }\r\n\r\n    setLoading(boolean){\r\n        this.config.loading=boolean;\r\n        this.configUpdate.next(this.config);\r\n    }\r\n}\r\n",
            "type": "injectable",
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "ConfigService-1"
        },
        {
            "name": "CountryService",
            "id": "injectable-CountryService-365371801c3ae69a8ff416f9f604f46b7140d36c59201893c45a6dac6f4994356fd7fa2d47797fd5add2c7830e0fa5be6ef753da2dd75e96ad6fbeb20c9c9a8c",
            "file": "src/app/showcase/service/countryservice.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getCountries",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 9,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class CountryService {\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getCountries() {\r\n    return this.http.get<any>('assets/demo/data/countries.json')\r\n      .toPromise()\r\n      .then(res => res.data as any[])\r\n      .then(data => data);\r\n    }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 5,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "CustomerService",
            "id": "injectable-CustomerService-9ba6592531ec693d9abd65c14f7cae0a0a78ab1b62acfc2b6d24813aaaf5ab05f6d381beb1407f8159a985495e4f2985b6b04fbd6c75d0c8980fcbcd3c86e503",
            "file": "src/app/showcase/service/customerservice.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getCustomersLarge",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getCustomersMedium",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getCustomersSmall",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Customer } from '../api/customer';\r\n\r\n@Injectable()\r\nexport class CustomerService {\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getCustomersSmall() {\r\n        return this.http.get<any>('assets/demo/data/customers-small.json')\r\n            .toPromise()\r\n            .then(res => res.data as Customer[])\r\n            .then(data => data);\r\n    }\r\n\r\n    getCustomersMedium() {\r\n        return this.http.get<any>('assets/demo/data/customers-medium.json')\r\n            .toPromise()\r\n            .then(res => res.data as Customer[])\r\n            .then(data => data);\r\n    }\r\n\r\n    getCustomersLarge() {\r\n        return this.http.get<any>('assets/demo/data/customers-large.json')\r\n            .toPromise()\r\n            .then(res => res.data as Customer[])\r\n            .then(data => data);\r\n    }\r\n\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "DashboardService",
            "id": "injectable-DashboardService-c04744909f5210ac96e812018dd39a2dd6d77ac064f250c3c1e055d93d0c99becbc7a90f7e3a08cf2ef66f34fdf13b5ea4b2602ba924bfc067faba66406fbfc2",
            "file": "src/app/core/dashboard/service/dashboard.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getAttendance",
                    "args": [
                        {
                            "name": "interval",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 9,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "interval",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getBirthdayToday",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getConfirmation",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getLateLoanPayment",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getLeaveToday",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getLoanInfo",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getNewHire",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getPayroll",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getPayrollMonthly",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getReimburseInfo",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getTimeInfo",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getTimeRequest",
                    "args": [
                        {
                            "name": "interval",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "interval",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getTotalEmp",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { ApiService } from '../../service/api.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class DashboardService {\r\n    constructor(private api: ApiService) {}\r\n    getAttendance(interval) {\r\n        return this.api.get('attendances-rate?interval=' + interval);\r\n    }\r\n    getTimeRequest(interval) {\r\n        return this.api.get('time-request-rate?interval=' + interval);\r\n    }\r\n    getLeaveToday() {\r\n        return this.api.get('time-request-leave');\r\n    }\r\n    getBirthdayToday() {\r\n        return this.api.get('employee-birthday');\r\n    }\r\n    getNewHire() {\r\n        return this.api.get('employee-new-hire');\r\n    }\r\n    getTotalEmp() {\r\n        return this.api.get('employee-total');\r\n    }\r\n    getLoanInfo() {\r\n        return this.api.get('loan-count-dashboard');\r\n    }\r\n    getTimeInfo() {\r\n        return this.api.get('time-request-count');\r\n    }\r\n    getReimburseInfo() {\r\n        return this.api.get('reimbursement-request-amount');\r\n    }\r\n    getLateLoanPayment() {\r\n        return this.api.get('loan-request-dashboard');\r\n    }\r\n    getConfirmation() {\r\n        return this.api.get('time-reminder-request');\r\n    }\r\n    getPayroll() {\r\n        return this.api.get('payroll-dashboard');\r\n    }\r\n    getPayrollMonthly() {\r\n        return this.api.get('payroll-monthly-dashboard');\r\n    }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "api",
                        "type": "ApiService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 7,
                "jsdoctags": [
                    {
                        "name": "api",
                        "type": "ApiService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "DummyService",
            "id": "injectable-DummyService-26da3dbf980b75496d5a0ae699dc50afc8632a1393fd59a17d341cecf923575b855c624ef0feecba1924cc9472429ca7e8349edd0e20b48c45ce4cd35d1ab26a",
            "file": "src/app/core/service/dummy.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getDummyLarge",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getDummyMedium",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getDummySmall",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "<p>Http wrapper service</p>\n",
            "rawdescription": "\n\nHttp wrapper service\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport {\r\n    HttpClient,\r\n} from '@angular/common/http';\r\n\r\n/**\r\n * Http wrapper service\r\n */\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class DummyService {\r\n\r\n    constructor(\r\n        private httpClient: HttpClient\r\n    ) { }\r\n    getDummySmall() {\r\n        return this.httpClient.get<any>('assets/demo/data/dummy.json')\r\n            .toPromise()\r\n            .then(res => res.data)\r\n            .then(data => data);\r\n    }\r\n\r\n    getDummyMedium() {\r\n        return this.httpClient.get<any>('assets/demo/data/dummy.json')\r\n            .toPromise()\r\n            .then(res => res.data )\r\n            .then(data => data=data.concat(data));\r\n    }\r\n\r\n    getDummyLarge() {\r\n        return this.httpClient.get<any>('assets/demo/data/dummy.json')\r\n            .toPromise()\r\n            .then(res => res.data)\r\n            .then(data => data = data.concat(data).concat(data));\r\n    }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "EventService",
            "id": "injectable-EventService-9188cbf94f1f3ca300cb82c718a967f6ec4a96c14c0617cf1fcfcf3ef4cbc6b4617fd5ace20bcc31bd76665c8df2947644562d55f53f03d48ec31da3f04ce1de",
            "file": "src/app/showcase/service/eventservice.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getEvents",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 9,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class EventService {\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getEvents() {\r\n    return this.http.get<any>('assets/demo/data/scheduleevents.json')\r\n      .toPromise()\r\n      .then(res => res.data as any[])\r\n      .then(data => data);\r\n    }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 5,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "HelperService",
            "id": "injectable-HelperService-03091f9e4e9d3ee92944b07bc1255b430b6e3b149931a3affef8c5e6fecfbd325a3f9137cd462d9cf554a8213f1b4cabc4f59138b93269ff24c68b683f506816",
            "file": "src/app/core/service/helper-service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "checkStat",
                    "args": [
                        {
                            "name": "noNotif",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 100,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "noNotif",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "convertServerDateTimeToLocalDateTime",
                    "args": [
                        {
                            "name": "dateTime",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "attendance",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "dateTime",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "attendance",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "convertTimeStringToDateTime",
                    "args": [
                        {
                            "name": "time",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "time",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "download",
                    "args": [
                        {
                            "name": "obj",
                            "type": "Object",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 89,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "obj",
                            "type": "Object",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "download",
                    "args": [
                        {
                            "name": "base",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "filename",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "ext",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 90,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "base",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "filename",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "ext",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "download",
                    "args": [
                        {
                            "name": "a",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "b",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "c",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 91,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "a",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "b",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "c",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "formatAll",
                    "args": [
                        {
                            "name": "a",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "formatStr",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "timeZone",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "a",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "formatStr",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "timeZone",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "formatDate",
                    "args": [
                        {
                            "name": "a",
                            "type": "Object",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "timeZone",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "a",
                            "type": "Object",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "timeZone",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "formatDateAndTime",
                    "args": [
                        {
                            "name": "a",
                            "type": "Object",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "timeZone",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "a",
                            "type": "Object",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "timeZone",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "formatTime",
                    "args": [
                        {
                            "name": "a",
                            "type": "Object",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "timeZone",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "a",
                            "type": "Object",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "timeZone",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getParam",
                    "args": [
                        {
                            "name": "data",
                            "type": "PageInfo",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "body",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "PageInfo",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "body",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { format } from 'date-fns';\r\nimport { PageInfo } from '../model/page-info';\r\nimport { base64StringToBlob } from 'blob-util';\r\nimport { saveAs } from 'file-saver';\r\nimport { AuthenticationService } from './authentication.service';\r\nimport { MessageBoxService } from './message-box.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class HelperService {\r\n    constructor(\r\n        private auth: AuthenticationService,\r\n        private msg: MessageBoxService\r\n    ) {}\r\n\r\n    getParam(data: PageInfo, body?: any) {\r\n        let param = new HttpParams()\r\n            .set('page', data.pageInfo)\r\n            .set('limit', data.pageLimit);\r\n        if (body) {\r\n            Object.keys(body).forEach((k) => {\r\n                if (body[k] == false || body[k]) {\r\n                    param = param.set(k, body[k]);\r\n                }\r\n            });\r\n        }\r\n\r\n        return param;\r\n    }\r\n\r\n    formatDate(a: Object, timeZone?) {\r\n        let formatStr = 'yyyy-MM-dd';\r\n\r\n        return this.formatAll(a, formatStr, timeZone);\r\n    }\r\n    formatTime(a: Object, timeZone?) {\r\n        let formatStr = 'HH:mm';\r\n\r\n        return this.formatAll(a, formatStr, timeZone);\r\n    }\r\n\r\n    formatDateAndTime(a: Object, timeZone?) {\r\n        let formatStr = 'yyyy-MM-dd HH:mm';\r\n\r\n        return this.formatAll(a, formatStr, timeZone);\r\n    }\r\n    formatAll(a, formatStr, timeZone) {\r\n        if (a instanceof Date) {\r\n            let date = timeZone\r\n                ? new Date(\r\n                      new Date(a).toLocaleString('en', {\r\n                          timeZone: 'Asia/Jakarta',\r\n                      })\r\n                  )\r\n                : a;\r\n            a = a ? format(date, formatStr) : null;\r\n        } else if (a instanceof Object) {\r\n            Object.keys(a).forEach((k) => {\r\n                if (a[k] && a[k] instanceof Date) {\r\n                    let date = timeZone\r\n                        ? new Date(\r\n                              new Date(a[k]).toLocaleString('en', {\r\n                                  timeZone: 'Asia/Jakarta',\r\n                              })\r\n                          )\r\n                        : a[k];\r\n                    a[k] = a[k] ? format(date, formatStr) : null;\r\n                }\r\n            });\r\n        }\r\n        return a;\r\n    }\r\n    convertTimeStringToDateTime(time) {\r\n        return new Date('01/01/2022 ' + time + ' GMT+0700');\r\n    }\r\n    convertServerDateTimeToLocalDateTime(dateTime, attendance?) {\r\n        dateTime = dateTime.replaceAll('-', '/');\r\n\r\n        if (attendance) {\r\n            return new Date(dateTime + ' GMT+0000');\r\n        }\r\n\r\n        return new Date(dateTime + ' GMT+0700');\r\n    }\r\n\r\n    download(obj: Object);\r\n    download(base: string, filename: string, ext: string);\r\n    download(a, b?, c?) {\r\n        const base = a.base ? a.base : a;\r\n        const fileName = a.filename ? a.filename : b;\r\n        const ext = a.ext ? a.ext : c;\r\n        const file = new Blob([base64StringToBlob(base)], {\r\n            type: 'octet/stream',\r\n        });\r\n        saveAs(file, fileName + (ext.includes('.') ? ext : '.' + ext));\r\n    }\r\n    checkStat(noNotif?) {\r\n        let stat = this.auth.getSession().subStat;\r\n        if (stat == 'R96aPGLRUHso0Oixc3/PQA==') {\r\n            return true;\r\n        } else {\r\n            if (!noNotif)\r\n                this.msg.showInfo(\r\n                    'Silahkan aktivasi akun anda untuk menggunakan fitur ini'\r\n                );\r\n            return false;\r\n        }\r\n    }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "auth",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "msg",
                        "type": "MessageBoxService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "auth",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "msg",
                        "type": "MessageBoxService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "IconService",
            "id": "injectable-IconService-d37669e0170aba22174ad155a82e3abcb58ab9c9c10f2a678b9b03eec31e17641462e40eee2e412e5eea1b20775363541bed8b1c7c6f422764f9d772fda0f45e",
            "file": "src/app/showcase/service/iconservice.ts",
            "properties": [
                {
                    "name": "apiUrl",
                    "defaultValue": "'assets/demo/data/icons.json'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "icons",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "selectedIcon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methods": [
                {
                    "name": "getIcons",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport {map} from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class IconService {\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    icons: any[];\r\n\r\n    selectedIcon: any;\r\n\r\n    apiUrl = 'assets/demo/data/icons.json';\r\n\r\n    getIcons() {\r\n        return this.http.get(this.apiUrl).pipe(map((response: any) => {\r\n            this.icons = response.icons;\r\n            return this.icons;\r\n        }));\r\n    }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "MenuService",
            "id": "injectable-MenuService-703a9fd4564f3ca300baa651b1058ed106077a4d0b5e83bbb9aea7931314501f86c59acf309d97012fbbdb335f01fc2b9c56c9bacdf0904be4bee294ced9b351",
            "file": "src/app/showcase/service/app.menu.service.ts",
            "properties": [
                {
                    "name": "menuSource",
                    "defaultValue": "new Subject<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "menuSource$",
                    "defaultValue": "this.menuSource.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "resetSource",
                    "defaultValue": "new Subject()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "resetSource$",
                    "defaultValue": "this.resetSource.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methods": [
                {
                    "name": "onMenuStateChange",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "reset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class MenuService {\r\n\r\n    private menuSource = new Subject<string>();\r\n    private resetSource = new Subject();\r\n\r\n    menuSource$ = this.menuSource.asObservable();\r\n    resetSource$ = this.resetSource.asObservable();\r\n\r\n    onMenuStateChange(key: string) {\r\n        this.menuSource.next(key);\r\n    }\r\n\r\n    reset() {\r\n       this.resetSource.next(true);\r\n    }\r\n}\r\n",
            "type": "injectable"
        },
        {
            "name": "MessageBoxService",
            "id": "injectable-MessageBoxService-d17e089a18fdda7ffd8ed5f100a152c0534020ca1bd705986cc59a719a5f6bf2c29ff14b3a4687442cf5c160fa1dfae39d726e09d4b2e88ae0f61e5fa6c6df8e",
            "file": "src/app/core/service/message-box.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "showError",
                    "args": [
                        {
                            "name": "message",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "title",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "'Error'"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "message",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "title",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "'Error'",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "showInfo",
                    "args": [
                        {
                            "name": "message",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "title",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "'Information'"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "message",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "title",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "'Information'",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "showMessage",
                    "args": [
                        {
                            "name": "severity",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "title",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "message",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "severity",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "title",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "message",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "showMessageValidationFromApi",
                    "args": [
                        {
                            "name": "errorValidationApi",
                            "type": "ErrorValidationApi[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThis method is used to handle 422 HTTP status response from API\nwith status code = 444 (JSON Format validation violation)\n",
                    "description": "<p>This method is used to handle 422 HTTP status response from API\nwith status code = 444 (JSON Format validation violation)</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1314,
                                "end": 1332,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "errorValidationApi"
                            },
                            "type": "ErrorValidationApi[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1306,
                                "end": 1311,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>List of Error Validation API</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 1371,
                                "end": 1378,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>any[]</p>\n"
                        }
                    ]
                },
                {
                    "name": "showSuccess",
                    "args": [
                        {
                            "name": "message",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "title",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "'Success'"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "message",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "title",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "'Success'",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "showWarn",
                    "args": [
                        {
                            "name": "message",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "title",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "'Warning'"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "message",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "title",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "'Warning'",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "<p>A convenient service for showing notification message box</p>\n",
            "rawdescription": "\n\nA convenient service for showing notification message box\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\n\r\nimport { MessageService } from 'primeng/api';\r\n\r\nexport interface ErrorValidationApi {\r\n    key: string;\r\n    message: any[];\r\n}\r\n\r\n/**\r\n * A convenient service for showing notification message box\r\n */\r\n@Injectable({\r\n    providedIn: 'root',\r\n\r\n})\r\nexport class MessageBoxService {\r\n    constructor(private messageService: MessageService) {}\r\n\r\n    public showWarn(message: string, title: string = 'Warning') {\r\n        this.showMessage('warn', title, message);\r\n    }\r\n\r\n    public showSuccess(message: string, title: string = 'Success') {\r\n        this.showMessage('success', title, message);\r\n    }\r\n\r\n    public showInfo(message: string, title: string = 'Information') {\r\n        this.showMessage('info', title, message);\r\n    }\r\n\r\n    public showError(message: string, title: string = 'Error') {\r\n        this.showMessage('error', title, message);\r\n    }\r\n\r\n    private showMessage(severity: string, title: string, message: string) {\r\n        this.messageService.add({\r\n            severity,\r\n            summary: title,\r\n            detail: message,\r\n            key:'info'\r\n        });\r\n    }\r\n\r\n    /**\r\n     * This method is used to handle 422 HTTP status response from API\r\n     * with status code = 444 (JSON Format validation violation)\r\n     * @param   errorValidationApi List of Error Validation API\r\n     * @returns any[]\r\n     */\r\n    public showMessageValidationFromApi(\r\n        errorValidationApi: ErrorValidationApi[]\r\n    ): void {\r\n        const msgs: any[] = [];\r\n\r\n        for (const summary of errorValidationApi) {\r\n            for (const detail of summary.message) {\r\n                msgs.push({\r\n                    severity: 'warn',\r\n                    summary: summary.key,\r\n                    detail,\r\n                });\r\n            }\r\n        }\r\n\r\n        this.messageService.addAll(msgs);\r\n    }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "messageService",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "messageService",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "NodeService",
            "id": "injectable-NodeService-99a671328191558fce981a370153020bec02a4c55ea356b0689e4a4cdaa3bf9ab39c111b4b1237b3bc049854853150cbe3612f83587f155d4afc9fa411408624",
            "file": "src/app/showcase/service/nodeservice.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getFiles",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getFilesystem",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getLazyFiles",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getLazyFilesystem",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { TreeNode } from 'primeng/api';\r\n\r\n@Injectable()\r\nexport class NodeService {\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getFiles() {\r\n    return this.http.get<any>('assets/demo/data/files.json')\r\n      .toPromise()\r\n      .then(res => res.data as TreeNode[]);\r\n    }\r\n\r\n    getLazyFiles() {\r\n    return this.http.get<any>('assets/demo/data/files-lazy.json')\r\n      .toPromise()\r\n      .then(res => res.data as TreeNode[]);\r\n    }\r\n\r\n    getFilesystem() {\r\n    return this.http.get<any>('assets/demo/data/filesystem.json')\r\n      .toPromise()\r\n      .then(res => res.data as TreeNode[]);\r\n    }\r\n\r\n    getLazyFilesystem() {\r\n    return this.http.get<any>('assets/demo/data/filesystem-lazy.json')\r\n      .toPromise()\r\n      .then(res => res.data as TreeNode[]);\r\n    }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 7,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "PermisionGuard",
            "id": "injectable-PermisionGuard-282f9a58dc2873862fdcd565de9bb52528bdf72c1d6639767573c0c3b344c96bf3badf40712adaeed28fb30e3c97877e618fd9e04b2e8a32ef4514d6b77a59fd",
            "file": "src/app/core/permision.guard.ts",
            "properties": [],
            "methods": [
                {
                    "name": "canActivate",
                    "args": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable | Promise | boolean | UrlTree",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { AuthenticationService } from './service/authentication.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PermisionGuard  {\r\n  constructor(\r\n    private auth: AuthenticationService,\r\n    private router:Router\r\n) { }\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n      if(environment.isSSO){\r\n        window.location.href = environment.linovWordpress;\r\n      }\r\n    return true;\r\n  }\r\n  \r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "auth",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "auth",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "PhotoService",
            "id": "injectable-PhotoService-edaca63fadfb346b80be5f614d0c13006353e3a24db1a8ffec888d416caac55936fe4f85e1a60f333a56ed4230a9ae48b1a6f52e3e824ca2a255b95e989cbc18",
            "file": "src/app/showcase/service/photoservice.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getImages",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { Image } from '../api/image';\r\n\r\n@Injectable()\r\nexport class PhotoService {\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getImages() {\r\n    return this.http.get<any>('assets/demo/data/photos.json')\r\n      .toPromise()\r\n      .then(res => res.data as Image[])\r\n      .then(data => data);\r\n    }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 7,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "ProductService",
            "id": "injectable-ProductService-d33f713db1626eff04c27820888a48860dd9587ce2814ed2f363726ca9d620763813842e962f3dc4a3eb92c84a6ba471f234018c83ace72b7c6da2fa08e3c9fd",
            "file": "src/app/showcase/service/productservice.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getProducts",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getProductsMixed",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getProductsSmall",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getProductsWithOrdersSmall",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { Product } from '../api/product';\r\n\r\n@Injectable()\r\nexport class ProductService {\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getProductsSmall() {\r\n        return this.http.get<any>('assets/demo/data/products-small.json')\r\n        .toPromise()\r\n        .then(res => res.data as Product[])\r\n        .then(data => data);\r\n    }\r\n\r\n    getProducts() {\r\n        return this.http.get<any>('assets/demo/data/products.json')\r\n        .toPromise()\r\n        .then(res => res.data as Product[])\r\n        .then(data => data);\r\n    }\r\n\r\n    getProductsMixed() {\r\n        return this.http.get<any>('assets/demo/data/products-mixed.json')\r\n        .toPromise()\r\n        .then(res => res.data as Product[])\r\n        .then(data => data);\r\n    }\r\n\r\n    getProductsWithOrdersSmall() {\r\n        return this.http.get<any>('assets/demo/data/products-orders-small.json')\r\n        .toPromise()\r\n        .then(res => res.data as Product[])\r\n        .then(data => data);\r\n    }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 7,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "RoleService",
            "id": "injectable-RoleService-96b0cd3d21584fd925406f13ee8dd02651accdc25c295fa57e4ae714a88be70f07e914e18e9592ef4d755fa0880acbc9c358901034966c868248b15c6e372d9f",
            "file": "src/app/util/role/service/role.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getAll",
                    "args": [
                        {
                            "name": "pi",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "body",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "pi",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "body",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getDashboard",
                    "args": [
                        {
                            "name": "id",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getReport",
                    "args": [
                        {
                            "name": "id",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "update",
                    "args": [
                        {
                            "name": "body",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "body",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { ApiService } from 'src/app/core/service/api.service';\r\nimport { HelperService } from 'src/app/core/service/helper-service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RoleService {\r\n\r\n  constructor(private api: ApiService,\r\n    private helperServ: HelperService) { }\r\n\r\n  getAll(pi,body?){\r\n    return this.api.get('roles', this.helperServ.getParam(pi,body));\r\n  }\r\n  getDashboard(id){\r\n    return this.api.get('role/premium/widget/'+id);\r\n  }\r\n  getReport(id){\r\n    return this.api.get('role/premium/report/'+id);\r\n  }\r\n  update(body){\r\n    return this.api.put('role',body,true);\r\n  }\r\n\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "api",
                        "type": "ApiService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "helperServ",
                        "type": "HelperService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "api",
                        "type": "ApiService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "helperServ",
                        "type": "HelperService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "TableService",
            "id": "injectable-TableService-d88a3908665c3cd55e71e7edc285b37cc3a892952f9e83b917212749f24d56b59a09f661c30e99820367ca4efc5485912a11f43db4854218ea37b90d4146a269",
            "file": "src/app/core/shared-component/table/table.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getList",
                    "args": [
                        {
                            "name": "uri",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "pi",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "body",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "uri",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "pi",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "body",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { ApiService } from 'src/app/core/service/api.service';\r\nimport { HelperService } from 'src/app/core/service/helper-service';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class TableService {\r\n    constructor(private api: ApiService, private help: HelperService) {}\r\n\r\n    getList(uri, pi, body?) {\r\n        return this.api.get(uri, this.help.getParam(pi, body));\r\n    }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "api",
                        "type": "ApiService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "help",
                        "type": "HelperService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "api",
                        "type": "ApiService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "help",
                        "type": "HelperService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "UserService",
            "id": "injectable-UserService-c635d3df7309600aeabc52cfccc3de6913e8820c374f7591391ddd251852e879047479b5b988babe9ec61837a6ae52a57c11a68a05933304b8923894482f540a",
            "file": "src/app/util/user/service/user.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "act",
                    "args": [
                        {
                            "name": "body",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "body",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "changePass",
                    "args": [
                        {
                            "name": "body",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "body",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deact",
                    "args": [
                        {
                            "name": "body",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "body",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getAll",
                    "args": [
                        {
                            "name": "pi",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "body",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "pi",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "body",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getOne",
                    "args": [
                        {
                            "name": "id",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "resetPass",
                    "args": [
                        {
                            "name": "body",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "body",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "save",
                    "args": [
                        {
                            "name": "body",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "body",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "update",
                    "args": [
                        {
                            "name": "body",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "body",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { ApiService } from 'src/app/core/service/api.service';\r\nimport { HelperService } from 'src/app/core/service/helper-service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  \r\n  constructor(private api: ApiService,\r\n    private helperServ: HelperService) { }\r\n\r\n  getAll(pi,body?){\r\n    return this.api.get('users', this.helperServ.getParam(pi,body));\r\n  }\r\n  getOne(id){\r\n    return this.api.get('user/'+id);\r\n  }\r\n\r\n  deact(body){\r\n    return this.api.post('user/deactivate', body,true);\r\n  }\r\n\r\n  act(body){\r\n    return this.api.post('user/activate', body,true);\r\n  }\r\n  save(body){\r\n    return this.api.post('user', body, true);\r\n  }\r\n  update(body){\r\n    return this.api.put('user', body, true);\r\n  }\r\n  resetPass(body){\r\n    return this.api.put('user/reset-password',body,true);\r\n  }\r\n  changePass(body){\r\n    return this.api.put('user/change-password',body,true);\r\n  }\r\n\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "api",
                        "type": "ApiService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "helperServ",
                        "type": "HelperService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "api",
                        "type": "ApiService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "helperServ",
                        "type": "HelperService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "UtilCompanyService",
            "id": "injectable-UtilCompanyService-481249b4c5a1a62fe27554a546444b522a8213b48e5bc2e18563012f8464d38918e7f16f51c83f47aad1b80d12c18d5518e80bdd12b29f7d349db7157ae2cf94",
            "file": "src/app/util/company/service/util-company.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "uuid",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "uuid",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteBank",
                    "args": [
                        {
                            "name": "companyBank",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "companyBank",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "extend",
                    "args": [
                        {
                            "name": "companyBank",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "companyBank",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getAll",
                    "args": [
                        {
                            "name": "pi",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "body",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "pi",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "body",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getOne",
                    "args": [
                        {
                            "name": "uuid",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "uuid",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "save",
                    "args": [
                        {
                            "name": "company",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "company",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "saveBank",
                    "args": [
                        {
                            "name": "companyBank",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "companyBank",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "terminate",
                    "args": [
                        {
                            "name": "companyBank",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "companyBank",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "update",
                    "args": [
                        {
                            "name": "company",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "company",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { ApiService } from 'src/app/core/service/api.service';\r\nimport { HelperService } from 'src/app/core/service/helper-service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UtilCompanyService {\r\n\r\n  constructor(private api: ApiService,\r\n    private helperServ: HelperService) { }\r\n\r\n  getAll(pi,body?){\r\n    return this.api.get('companies', this.helperServ.getParam(pi,body));\r\n  }\r\n\r\n  getOne(uuid){\r\n    return this.api.get('company/' + uuid);\r\n  }\r\n\r\n  save(company){\r\n    return this.api.postFormData('regis-companies', company, true);\r\n  }\r\n\r\n  update(company){\r\n    return this.api.putFormData('company/file', company, true);\r\n  }\r\n\r\n  delete(uuid){\r\n    this.api.delete('company/' + uuid);\r\n  }\r\n  \r\n\r\n  saveBank(companyBank){\r\n    return this.api.post('company-bank', companyBank, true);\r\n  }\r\n  \r\n\r\n  extend(companyBank){\r\n    return this.api.put('terminate-companies/extend', companyBank, true);\r\n  }\r\n  \r\n\r\n  terminate(companyBank){\r\n    return this.api.put('terminate-companies/dismissed', companyBank, true);\r\n  }\r\n  deleteBank(companyBank){\r\n    let idList =[]\r\n    companyBank.forEach(cb => {\r\n      idList.push(cb.id)\r\n    });\r\n    return this.api.deleteAll('company-bank-delete', idList);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "api",
                        "type": "ApiService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "helperServ",
                        "type": "HelperService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "api",
                        "type": "ApiService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "helperServ",
                        "type": "HelperService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [
        {
            "name": "HttpErrorInterceptor",
            "id": "injectable-HttpErrorInterceptor-c52175787505db14b7b140c0a4186848d0ca899da265b344a8c0a79c7153aa3892b632b338d999127dcf6e01dcf5db394b34bcbed62efd7fd3e6fd518b6c4a95",
            "file": "src/app/core/interceptor/http-error.interceptor.ts",
            "properties": [
                {
                    "name": "auth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AuthenticationService",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "msg",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MessageBoxService",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "router",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Router",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "intercept",
                    "args": [
                        {
                            "name": "request",
                            "type": "HttpRequest<any>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "next",
                            "type": "HttpHandler",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<HttpEvent<any>>",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "request",
                            "type": "HttpRequest<any>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "next",
                            "type": "HttpHandler",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n  HttpErrorResponse\r\n} from '@angular/common/http';\r\nimport { catchError, Observable, throwError } from 'rxjs';\r\nimport { MessageBoxService } from '../service/message-box.service';\r\nimport { AuthenticationService } from '../service/authentication.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class HttpErrorInterceptor implements HttpInterceptor {\r\n\r\n  constructor(public msg:MessageBoxService,public auth:AuthenticationService,public router:Router) {}\r\n\r\n  intercept(\r\n    request: HttpRequest<any>,\r\n    next: HttpHandler\r\n): Observable<HttpEvent<any>> {\r\n\r\n    return next.handle(request).pipe(\r\n        catchError((err: HttpErrorResponse) => {\r\n            if (err.error instanceof Error) {\r\n                this.msg.showWarn(\r\n                    err.error.message,\r\n                    'An error occurred'\r\n                );\r\n            } else {\r\n                switch (err.status) {\r\n                    case 400: {\r\n                        this.msg.showError(\r\n                            err.error,\r\n                            `${err.status}: Bad Request`\r\n                        );\r\n                        break;\r\n                    }\r\n                    case 403: {\r\n                      this.msg.showInfo(\r\n                          err.error,\r\n                          `${err.status}: Forbidden`\r\n                      );\r\n                      this.auth.destroySession();\r\n                      this.router.navigate(['login'])\r\n                      break\r\n                    }\r\n\r\n                    default:\r\n                        this.msg.showError(\r\n                            err.error,\r\n                            `${err.status}: Err Backend`\r\n                        );\r\n                }\r\n            }\r\n            return throwError(err);\r\n        })\r\n    );\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "msg",
                        "type": "MessageBoxService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "auth",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "msg",
                        "type": "MessageBoxService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "auth",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "interceptor"
        }
    ],
    "classes": [
        {
            "name": "PageInfo",
            "id": "class-PageInfo-3964f786c92946f6e4ec495d8fb35fc5422d996a757070300b79cbba94704e81d7ef0a14e050f462b114f766839d393727fc3ef0ef44f6857001022ebaa9e8dd",
            "file": "src/app/core/model/page-info.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class PageInfo {\r\n    constructor(public page: number, public limit: number) { }\r\n\r\n    get pageInfo(): string {\r\n        return this.page.toString();\r\n    }\r\n\r\n    get pageLimit(): string {\r\n        return this.limit.toString();\r\n    }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "page",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "limit",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 1,
                "jsdoctags": [
                    {
                        "name": "page",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "limit",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "limit",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "page",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "accessors": {
                "pageInfo": {
                    "name": "pageInfo",
                    "getSignature": {
                        "name": "pageInfo",
                        "type": "string",
                        "returnType": "string",
                        "line": 4
                    }
                },
                "pageLimit": {
                    "name": "pageLimit",
                    "getSignature": {
                        "name": "pageLimit",
                        "type": "string",
                        "returnType": "string",
                        "line": 8
                    }
                }
            },
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [
        {
            "name": "AutocompleteOffDirective",
            "id": "directive-AutocompleteOffDirective-7f9f3d48390400d569065fccfe65cf07dedf9d1a499ecbf19dea9848b6a88727eb32ede23ab2c9fa15700bbda069d70c925ded4c9ab60b3926d17b89339630dd",
            "file": "src/app/core/directive/autocomplete-off.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, ElementRef } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[autocompleteOff]'\r\n})\r\nexport class AutocompleteOffDirective {\r\n  constructor(private _el: ElementRef) {\r\n    let w: any = window;\r\n    let isChrome = w.chrome;\r\n    if (isChrome) {\r\n      this._el.nativeElement.setAttribute('autocomplete', 'off');\r\n      this._el.nativeElement.setAttribute('autocorrect', 'off');\r\n      this._el.nativeElement.setAttribute('autocapitalize', 'none');\r\n      this._el.nativeElement.setAttribute('spellcheck', 'false');\r\n    }\r\n  }\r\n}",
            "selector": "[autocompleteOff]",
            "providers": [],
            "hostDirectives": [],
            "standalone": false,
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 7,
                "jsdoctags": [
                    {
                        "name": "_el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "OnlyNumberDirective",
            "id": "directive-OnlyNumberDirective-d8780183c06a2de89ea46f8056ed98dac6233b42dee9d8774c38dec02cfe018b2c3b0efab3a96cb83ade79ab4d814a29414964f3aa2b439a10189d565e6c944c",
            "file": "src/app/core/directive/only-number.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, ElementRef, HostListener } from '@angular/core';\r\n\r\n@Directive({\r\n    // tslint:disable-next-line:directive-selector\r\n    selector: '[onlyNumber]',\r\n})\r\nexport class OnlyNumberDirective {\r\n    constructor(private el: ElementRef) {}\r\n\r\n    @HostListener('keydown', ['$event']) onKeyDown(event: KeyboardEvent) {\r\n        let e = <KeyboardEvent>event;\r\n        /*\r\n            8 -  for backspace\r\n            9 -  for tab\r\n            13 - for enter\r\n            27 - for escape\r\n            46 - for delete\r\n        */\r\n        if (\r\n            [8, 9, 13, 27, 46].indexOf(e.keyCode) !== -1 ||\r\n            // Allow: Ctrl+A\r\n            (e.keyCode === 65 && (e.ctrlKey || e.metaKey)) ||\r\n            // Allow: Ctrl+C\r\n            (e.keyCode === 67 && (e.ctrlKey || e.metaKey)) ||\r\n            // Allow: Ctrl+V\r\n            (e.keyCode === 86 && (e.ctrlKey || e.metaKey)) ||\r\n            // Allow: Ctrl+X\r\n            (e.keyCode === 88 && (e.ctrlKey || e.metaKey)) ||\r\n            // Allow: home, end, left, right\r\n            (e.keyCode >= 35 && e.keyCode <= 39)\r\n        ) {\r\n            // let it happen, don't do anything\r\n            return;\r\n        }\r\n        // Ensure that it is a number and stop the keypress\r\n        if (\r\n            (e.shiftKey || e.keyCode < 48 || e.keyCode > 57) &&\r\n            (e.keyCode < 96 || e.keyCode > 105)\r\n        ) {\r\n            e.preventDefault();\r\n        }\r\n    }\r\n\r\n    @HostListener('paste', ['$event']) blockPaste(event: KeyboardEvent) {\r\n        this.validateFields(event);\r\n    }\r\n    validateFields(event) {\r\n        const numberRegEx = /^[0-9]+$/;\r\n\r\n        if (!numberRegEx.test(this.el.nativeElement.value)) {\r\n            this.el.nativeElement.value = '';\r\n            event.preventDefault();\r\n        }\r\n    }\r\n}\r\n",
            "selector": "[onlyNumber]",
            "providers": [],
            "hostDirectives": [],
            "standalone": false,
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "keydown",
                    "args": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10
                },
                {
                    "name": "paste",
                    "args": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "blockPaste",
                    "args": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'paste', ['$event']"
                        }
                    ],
                    "modifierKind": [
                        167
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onKeyDown",
                    "args": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'keydown', ['$event']"
                        }
                    ],
                    "modifierKind": [
                        167
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "validateFields",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 7,
                "jsdoctags": [
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        }
    ],
    "components": [
        {
            "name": "AppCodeComponent",
            "id": "component-AppCodeComponent-fde079404210779a790dca45ef70175262568a9503c145a54857b0d54e1a6cc7e9b5a75129a95708cde5c777b3d94b3a9e92010ac05a46f61d73d232d69da0d5",
            "file": "src/app/showcase/components/app-code/app.code.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-code",
            "styleUrls": [],
            "styles": [],
            "template": "        <pre [ngClass]=\"'language-' + lang\"><code #code><ng-content></ng-content>\n</code></pre>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "lang",
                    "defaultValue": "'markup'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "codeViewChild",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'code'"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                },
                {
                    "name": "el",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ElementRef, AfterViewInit, Input, NgModule, ViewChild } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({\r\n    selector: 'app-code',\r\n    template: `\r\n        <pre [ngClass]=\"'language-' + lang\"><code #code><ng-content></ng-content>\r\n</code></pre>\r\n    `,\r\n})\r\nexport class AppCodeComponent implements AfterViewInit {\r\n\r\n    @Input() lang = 'markup';\r\n\r\n    @ViewChild('code') codeViewChild: ElementRef;\r\n\r\n    constructor(public el: ElementRef) { }\r\n\r\n    ngAfterViewInit() {\r\n        // @ts-ignore\r\n        if (window['Prism']) {\r\n            // @ts-ignore\r\n            window['Prism'].highlightElement(this.codeViewChild.nativeElement);\r\n        }\r\n    }\r\n}\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    exports: [AppCodeComponent],\r\n    declarations: [AppCodeComponent]\r\n})\r\nexport class AppCodeModule { }\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-fc9e9d057773f0e69ccbd49af40ffbcc87046b85e80c9811382d4ba3489e4434635595c78e6567bcb8c1b4e83ee53bd1ae846ec74b83059ce9026c309065eaa9",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "menuMode",
                    "defaultValue": "'static'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { PrimeNGConfig } from 'primeng/api';\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent {\r\n\r\n    menuMode = 'static';\r\n\r\n    constructor(private primengConfig: PrimeNGConfig) { }\r\n\r\n    ngOnInit() {\r\n        this.primengConfig.ripple = true;\r\n        document.documentElement.style.fontSize = '14px';\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "primengConfig",
                        "type": "PrimeNGConfig",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "primengConfig",
                        "type": "PrimeNGConfig",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<router-outlet></router-outlet>\r\n\r\n<p-toast key=\"info\" [baseZIndex]=\"9999999\" styleClass=\"mt-7\"></p-toast>"
        },
        {
            "name": "AppConfigComponent",
            "id": "component-AppConfigComponent-1ee1c4639f546b306954eb8537d9153372d58a8ec3339d9a9ed49c3cc28e1020d874f2ab322e160fa82f48b350599df7509f7a436db6c877ab4750bcfb4b97f6",
            "file": "src/app/layout/component/app.config.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-config",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.config.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "app",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AppComponent",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "appMain",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AppMainComponent",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "config",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AppConfig",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "configService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ConfigService",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "primengConfig",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PrimeNGConfig",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "scale",
                    "defaultValue": "14",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "scales",
                    "defaultValue": "[12, 13, 14, 15, 16]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "subscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "methodsClass": [
                {
                    "name": "applyScale",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "changeTheme",
                    "args": [
                        {
                            "name": "theme",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "dark",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "theme",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "dark",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "decrementScale",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "incrementScale",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onChangeMode",
                    "args": [
                        {
                            "name": "isDarkMode",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isDarkMode",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onConfigButtonClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onLang",
                    "args": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { PrimeNGConfig } from 'primeng/api';\r\nimport { Subscription } from 'rxjs';\r\nimport { AppComponent } from 'src/app/app.component';\r\nimport { AppConfig } from 'src/app/core/config/app.config';\r\nimport { ConfigService } from 'src/app/core/service/app.config.service';\r\nimport { AppMainComponent } from './app.main.component';\r\n\r\n@Component({\r\n    selector: 'app-config',\r\n    templateUrl: './app.config.component.html'\r\n})\r\nexport class AppConfigComponent implements OnInit, OnDestroy {\r\n\r\n    scale: number = 14;\r\n\r\n    scales: any[] = [12, 13, 14, 15, 16];\r\n\r\n    config: AppConfig;\r\n\r\n    subscription: Subscription;\r\n\r\n    constructor(public app: AppComponent, public appMain: AppMainComponent, public configService: ConfigService, public primengConfig: PrimeNGConfig) { }\r\n\r\n    ngOnInit() {\r\n        this.config = this.configService.config;\r\n        this.subscription = this.configService.configUpdate$.subscribe(config => {\r\n            this.config = config;\r\n            this.scale = 14;\r\n\r\n            this.applyScale();\r\n        });\r\n    }\r\n\r\n    onConfigButtonClick(event) {\r\n        this.appMain.configActive = !this.appMain.configActive;\r\n        this.appMain.configClick = true;\r\n        event.preventDefault();\r\n    }\r\n\r\n    incrementScale() {\r\n        this.scale++;\r\n        this.applyScale();\r\n    }\r\n\r\n    decrementScale() {\r\n        this.scale--;\r\n        this.applyScale();\r\n    }\r\n\r\n    applyScale() {\r\n        document.documentElement.style.fontSize = this.scale + 'px';\r\n    }\r\n\r\n    onChangeMode(isDarkMode) {\r\n        if(!isDarkMode){\r\n            this.changeTheme('linov-default', false);\r\n        }else{\r\n            this.changeTheme('lara-dark-teal', true);\r\n        }\r\n    }\r\n\r\n    changeTheme(theme:string, dark:boolean){\r\n        let themeElement = document.getElementById('theme-css');\r\n        themeElement.setAttribute('href', 'assets/theme/' + theme + '/theme.css');\r\n        this.configService.updateConfig({...this.config, ...{theme, dark}});\r\n    }\r\n    onLang(e){\r\n        console.log('implement later')\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.subscription) {\r\n            this.subscription.unsubscribe();\r\n        }\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "app",
                        "type": "AppComponent",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "appMain",
                        "type": "AppMainComponent",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "configService",
                        "type": "ConfigService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "primengConfig",
                        "type": "PrimeNGConfig",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "app",
                        "type": "AppComponent",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "appMain",
                        "type": "AppMainComponent",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "configService",
                        "type": "ConfigService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "primengConfig",
                        "type": "PrimeNGConfig",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<div id=\"layout-config\" class=\"layout-config\" [ngClass]=\"{'layout-config-active': appMain.configActive}\" (click)=\"appMain.onConfigClick($event)\">\r\n        <a style=\"cursor: pointer\" id=\"layout-config-button\" class=\"layout-config-button\" (click)=\"onConfigButtonClick($event)\">\r\n            <i class=\"pi pi-cog\"></i>\r\n        </a>\r\n        <button pButton pRipple type=\"button\" icon=\"pi pi-times\" class=\"p-button-rounded p-button-danger p-button-text layout-config-close\" (click)=\"onConfigButtonClick($event)\"></button>\r\n        <div class=\"layout-config-content\">\r\n            <h6 class=\"mt-0\">Component Scale</h6>\r\n            <div class=\"config-scale\">\r\n                <button pButton pRipple type=\"button\" icon=\"pi pi-minus\" (click)=\"decrementScale()\" class=\"p-button-rounded p-button-text\" [disabled]=\"scale === scales[0]\"></button>\r\n                    <i *ngFor=\"let item of scales\" class=\"pi pi-circle-fill\" [ngClass]=\"{'scale-active': item === scale}\"></i>\r\n                <button pButton pRipple type=\"button\" icon=\"pi pi-plus\" (click)=\"incrementScale()\" class=\"p-button-rounded p-button-text\" [disabled]=\"scale === scales[scales.length - 1]\"></button>\r\n            </div>\r\n\r\n            <h6>Dark Mode</h6>\r\n            <p-inputSwitch [(ngModel)]=\"config.dark\" (onChange)=\"onChangeMode($event.checked)\"></p-inputSwitch>\r\n\r\n            \r\n            <h6>Language</h6>\r\n            <p-inputSwitch (onChange)=\"onLang($event.checked)\"></p-inputSwitch>\r\n        </div>\r\n    </div>"
        },
        {
            "name": "AppFooterComponent",
            "id": "component-AppFooterComponent-c81a89183a5971beb3dad3c9ef53a0ee58dd86bbab23c5374f3fb2193ff845e2025edd617f319df2ae83d539df1f67f8fe8e627697090d99a40f805b15220b45",
            "file": "src/app/layout/component/app.footer.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-footer",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.footer.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "appMain",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AppMainComponent",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { AppMainComponent } from './app.main.component';\r\n\r\n@Component({\r\n    selector: 'app-footer',\r\n    templateUrl: './app.footer.component.html'\r\n})\r\nexport class AppFooterComponent{\r\n    constructor(public appMain: AppMainComponent) {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "appMain",
                        "type": "AppMainComponent",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "appMain",
                        "type": "AppMainComponent",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"layout-footer\">\r\n    <img src=\"assets/layout/images/{{appMain.config.dark ? 'logo-white' : 'logo-dark'}}.svg\" alt=\"Logo\" height=\"20\" class=\"mr-2\"/>\r\n    by \r\n    <span class=\"font-medium ml-2\">PrimeNG</span>\r\n</div>"
        },
        {
            "name": "AppMainComponent",
            "id": "component-AppMainComponent-611893a42fab76c6c5ff6f627d9c6993bd3fdf3229efafdec976048bd0be0245e88c5954a7ca6dcedfe6a3a6499ce10f2d7b54dab65d4053bf1a1bad31dc9088",
            "file": "src/app/layout/component/app.main.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-main",
            "styleUrls": [],
            "styles": [
                "\n            :host ::ng-deep .p-message {\n                margin-left: 0.25em;\n            }\n\n            :host ::ng-deep .p-toast {\n                margin-top: 5.7em;\n                z-index: 99999;\n            }\n        "
            ],
            "templateUrl": [
                "./app.main.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "app",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AppComponent",
                    "optional": false,
                    "description": "",
                    "line": 108,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "closed",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 104
                },
                {
                    "name": "config",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AppConfig",
                    "optional": false,
                    "description": "",
                    "line": 94
                },
                {
                    "name": "configActive",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 90
                },
                {
                    "name": "configClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 92
                },
                {
                    "name": "configService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ConfigService",
                    "optional": false,
                    "description": "",
                    "line": 109,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "documentClickListener",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 84
                },
                {
                    "name": "isBurgerMenuClicked",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 180
                },
                {
                    "name": "menuActiveMobile",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 68,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "menuClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 86
                },
                {
                    "name": "menuInactiveDesktop",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 66,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "overlayMenuActive",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 70,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "premium",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 98
                },
                {
                    "name": "profileActive",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 74,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "renderer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Renderer2",
                    "optional": false,
                    "description": "",
                    "line": 107,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "staticMenuInactive",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "subscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 96
                },
                {
                    "name": "theme",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 80,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "topMenuActive",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 76,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "topMenuButtonClick",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 88
                },
                {
                    "name": "topMenuLeaving",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 78,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "trialDays",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 102
                },
                {
                    "name": "trialDaysExpired",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 100
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 82
                }
            ],
            "methodsClass": [
                {
                    "name": "hideTopMenu",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 219,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "isDesktop",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 243,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "isMobile",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 247,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "isOverlay",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 239,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "isStatic",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 235,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 142,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 255,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 116,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onConfigClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 231,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onMenuClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 227,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSearchClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 251,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggleMenu",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 181,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleProfile",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 202,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleTopMenu",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 207,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n    Component,\r\n    AfterViewInit,\r\n    OnDestroy,\r\n    Renderer2,\r\n    OnInit,\r\n} from '@angular/core';\r\nimport {\r\n    trigger,\r\n    state,\r\n    style,\r\n    transition,\r\n    animate,\r\n} from '@angular/animations';\r\nimport { Subscription } from 'rxjs';\r\nimport { AppComponent } from 'src/app/app.component';\r\nimport { ConfigService } from 'src/app/core/service/app.config.service';\r\nimport { AppConfig } from 'src/app/core/config/app.config';\r\nimport jwt_decode from 'jwt-decode';\r\nimport { AuthenticationService } from 'src/app/core/service/authentication.service';\r\nimport { Router } from '@angular/router';\r\nimport { HelperService } from 'src/app/core/service/helper-service';\r\nimport { ApiService } from 'src/app/core/service/api.service';\r\n\r\n@Component({\r\n    selector: 'app-main',\r\n    templateUrl: './app.main.component.html',\r\n    styles: [\r\n        `\r\n            :host ::ng-deep .p-message {\r\n                margin-left: 0.25em;\r\n            }\r\n\r\n            :host ::ng-deep .p-toast {\r\n                margin-top: 5.7em;\r\n                z-index: 99999;\r\n            }\r\n        `,\r\n    ],\r\n    animations: [\r\n        trigger('submenu', [\r\n            state(\r\n                'hidden',\r\n                style({\r\n                    height: '0px',\r\n                })\r\n            ),\r\n            state(\r\n                'visible',\r\n                style({\r\n                    height: '*',\r\n                })\r\n            ),\r\n            transition(\r\n                'visible => hidden',\r\n                animate('400ms cubic-bezier(0.86, 0, 0.07, 1)')\r\n            ),\r\n            transition(\r\n                'hidden => visible',\r\n                animate('400ms cubic-bezier(0.86, 0, 0.07, 1)')\r\n            ),\r\n        ]),\r\n    ],\r\n})\r\nexport class AppMainComponent implements AfterViewInit, OnDestroy, OnInit {\r\n    public menuInactiveDesktop: boolean;\r\n\r\n    public menuActiveMobile: boolean;\r\n\r\n    public overlayMenuActive: boolean = false;\r\n\r\n    public staticMenuInactive: boolean = false;\r\n\r\n    public profileActive: boolean;\r\n\r\n    public topMenuActive: boolean;\r\n\r\n    public topMenuLeaving: boolean;\r\n\r\n    public theme: string;\r\n\r\n    width;\r\n\r\n    documentClickListener: () => void;\r\n\r\n    menuClick: boolean;\r\n\r\n    topMenuButtonClick: boolean;\r\n\r\n    configActive: boolean;\r\n\r\n    configClick: boolean;\r\n\r\n    config: AppConfig;\r\n\r\n    subscription: Subscription;\r\n\r\n    premium = false;\r\n\r\n    trialDaysExpired = false;\r\n\r\n    trialDays;\r\n\r\n    closed = false;\r\n\r\n    constructor(\r\n        public renderer: Renderer2,\r\n        public app: AppComponent,\r\n        public configService: ConfigService,\r\n        private auth: AuthenticationService,\r\n        private router: Router,\r\n        private help: HelperService,\r\n        private api: ApiService\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.width = window.innerWidth;\r\n        this.config = this.configService.config;\r\n        this.subscription = this.configService.configUpdate$.subscribe(\r\n            (config) => (this.config = config)\r\n        );\r\n        let tokenStr = this.auth.getSession().token.accessToken;\r\n        let token: any = jwt_decode(tokenStr);\r\n        if (tokenStr && new Date(token.exp * 1000) < new Date()) {\r\n            this.auth.destroySession();\r\n            console.log('jika terjadi keanehan harap cek jam device anda');\r\n            this.router.navigate(['login']);\r\n        }\r\n        this.premium = this.help.checkStat(true);\r\n        this.api\r\n            .get('company/day-subscription')\r\n            .toPromise()\r\n            .then((res) => {\r\n                this.trialDays = res.day;\r\n\r\n                if (this.trialDays <= 30) {\r\n                    this.trialDaysExpired = true;\r\n                }\r\n            });\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        // hides the overlay menu and top menu if outside is clicked\r\n        this.documentClickListener = this.renderer.listen(\r\n            'body',\r\n            'click',\r\n            (event) => {\r\n                if (!this.isDesktop()) {\r\n                    if (!this.menuClick) {\r\n                        this.menuActiveMobile = false;\r\n                    }\r\n                } else {\r\n                    if (!this.menuClick && this.isOverlay()) {\r\n                        this.menuInactiveDesktop = true;\r\n                    }\r\n                    if (!this.menuClick) {\r\n                        this.overlayMenuActive = false;\r\n                    }\r\n                }\r\n                if (!this.topMenuButtonClick) {\r\n                    if (\r\n                        event?.path?.filter((pat) => pat.id == 'changeComp')\r\n                            .length <= 0\r\n                    ) {\r\n                        this.hideTopMenu();\r\n                    }\r\n                }\r\n\r\n                if (this.configActive && !this.configClick) {\r\n                    this.configActive = false;\r\n                }\r\n\r\n                this.configClick = false;\r\n                this.menuClick = false;\r\n                this.topMenuButtonClick = false;\r\n            }\r\n        );\r\n    }\r\n\r\n    isBurgerMenuClicked = true;\r\n    toggleMenu(event: Event) {\r\n        this.menuClick = true;\r\n        this.staticMenuInactive = !this.staticMenuInactive;\r\n        this.menuActiveMobile = !this.menuActiveMobile;\r\n        this.topMenuActive = false;\r\n        this.configService.triggerToggleMenu();\r\n        if (this.isBurgerMenuClicked) {\r\n            if(document.getElementById('layout-menubar')){\r\n                document.getElementById('layout-menubar').style.paddingLeft = '5rem';\r\n            }\r\n            this.isBurgerMenuClicked = false;\r\n        }else{\r\n            if(document.getElementById('layout-menubar')){\r\n                document.getElementById('layout-menubar').style.paddingLeft = '10rem';\r\n            }\r\n            this.isBurgerMenuClicked = true;\r\n        }\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    toggleProfile(event: Event) {\r\n        this.profileActive = !this.profileActive;\r\n        event.preventDefault();\r\n    }\r\n\r\n    toggleTopMenu(event: Event) {\r\n        this.topMenuButtonClick = true;\r\n        this.menuActiveMobile = false;\r\n\r\n        if (this.topMenuActive) {\r\n            this.hideTopMenu();\r\n        } else {\r\n            this.topMenuActive = true;\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n    hideTopMenu() {\r\n        this.topMenuLeaving = true;\r\n        setTimeout(() => {\r\n            this.topMenuActive = false;\r\n            this.topMenuLeaving = false;\r\n        }, 1);\r\n    }\r\n\r\n    onMenuClick() {\r\n        this.menuClick = true;\r\n    }\r\n\r\n    onConfigClick(event) {\r\n        this.configClick = true;\r\n    }\r\n\r\n    isStatic() {\r\n        return this.app.menuMode === 'static';\r\n    }\r\n\r\n    isOverlay() {\r\n        return this.app.menuMode === 'overlay';\r\n    }\r\n\r\n    isDesktop() {\r\n        return window.innerWidth > 1024;\r\n    }\r\n\r\n    isMobile() {\r\n        return window.innerWidth < 1024;\r\n    }\r\n\r\n    onSearchClick() {\r\n        this.topMenuButtonClick = true;\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.documentClickListener) {\r\n            this.documentClickListener();\r\n        }\r\n\r\n        if (this.subscription) {\r\n            this.subscription.unsubscribe();\r\n        }\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n            :host ::ng-deep .p-message {\n                margin-left: 0.25em;\n            }\n\n            :host ::ng-deep .p-toast {\n                margin-top: 5.7em;\n                z-index: 99999;\n            }\n        \n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "app",
                        "type": "AppComponent",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "configService",
                        "type": "ConfigService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "auth",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "help",
                        "type": "HelperService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "api",
                        "type": "ApiService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 104,
                "jsdoctags": [
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "app",
                        "type": "AppComponent",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "configService",
                        "type": "ConfigService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "auth",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "help",
                        "type": "HelperService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "api",
                        "type": "ApiService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "AfterViewInit",
                "OnDestroy",
                "OnInit"
            ],
            "templateData": "<div class=\"layout-wrapper\"\r\n    [ngClass]=\"{'layout-overlay':isOverlay(),\r\n                                'layout-static':isStatic(),\r\n                                'layout-theme-light':!config.dark,\r\n                                'layout-theme-dark':config.dark,\r\n                                'layout-overlay-sidebar-active': overlayMenuActive,\r\n                                'layout-static-sidebar-inactive': staticMenuInactive,\r\n                                'layout-mobile-sidebar-active':menuActiveMobile,\r\n                                'p-ripple-disabled': !config.ripple, 'p-input-filled': config.inputStyle === 'filled'}\">\r\n    <app-topbar></app-topbar>\r\n    <div class=\"layout-sidebar pt-0\">\r\n        <app-menu></app-menu>\r\n        <div>\r\n            <div class=\" mt-5 pt-3 col-12 p-fluid upgrade-image text-center\" *ngIf=\"!premium\">\r\n                <div class=\"col-12\">\r\n                    <label class=\"content-upgrade cus-text-base\">\r\n                        Sisa Waktu Trial\r\n                    </label>\r\n                </div>\r\n                <div class=\"col-12\">\r\n                    <label class=\"title-upgrade cus-text-2xl\">{{trialDays}} Hari\r\n                    </label>\r\n                </div>\r\n                <div class=\"col-12 pl-5 pr-5\">\r\n                    <button pButton pRipple routerLink=\"/premium/upgrade\" type=\"button\" label=\"Aktivasi Premium\"\r\n                        style=\"background-color: white;\"\r\n                        class=\"p-button-rounded p-button-text mr-2 mb-2 btn-small\"></button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"layout-main-container\">\r\n        <div class=\"layout-main\">\r\n            <div class=\"grid col\" *ngIf=\"trialDays && !closed && !premium\">\r\n                <div class=\"col-11 text-left bg-primary-color p-4 pb-5\" style=\"border-radius: 10px 0px 0px 10px;\">\r\n                    <label class=\"title-upgrade text-center cus-text-lg\">\r\n                        Aktivasi akun trial anda menjadi akun premium sekarang juga!\r\n                    </label>\r\n\r\n                    <button pButton pRipple routerLink=\"/premium/upgrade\" type=\"button\" label=\"Aktivasi Premium\"\r\n                        style=\"background-color: white; top: 10%;\"\r\n                        class=\"p-button-rounded p-button-text ml-2 mt-1 btn-small\"></button>\r\n                </div>\r\n                <div class=\"col-1 bg-primary-color flex align-items-center justify-content-end \"\r\n                    style=\"border-radius: 0px 10px 10px 0px;\">\r\n                    <i class=\"bi bi-x-lg\" style=\"color:white;cursor: pointer;\" (click)=\"closed=true\"></i>\r\n                </div>\r\n            </div>\r\n            <div class=\"grid col\" *ngIf=\"trialDaysExpired && !closed && premium\">\r\n                <div class=\"col-11 text-left bg-primary-color p-4 pb-5\" style=\"border-radius: 10px 0px 0px 10px;\">\r\n                    <label class=\"title-upgrade text-center cus-text-lg\">\r\n                        Masa berlangganan anda tersisa {{trialDays}} Hari lagi, silahkan ajukan perpanjangan..\r\n                    </label>\r\n\r\n                    <button pButton pRipple routerLink=\"/premium/renew-subscription\" type=\"button\"\r\n                        label=\"Perpanjang Premium\" style=\"background-color: white; top: 10%;\"\r\n                        class=\"p-button-rounded p-button-text ml-2 mt-1 btn-small\"></button>\r\n                </div>\r\n                <div class=\"col-1 bg-primary-color flex align-items-center justify-content-end \"\r\n                    style=\"border-radius: 0px 10px 10px 0px;\">\r\n                    <i class=\"bi bi-x-lg\" style=\"color:white;cursor: pointer;\" (click)=\"closed=true\"></i>\r\n                </div>\r\n            </div>\r\n            <ngx-spinner></ngx-spinner>\r\n            <router-outlet *ngIf=\"!config.loading\"></router-outlet>\r\n        </div>\r\n    </div>\r\n    <app-config></app-config>\r\n    <div *ngIf=\"menuActiveMobile\" class=\"layout-mask p-component-overlay\"></div>\r\n</div>\r\n"
        },
        {
            "name": "AppMenuComponent",
            "id": "component-AppMenuComponent-818be52c03b3e401796297205b1d64b334a7dbf82a97230eb39d5dd0ade8f4d55aaf884337f3f701bc3236f772b6fdb634627c14459e1b8bdeac3538d479b35a",
            "file": "src/app/layout/component/app.menu.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-menu",
            "styleUrls": [],
            "styles": [],
            "template": "<i class=\"fa-solid fa-backpack\"></i>\n    <div class=\"layout-menu-container\">\n        <ul class=\"layout-menu\" role=\"menu\" (keydown)=\"onKeydown($event)\">\n            <li app-menu class=\"layout-menuitem-category\" *ngFor=\"let item of model; let i = index;\" [item]=\"item\" [index]=\"i\" [root]=\"true\" role=\"none\">\n                <div class=\"layout-menuitem-root-text\" [attr.aria-label]=\"item.label\">{{item.label}}</div>\n                <ul role=\"menu\">\n                    <li app-menuitem *ngFor=\"let child of item.items\" [parent]=\"item.label\" [item]=\"child\" [index]=\"i\" role=\"none\"></li>\n                </ul>\n            </li>\n        </ul>\n    </div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "appMain",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AppMainComponent",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "auth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AuthenticationService",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "model",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "router",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Router",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onKeydown",
                    "args": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 143,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthenticationService } from 'src/app/core/service/authentication.service';\r\nimport { AppMainComponent } from './app.main.component';\r\n\r\n@Component({\r\n    selector: 'app-menu',\r\n    template: `\r\n    <i class=\"fa-solid fa-backpack\"></i>\r\n        <div class=\"layout-menu-container\">\r\n            <ul class=\"layout-menu\" role=\"menu\" (keydown)=\"onKeydown($event)\">\r\n                <li app-menu class=\"layout-menuitem-category\" *ngFor=\"let item of model; let i = index;\" [item]=\"item\" [index]=\"i\" [root]=\"true\" role=\"none\">\r\n                    <div class=\"layout-menuitem-root-text\" [attr.aria-label]=\"item.label\">{{item.label}}</div>\r\n                    <ul role=\"menu\">\r\n                        <li app-menuitem *ngFor=\"let child of item.items\" [parent]=\"item.label\" [item]=\"child\" [index]=\"i\" role=\"none\"></li>\r\n                    </ul>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    `\r\n})\r\nexport class AppMenuComponent implements OnInit {\r\n\r\n    model: any[];\r\n\r\n    constructor(public appMain: AppMainComponent,\r\n                public router:Router,public auth: AuthenticationService) { }\r\n\r\n    ngOnInit() {\r\n        if(this.router.url.includes('showcase'))\r\n        {\r\n            this.model = [\r\n                {\r\n                    label: 'Home',\r\n                    items:[\r\n                        {label: 'Dashboard',icon: 'bi bi-fw bi-home', routerLink: ['/showcase']}\r\n                    ]\r\n                },\r\n                {\r\n                    label: 'UI Components',\r\n                    items: [\r\n                        {label: 'Form Layout', icon: 'bi bi-fw bi-id-card', routerLink: ['/showcase/uikit/formlayout']},\r\n                        {label: 'Input', icon: 'bi bi-fw bi-check-square', routerLink: ['/showcase/uikit/input']},\r\n                        {label: 'Float Label',  routerLink: ['/showcase/uikit/floatlabel']},\r\n                        {label: 'Invalid State', icon: 'bi bi-fw bi-exclamation-circle', routerLink: ['/showcase/uikit/invalidstate']},\r\n                        {label: 'Button', icon: 'bi bi-fw bi-mobile', routerLink: ['/showcase/uikit/button'], class: 'rotated-icon'},\r\n                        {label: 'Table', icon: 'bi bi-fw bi-table', routerLink: ['/showcase/uikit/table']},\r\n                        {label: 'List', icon: 'bi bi-fw bi-list', routerLink: ['/showcase/uikit/list']},\r\n                        {label: 'Tree', icon: 'bi bi-fw bi-share-alt', routerLink: ['/showcase/uikit/tree']},\r\n                        {label: 'Panel', icon: 'bi bi-fw bi-tablet', routerLink: ['/showcase/uikit/panel']},\r\n                        {label: 'Overlay', icon: 'bi bi-fw bi-clone', routerLink: ['/showcase/uikit/overlay']},\r\n                        {label: 'Media', icon: 'bi bi-fw bi-image', routerLink: ['/showcase/uikit/media']},\r\n                        {label: 'Menu', icon: 'bi bi-fw bi-bars', routerLink: ['/showcase/uikit/menu']},\r\n                        {label: 'Message', icon: 'bi bi-fw bi-comment', routerLink: ['/showcase/uikit/message']},\r\n                        {label: 'File', icon: 'bi bi-fw bi-file', routerLink: ['/showcase/uikit/file']},\r\n                        {label: 'Chart', icon: 'bi bi-fw bi-chart-bar', routerLink: ['/showcase/uikit/charts']},\r\n                        {label: 'Misc', icon: 'bi bi-fw bi-circle', routerLink: ['/showcase/uikit/misc']}\r\n                    ]\r\n                },\r\n                {\r\n                    label:'UI Blocks',\r\n                    items:[\r\n                        {label: 'Free Blocks', icon: 'bi bi-fw bi-eye', routerLink: ['/blocks'], badge: 'NEW'},\r\n                        {label: 'All Blocks', icon: 'bi bi-fw bi-globe', url: ['https://www.primefaces.org/primeblocks-ng'], target: '_blank'},\r\n                    ]\r\n                },\r\n                {label:'Icons',\r\n                    items:[\r\n                        {label: 'PrimeIcons', icon: 'bi bi-fw bi-prime', routerLink: ['/icons']},\r\n                    ]\r\n                },\r\n                {\r\n                    label: 'Pages',\r\n                    items: [\r\n                        {label: 'Crud', icon: 'bi bi-fw bi-user-edit', routerLink: ['/pages/crud']},\r\n                        {label: 'Timeline', icon: 'bi bi-fw bi-calendar', routerLink: ['/pages/timeline']},\r\n                        {label: 'Empty', icon: 'bi bi-fw bi-circle', routerLink: ['/pages/empty']}\r\n                    ]\r\n                },\r\n                {\r\n                    label: 'Hierarchy',\r\n                    items: [\r\n                        {\r\n                            label: 'Submenu 1', \r\n                            items: [\r\n                                {\r\n                                    label: 'Submenu 1.1', \r\n                                    items: [\r\n                                        {label: 'Submenu 1.1.1', icon: 'bi bi-fw bi-bookmark'},\r\n                                        {label: 'Submenu 1.1.2', icon: 'bi bi-fw bi-bookmark'},\r\n                                        {label: 'Submenu 1.1.3', icon: 'bi bi-fw bi-bookmark'},\r\n                                    ]\r\n                                },\r\n                                {\r\n                                    label: 'Submenu 1.2', \r\n                                    items: [\r\n                                        {label: 'Submenu 1.2.1', icon: 'bi bi-fw bi-bookmark'}\r\n                                    ]\r\n                                },\r\n                            ]\r\n                        },\r\n                        {\r\n                            label: 'Submenu 2', \r\n                            items: [\r\n                                {\r\n                                    label: 'Submenu 2.1', \r\n                                    items: [\r\n                                        {label: 'Submenu 2.1.1', icon: 'bi bi-fw bi-bookmark'},\r\n                                        {label: 'Submenu 2.1.2', icon: 'bi bi-fw bi-bookmark'},\r\n                                    ]\r\n                                },\r\n                                {\r\n                                    label: 'Submenu 2.2', \r\n                                    items: [\r\n                                        {label: 'Submenu 2.2.1', icon: 'bi bi-fw bi-bookmark'},\r\n                                    ]\r\n                                },\r\n                            ]\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    label:'Get Started',\r\n                    items:[\r\n                        {\r\n                            label: 'Documentation', icon: 'bi bi-fw bi-question', routerLink: ['/documentation']\r\n                        },\r\n                        {\r\n                            label: 'View Source', icon: 'bi bi-fw bi-search', url: ['https://github.com/primefaces/sakai-ng'], target: '_blank'\r\n                        }\r\n                    ]\r\n                }\r\n            ];\r\n        }else{\r\n            this.model=[{\r\n                label:'Menu',\r\n                items:this.auth.getSession().user.tenant.tenantModules\r\n            }]\r\n        }\r\n        \r\n    }\r\n\r\n    onKeydown(event: KeyboardEvent) {\r\n        const nodeElement = (<HTMLDivElement> event.target);\r\n        if (event.code === 'Enter' || event.code === 'Space') {\r\n            nodeElement.click();\r\n            event.preventDefault();\r\n        }\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "appMain",
                        "type": "AppMainComponent",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "auth",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 24,
                "jsdoctags": [
                    {
                        "name": "appMain",
                        "type": "AppMainComponent",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "auth",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "AppMenuitemComponent",
            "id": "component-AppMenuitemComponent-f990fe1f6865a37051396b4b53a1dfa418b656c976f4469c7d1dc65487b31bad5a60e36817c782c61a9bc265c898b7574aced89a4a024f5f408d97b40e812f5a",
            "file": "src/app/layout/component/app.menuitem.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "[app-menuitem]",
            "styleUrls": [],
            "styles": [],
            "template": "<ng-container>\n\t<a [attr.href]=\"item.url\" (click)=\"itemClick($event)\" [ngClass]=\"router.url.includes(item.alias?.toLowerCase()) ? item.class+' active-menuitem-routerlink router-link-exact-active':item.class\" id=\"{{parent+'-'+item.label}}\"\n\t   *ngIf=\"(!item.routerLink || item.items) && item.visible !== false\"\n\t   [attr.target]=\"item.target\" [attr.tabindex]=\"0\" [attr.aria-label]=\"item.label\" role=\"menuitem\" pRipple>\n\t\t<i [ngClass]=\"item.icon ? item.icon:'bi bi-cash opac'\" class=\"layout-menuitem-icon\"></i>\n\t\t<span>{{item.label}}</span>\n\t\t<span class=\"menuitem-badge\" *ngIf=\"item.badge\">{{item.badge}}</span>\n\t\t<i class=\"pi pi-fw {{(active ||router.url.includes(item.alias?.toLowerCase())) ? 'pi-angle-up' : 'pi-angle-down'}} ml-auto\" *ngIf=\"item.items\"></i>\n\t</a>\n\t<a (click)=\"itemClick($event)\" *ngIf=\"(item.routerLink && !item.items) && item.visible !== false\" [ngClass]=\"item.class\"  id=\"{{parent+'-'+item.label}}\"\n\t   [routerLink]=\"item.routerLink\" routerLinkActive=\"active-menuitem-routerlink router-link-exact-active\"\n\t[attr.target]=\"item.target\" [attr.tabindex]=\"0\" [attr.aria-label]=\"item.label\" role=\"menuitem\" pRipple>\n\t\t<i [ngClass]=\"item.icon ? item.icon:'bi bi-cash opac'\" class=\"layout-menuitem-icon\"></i>\n\t\t<span>{{item.label}}</span>\n\t\t<span class=\"p-tag p-badge ml-auto\" *ngIf=\"item.badge\">{{item.badge}}</span>\n\t\t<i class=\"pi pi-fw {{active ? 'pi-angle-up' : 'pi-angle-down'}} ml-auto\" *ngIf=\"item.items\"></i>\n\t</a>\n\t<ul *ngIf=\"(item.items && (active || router.url.includes(item.alias?.toLowerCase()) )) && item.visible !== false\" [@children]=\"((active || router.url.includes(item.alias?.toLowerCase()) ) ? 'visibleAnimated' : 'hiddenAnimated')\" role=\"menu\" id=\"{{parent+'-'+item.label}}\">\n\t\t<ng-template ngFor let-child let-i=\"index\" [ngForOf]=\"item.items\">\n\t\t\t<li app-menuitem [item]=\"child\" [parent]=\"parent+'-'+item.label\" [index]=\"i\" [parentKey]=\"key\" [class]=\"child.badgeClass\" role=\"none\"></li>\n\t\t</ng-template>\n\t</ul>\n</ng-container>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "index",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 63,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "item",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 61,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "parent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "parentKey",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 69,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "root",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 67,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "active",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 71
                },
                {
                    "name": "app",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AppMainComponent",
                    "optional": false,
                    "description": "",
                    "line": 79,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "key",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 77
                },
                {
                    "name": "menuResetSubscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 75
                },
                {
                    "name": "menuSourceSubscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 73
                },
                {
                    "name": "router",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Router",
                    "optional": false,
                    "description": "",
                    "line": 79,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "itemClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 113,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 145,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 101,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateActiveStateFromRoute",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 109,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectorRef, Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { animate, state, style, transition, trigger } from '@angular/animations';\r\nimport { Subscription } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\nimport { AppMainComponent } from './app.main.component';\r\nimport { MenuService } from 'src/app/showcase/service/app.menu.service';\r\n\r\n@Component({\r\n    /* tslint:disable:component-selector */\r\n    selector: '[app-menuitem]',\r\n    /* tslint:enable:component-selector */\r\n    template: `\r\n\t\t<ng-container>\r\n\t\t\t<a [attr.href]=\"item.url\" (click)=\"itemClick($event)\" [ngClass]=\"router.url.includes(item.alias?.toLowerCase()) ? item.class+' active-menuitem-routerlink router-link-exact-active':item.class\" id=\"{{parent+'-'+item.label}}\"\r\n\t\t\t   *ngIf=\"(!item.routerLink || item.items) && item.visible !== false\"\r\n\t\t\t   [attr.target]=\"item.target\" [attr.tabindex]=\"0\" [attr.aria-label]=\"item.label\" role=\"menuitem\" pRipple>\r\n\t\t\t\t<i [ngClass]=\"item.icon ? item.icon:'bi bi-cash opac'\" class=\"layout-menuitem-icon\"></i>\r\n\t\t\t\t<span>{{item.label}}</span>\r\n\t\t\t\t<span class=\"menuitem-badge\" *ngIf=\"item.badge\">{{item.badge}}</span>\r\n\t\t\t\t<i class=\"pi pi-fw {{(active ||router.url.includes(item.alias?.toLowerCase())) ? 'pi-angle-up' : 'pi-angle-down'}} ml-auto\" *ngIf=\"item.items\"></i>\r\n\t\t\t</a>\r\n\t\t\t<a (click)=\"itemClick($event)\" *ngIf=\"(item.routerLink && !item.items) && item.visible !== false\" [ngClass]=\"item.class\"  id=\"{{parent+'-'+item.label}}\"\r\n\t\t\t   [routerLink]=\"item.routerLink\" routerLinkActive=\"active-menuitem-routerlink router-link-exact-active\"\r\n\t\t\t[attr.target]=\"item.target\" [attr.tabindex]=\"0\" [attr.aria-label]=\"item.label\" role=\"menuitem\" pRipple>\r\n\t\t\t\t<i [ngClass]=\"item.icon ? item.icon:'bi bi-cash opac'\" class=\"layout-menuitem-icon\"></i>\r\n\t\t\t\t<span>{{item.label}}</span>\r\n\t\t\t\t<span class=\"p-tag p-badge ml-auto\" *ngIf=\"item.badge\">{{item.badge}}</span>\r\n\t\t\t\t<i class=\"pi pi-fw {{active ? 'pi-angle-up' : 'pi-angle-down'}} ml-auto\" *ngIf=\"item.items\"></i>\r\n\t\t\t</a>\r\n\t\t\t<ul *ngIf=\"(item.items && (active || router.url.includes(item.alias?.toLowerCase()) )) && item.visible !== false\" [@children]=\"((active || router.url.includes(item.alias?.toLowerCase()) ) ? 'visibleAnimated' : 'hiddenAnimated')\" role=\"menu\" id=\"{{parent+'-'+item.label}}\">\r\n\t\t\t\t<ng-template ngFor let-child let-i=\"index\" [ngForOf]=\"item.items\">\r\n\t\t\t\t\t<li app-menuitem [item]=\"child\" [parent]=\"parent+'-'+item.label\" [index]=\"i\" [parentKey]=\"key\" [class]=\"child.badgeClass\" role=\"none\"></li>\r\n\t\t\t\t</ng-template>\r\n\t\t\t</ul>\r\n\t\t</ng-container>\r\n    `,\r\n    host: {\r\n        '[class.active-menuitem]': 'active',\r\n    },\r\n    animations: [\r\n        trigger('children', [\r\n            state('void', style({\r\n                height: '0px'\r\n            })),\r\n            state('hiddenAnimated', style({\r\n                height: '0px'\r\n            })),\r\n            state('visibleAnimated', style({\r\n                height: '*'\r\n            })),\r\n            transition('visibleAnimated => hiddenAnimated', animate('400ms cubic-bezier(0.86, 0, 0.07, 1)')),\r\n            transition('hiddenAnimated => visibleAnimated', animate('400ms cubic-bezier(0.86, 0, 0.07, 1)')),\r\n            transition('void => visibleAnimated, visibleAnimated => void',\r\n                animate('400ms cubic-bezier(0.86, 0, 0.07, 1)'))\r\n        ])\r\n    ]\r\n})\r\nexport class AppMenuitemComponent implements OnInit, OnDestroy {\r\n\r\n    @Input() item: any;\r\n\r\n    @Input() index: number;\r\n    \r\n    @Input() parent: string;\r\n\r\n    @Input() root: boolean;\r\n\r\n    @Input() parentKey: string;\r\n\r\n    active = false;\r\n\r\n    menuSourceSubscription: Subscription;\r\n\r\n    menuResetSubscription: Subscription;\r\n\r\n    key: string;\r\n\r\n    constructor(public app: AppMainComponent, public router: Router, private cd: ChangeDetectorRef, private menuService: MenuService) {\r\n        this.menuSourceSubscription = this.menuService.menuSource$.subscribe(key => {\r\n            // deactivate current active menu\r\n            if (this.active && this.key !== key && key.indexOf(this.key) !== 0) {\r\n                this.active = false;\r\n            }\r\n        });\r\n\r\n        this.menuResetSubscription = this.menuService.resetSource$.subscribe(() => {\r\n            this.active = false;\r\n        });\r\n\r\n        this.router.events.pipe(filter(event => event instanceof NavigationEnd))\r\n            .subscribe(params => {\r\n                if (this.item.routerLink) {\r\n                    this.updateActiveStateFromRoute();\r\n                } else {\r\n                    this.active = false;\r\n                }\r\n            });\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (this.item.routerLink) {\r\n            this.updateActiveStateFromRoute();\r\n        }\r\n\r\n        this.key = this.parentKey ? this.parentKey + '-' + this.index : String(this.index);\r\n    }\r\n\r\n    updateActiveStateFromRoute() {\r\n        this.active = this.router.isActive(this.item.routerLink[0], this.item.items ? false : true);\r\n    }\r\n\r\n    itemClick(event: Event) {\r\n        event.stopPropagation();\r\n        // avoid processing disabled items\r\n        if (this.item.disabled) {\r\n            event.preventDefault();\r\n            return;\r\n        }\r\n\r\n        // notify other items\r\n        this.menuService.onMenuStateChange(this.key);\r\n\r\n        // execute command\r\n        if (this.item.command) {\r\n            this.item.command({originalEvent: event, item: this.item});\r\n        }\r\n\r\n        // toggle active state\r\n        if (this.item.items) {\r\n            this.active = !this.active;\r\n        } else {\r\n            // activate item\r\n            this.active = true;\r\n\r\n            // hide overlay menus\r\n            this.app.menuActiveMobile = false;\r\n\r\n            if (this.app.isDesktop() && this.app.isOverlay()) {\r\n                this.app.menuInactiveDesktop = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.menuSourceSubscription) {\r\n            this.menuSourceSubscription.unsubscribe();\r\n        }\r\n\r\n        if (this.menuResetSubscription) {\r\n            this.menuResetSubscription.unsubscribe();\r\n        }\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "app",
                        "type": "AppMainComponent",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "menuService",
                        "type": "MenuService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 77,
                "jsdoctags": [
                    {
                        "name": "app",
                        "type": "AppMainComponent",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "menuService",
                        "type": "MenuService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ]
        },
        {
            "name": "ApprovalStatusComponent",
            "id": "component-ApprovalStatusComponent-7ec3a955a2b940a4c2bc549bde0f7861ce99922d3433a2fa5e65439051cef213955abfe8f70e9c268dd4f022b29fe414e13af5ce47a3b20173e4f15abe4dd400",
            "file": "src/app/core/shared-component/approval-status/approval-status.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-approval-status",
            "styleUrls": [
                "./approval-status.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./approval-status.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "class",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-approval-status',\r\n  templateUrl: './approval-status.component.html',\r\n  styleUrls: ['./approval-status.component.scss']\r\n})\r\nexport class ApprovalStatusComponent implements OnInit {\r\n  @Input() status\r\n  class;\r\n  constructor() { \r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.class = this.status.toLowerCase()+'-text';\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./approval-status.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 10
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<label [ngClass]=\"class\">{{status}}</label>"
        },
        {
            "name": "AppTopBarComponent",
            "id": "component-AppTopBarComponent-39f3fc25e44c1dbb12a189ccaecaf54384d00e3163cbdb625fedfa5c7465eb78d58bce297c8861411bece74c9db27fb79b173e96ea89dadd41cbabc68b90daa2",
            "file": "src/app/layout/component/app.topbar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-topbar",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.topbar.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "api",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApiService",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "appMain",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AppMainComponent",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "cities",
                    "defaultValue": "[\r\n        { name: 'New York', code: 'NY' },\r\n        { name: 'Rome', code: 'RM' },\r\n        { name: 'London', code: 'LDN' },\r\n        { name: 'Istanbul', code: 'IST' },\r\n        { name: 'Paris', code: 'PRS' },\r\n    ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "items",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem[]",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "msg",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MessageBoxService",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "session",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [
                {
                    "name": "doLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 163,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "selectCompany",
                    "args": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 174,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { AppMainComponent } from './app.main.component';\r\nimport { MenuItem } from 'primeng/api';\r\nimport { ApiService } from 'src/app/core/service/api.service';\r\nimport { MessageBoxService } from 'src/app/core/service/message-box.service';\r\nimport { AuthenticationService } from 'src/app/core/service/authentication.service';\r\nimport { Router } from '@angular/router';\r\nimport { ConfigService } from 'src/app/core/service/app.config.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n    selector: 'app-topbar',\r\n    templateUrl: './app.topbar.component.html',\r\n})\r\nexport class AppTopBarComponent implements OnInit {\r\n    items: MenuItem[];\r\n    session;\r\n    cities = [\r\n        { name: 'New York', code: 'NY' },\r\n        { name: 'Rome', code: 'RM' },\r\n        { name: 'London', code: 'LDN' },\r\n        { name: 'Istanbul', code: 'IST' },\r\n        { name: 'Paris', code: 'PRS' },\r\n    ];\r\n    constructor(\r\n        public appMain: AppMainComponent,\r\n        public api: ApiService,\r\n        public msg: MessageBoxService,\r\n        private auth: AuthenticationService,\r\n        private route: Router,\r\n        private config: ConfigService\r\n    ) {}\r\n    ngOnInit(): void {\r\n        this.session = this.auth.getSession();\r\n        this.items = [\r\n            {\r\n                label: 'File',\r\n                icon: 'pi pi-fw pi-file',\r\n                items: [\r\n                    {\r\n                        label: 'New',\r\n                        icon: 'pi pi-fw pi-plus',\r\n                        items: [\r\n                            {\r\n                                label: 'Bookmark',\r\n                                icon: 'pi pi-fw pi-bookmark',\r\n                            },\r\n                            {\r\n                                label: 'Video',\r\n                                icon: 'pi pi-fw pi-video',\r\n                            },\r\n                        ],\r\n                    },\r\n                    {\r\n                        label: 'Delete',\r\n                        icon: 'pi pi-fw pi-trash',\r\n                    },\r\n                    {\r\n                        separator: true,\r\n                    },\r\n                    {\r\n                        label: 'Export',\r\n                        icon: 'pi pi-fw pi-external-link',\r\n                    },\r\n                ],\r\n            },\r\n            {\r\n                label: 'Edit',\r\n                icon: 'pi pi-fw pi-pencil',\r\n                items: [\r\n                    {\r\n                        label: 'Left',\r\n                        icon: 'pi pi-fw pi-align-left',\r\n                    },\r\n                    {\r\n                        label: 'Right',\r\n                        icon: 'pi pi-fw pi-align-right',\r\n                    },\r\n                    {\r\n                        label: 'Center',\r\n                        icon: 'pi pi-fw pi-align-center',\r\n                    },\r\n                    {\r\n                        label: 'Justify',\r\n                        icon: 'pi pi-fw pi-align-justify',\r\n                    },\r\n                ],\r\n            },\r\n            {\r\n                label: 'Users',\r\n                icon: 'pi pi-fw pi-user',\r\n                styleClass: 'active',\r\n                items: [\r\n                    {\r\n                        label: 'New',\r\n                        icon: 'pi pi-fw pi-user-plus',\r\n                    },\r\n                    {\r\n                        label: 'Delete',\r\n                        icon: 'pi pi-fw pi-user-minus',\r\n                    },\r\n                    {\r\n                        label: 'Search',\r\n                        icon: 'pi pi-fw pi-users',\r\n                        styleClass: 'active',\r\n                        items: [\r\n                            {\r\n                                label: 'Filter',\r\n                                icon: 'pi pi-fw pi-filter',\r\n                                styleClass: 'active',\r\n                                items: [\r\n                                    {\r\n                                        label: 'Print',\r\n                                        icon: 'pi pi-fw pi-print',\r\n                                        styleClass: 'active',\r\n                                    },\r\n                                ],\r\n                            },\r\n                            {\r\n                                icon: 'pi pi-fw pi-bars',\r\n                                label: 'List',\r\n                            },\r\n                        ],\r\n                    },\r\n                ],\r\n            },\r\n            {\r\n                label: 'Events',\r\n                icon: 'pi pi-fw pi-calendar',\r\n                items: [\r\n                    {\r\n                        label: 'Edit',\r\n                        icon: 'pi pi-fw pi-pencil',\r\n                        items: [\r\n                            {\r\n                                label: 'Save',\r\n                                icon: 'pi pi-fw pi-calendar-plus',\r\n                            },\r\n                            {\r\n                                label: 'Delete',\r\n                                icon: 'pi pi-fw pi-calendar-minus',\r\n                            },\r\n                        ],\r\n                    },\r\n                    {\r\n                        label: 'Archieve',\r\n                        icon: 'pi pi-fw pi-calendar-times',\r\n                        items: [\r\n                            {\r\n                                label: 'Remove',\r\n                                icon: 'pi pi-fw pi-calendar-minus',\r\n                            },\r\n                        ],\r\n                    },\r\n                ],\r\n            },\r\n            {\r\n                label: 'Quit',\r\n                icon: 'pi pi-fw pi-power-off',\r\n            },\r\n        ];\r\n    }\r\n    doLogout() {\r\n        this.api.delete('auth/logout').subscribe((res) => {\r\n            this.auth.destroySession();\r\n        });\r\n        if (environment.isSSO) {\r\n            this.auth.destroySession();\r\n            window.location.href = environment.linovWordpress;\r\n        } else {\r\n            this.route.navigate(['/login']);\r\n        }\r\n    }\r\n    selectCompany(e) {\r\n        if (this.session.selectedCompanyId != e.id) {\r\n            this.config.setLoading(true);\r\n            this.api\r\n                .post('auth/change-company', { id: e.id }, true)\r\n                .subscribe((res) => {\r\n                    this.auth.createSession(res);\r\n                    this.session = this.auth.getSession();\r\n                    this.config.setLoading(false);\r\n                });\r\n        }\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "appMain",
                        "type": "AppMainComponent",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "api",
                        "type": "ApiService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "msg",
                        "type": "MessageBoxService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "auth",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "config",
                        "type": "ConfigService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 24,
                "jsdoctags": [
                    {
                        "name": "appMain",
                        "type": "AppMainComponent",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "api",
                        "type": "ApiService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "msg",
                        "type": "MessageBoxService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "auth",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "config",
                        "type": "ConfigService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"layout-topbar\">\r\n    <a\r\n        class=\"p-link layout-topbar-button\"\r\n        href=\"#\"\r\n        (click)=\"appMain.toggleMenu($event)\"\r\n    >\r\n        <i class=\"fas fa-bars i-top\"></i>\r\n    </a>\r\n\r\n    <a class=\"layout-topbar-logo\" routerLink=\"\">\r\n        <img class=\"logo\" src=\"assets/logo/LinovHR-logo.svg\" alt=\"logo\" />\r\n    </a>\r\n    <div class=\"layout-topbar-search\">\r\n        <span class=\"p-input-icon-right\">\r\n            <i class=\"fas fa-search\"></i>\r\n            <input type=\"text\" pInputText placeholder=\"Search Menu\" />\r\n        </span>\r\n    </div>\r\n    <div></div>\r\n    <a\r\n        class=\"p-link layout-topbar-menu-button layout-topbar-button\"\r\n        href=\"#\"\r\n        (click)=\"appMain.toggleTopMenu($event)\"\r\n    >\r\n        <i class=\"fas fa-ellipsis-v i-top\"></i>\r\n    </a>\r\n\r\n    <div class=\"layout-topbar-icon\">\r\n        <p-multiSelect\r\n            [options]=\"cities\"\r\n            placeholder=\"Company Name\"\r\n            optionLabel=\"name\"\r\n        ></p-multiSelect>\r\n        <i class=\"layout-topbar-button fas fa-bell i-top\" style=\"font-size: 20px;\"></i>\r\n        <a\r\n            class=\"p-link layout-topbar-button\"\r\n            (click)=\"appMain.toggleTopMenu($event)\"\r\n        >\r\n            <i class=\"fas fa-user i-top\"></i>\r\n        </a>\r\n    </div>\r\n\r\n    <div\r\n        class=\"layout-topbar-menu\"\r\n        [ngClass]=\"{\r\n            'layout-topbar-menu-mobile-active': appMain.topMenuActive\r\n        }\"\r\n    >\r\n        <span class=\"p-link layout-topbar-button\">\r\n            <i class=\"fas fa-user\"></i>\r\n            <span>\r\n                {{ session?.user?.name ? session?.user?.name : \"Username\" }}\r\n            </span>\r\n        </span>\r\n        <div class=\"layout-topbar-button\" *ngIf=\"session?.user?.isSa\">\r\n            <app-lov\r\n                id=\"changeComp\"\r\n                [customOption]=\"session?.user?.tenant?.companies\"\r\n                [value]=\"session?.selectedCompanyId\"\r\n                (selected)=\"selectCompany($event)\"\r\n            ></app-lov>\r\n        </div>\r\n        <a\r\n            (click)=\"doLogout(); appMain.toggleTopMenu($event)\"\r\n            class=\"p-link layout-topbar-button\"\r\n        >\r\n            <i class=\"fas fa-sign-out-alt\"></i>\r\n            <span>Logout</span>\r\n        </a>\r\n    </div>\r\n</div>\r\n<div class=\"layout-menubar\" id=\"layout-menubar\">\r\n    <p-menubar [model]=\"items\"> </p-menubar>\r\n</div>\r\n"
        },
        {
            "name": "AttendanceDashboardComponent",
            "id": "component-AttendanceDashboardComponent-33c9996f9526ebb2ff05f1834128c9d88678595c0a498e55dd764d090096169e6ed0b2f7cda084a32af68afdd76702589460870b5ddfd6d36c96db62d61eaeb5",
            "file": "src/app/core/dashboard/component/attendance-dashboard/attendance-dashboard.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-attendance-dashboard",
            "styleUrls": [
                "./attendance-dashboard.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./attendance-dashboard.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "chartOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "listOpt",
                    "defaultValue": "[\r\n        { label: 'Hari ini', value: 0 },\r\n        { label: 'Minggu ini', value: 1 },\r\n        { label: 'Bulan Ini', value: 4 },\r\n    ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "loading",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "subcription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 102
                }
            ],
            "methodsClass": [
                {
                    "name": "getData",
                    "args": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 117,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 164,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 103,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSelect",
                    "args": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 98,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "reload",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 136,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "wait",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 112,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        132
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport * as ApexCharts from 'apexcharts';\r\nimport { ConfigService } from 'src/app/core/service/app.config.service';\r\nimport { DashboardService } from '../../service/dashboard.service';\r\n\r\n@Component({\r\n    selector: 'app-attendance-dashboard',\r\n    templateUrl: './attendance-dashboard.component.html',\r\n    styleUrls: ['./attendance-dashboard.component.scss'],\r\n})\r\nexport class AttendanceDashboardComponent implements OnInit, OnDestroy {\r\n    chartOptions;\r\n    listOpt = [\r\n        { label: 'Hari ini', value: 0 },\r\n        { label: 'Minggu ini', value: 1 },\r\n        { label: 'Bulan Ini', value: 4 },\r\n    ];\r\n    loading = true;\r\n    constructor(\r\n        private srv: DashboardService,\r\n        private configService: ConfigService\r\n    ) {\r\n        this.chartOptions = {\r\n            chart: {\r\n                id: 'attendance-chart',\r\n                height: 285,\r\n                type: 'donut',\r\n            },\r\n            labels: [],\r\n            tooltip: {\r\n                enabled: true,\r\n            },\r\n            responsive: [\r\n                {\r\n                    breakpoint: 900,\r\n                    options: {\r\n                        chart: {\r\n                            height: 400,\r\n                        },\r\n                        legend: {\r\n                            position: 'bottom',\r\n                        },\r\n                    },\r\n                },\r\n            ],\r\n            noData: {\r\n                text: 'Empty Data',\r\n                align: 'center',\r\n                verticalAlign: 'middle',\r\n                offsetX: -80,\r\n                offsetY: -20,\r\n                style: {\r\n                    color: '#9f9f9f',\r\n                    fontSize: '14px',\r\n                },\r\n            },\r\n            series: [],\r\n            plotOptions: {\r\n                pie: {\r\n                    donut: {\r\n                        labels: {\r\n                            show: true,\r\n                            name: {\r\n                                show: true,\r\n                                fontSize: '18px',\r\n                                fontFamily: 'SF Pro Text',\r\n                                offsetY: -10,\r\n                            },\r\n                            value: {\r\n                                show: true,\r\n                                fontSize: '16px',\r\n                                fontFamily: 'SF Pro Text',\r\n                                offsetY: 16,\r\n                                formatter: function (val) {\r\n                                    return val;\r\n                                },\r\n                            },\r\n                            total: {\r\n                                show: true,\r\n                                label: 'Total',\r\n                                color: '#373d3f',\r\n                                formatter: function (w) {\r\n                                    return w.globals.seriesTotals.reduce(\r\n                                        (a, b) => {\r\n                                            return a + b;\r\n                                        },\r\n                                        0\r\n                                    );\r\n                                },\r\n                            },\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n        };\r\n    }\r\n\r\n    onSelect(e) {\r\n        this.getData(e);\r\n    }\r\n\r\n    subcription;\r\n    ngOnInit(): void {\r\n        this.getData(0);\r\n        this.subcription = this.configService.menuToggle$.subscribe(\r\n            (config) => {\r\n                this.wait();\r\n            }\r\n        );\r\n    }\r\n\r\n    async wait() {\r\n        await new Promise((f) => setTimeout(f, 200));\r\n        this.reload();\r\n    }\r\n\r\n    getData(e) {\r\n        this.loading = true;\r\n        this.srv\r\n            .getAttendance(e)\r\n            .toPromise()\r\n            .then((res) => {\r\n                this.chartOptions.series = res.data;\r\n                if (\r\n                    this.chartOptions.series[0] == 0 &&\r\n                    this.chartOptions.series[1] == 0\r\n                ) {\r\n                    this.chartOptions.series = [];\r\n                }\r\n                this.chartOptions.labels = res.labels;\r\n                this.loading = false;\r\n                this.reload();\r\n            });\r\n    }\r\n\r\n    reload() {\r\n        this.chartOptions.responsive = [\r\n            {\r\n                breakpoint: 480,\r\n                options: {\r\n                    legend: {\r\n                        position: 'bottom',\r\n                    },\r\n                    noData: {\r\n                        offsetX: 0,\r\n                        offsetY: -50,\r\n                    },\r\n                    dataLabels: {\r\n                        enabled: true,\r\n                        style: {\r\n                            fontSize: '10px',\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n        ];\r\n        var chart = new ApexCharts(\r\n            document.querySelector('#attendanceChart'),\r\n            this.chartOptions\r\n        );\r\n\r\n        chart.render();\r\n    }\r\n    ngOnDestroy(): void {\r\n        this.subcription.unsubscribe();\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./attendance-dashboard.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "srv",
                        "type": "DashboardService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "configService",
                        "type": "ConfigService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "srv",
                        "type": "DashboardService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "configService",
                        "type": "ConfigService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<div class=\"grid field p-fluid\">\r\n  <div class=\"col-12 md:col-8 m-0 p-0\">\r\n    <h5 class=\"pt-2\">Grafik Daftar Absensi</h5>\r\n  </div>\r\n  <div class=\"col-12 md:col-4\">\r\n    <p-dropdown [options]=\"listOpt\" (onChange)=\"onSelect($event.value)\"></p-dropdown>\r\n  </div>\r\n</div>\r\n<apx-chart #attendanceChart [series]=\"chartOptions.series\" [noData]=\"chartOptions.noData\" [chart]=\"chartOptions.chart\"\r\n  [tooltip]=\"chartOptions.tooltip\" [plotOptions]=\"chartOptions.plotOptions\" [labels]=\"chartOptions.labels\"\r\n  [responsive]=\"chartOptions.responsive\">\r\n</apx-chart>"
        },
        {
            "name": "BirthdayDashboardComponent",
            "id": "component-BirthdayDashboardComponent-ce689e1d5122036da1e33a3ee446c59dc8b08dcc6daff63cc147179fe35752db0b999e9871d6eeffbd14eba27fae2495eb1be4d402453fef27d93a64bd753585",
            "file": "src/app/core/dashboard/component/birthday-dashboard/birthday-dashboard.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-birthday-dashboard",
            "styleUrls": [
                "./birthday-dashboard.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./birthday-dashboard.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { DashboardService } from '../../service/dashboard.service';\r\n\r\n@Component({\r\n  selector: 'app-birthday-dashboard',\r\n  templateUrl: './birthday-dashboard.component.html',\r\n  styleUrls: ['./birthday-dashboard.component.scss']\r\n})\r\nexport class BirthdayDashboardComponent implements OnInit {\r\n\r\n  constructor(private srv:DashboardService) { }\r\n\r\n  data=[];\r\n\r\n  ngOnInit(): void {\r\n    this.srv.getBirthdayToday().toPromise().then(res=>{\r\n      this.data=res;\r\n    })\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./birthday-dashboard.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "srv",
                        "type": "DashboardService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "srv",
                        "type": "DashboardService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<h6 class=\"pt-2\">Ulang Tahun Karyawan</h6>\r\n<div style=\"height: 250px;overflow-y:auto;\" *ngIf=\"data.length > 0 else noData\">\r\n    <div class=\"m-3 pb-2 grid field\" style=\"border-bottom: 1px solid #EBEBEB;\" *ngFor=\"let item of data\">\r\n        <img class=\"pr-2\" src=\"{{item.gender =='F' ? 'assets/F.png':'assets/M.png'}}\">\r\n        <span class=\"pt-1\">\r\n            <div class=\"label-normal\">{{item.name}}</div>\r\n            <div class=\"label-small\">{{item.birthDay}}</div>\r\n        </span>\r\n    </div>\r\n</div>\r\n\r\n<ng-template #noData>\r\n    <div class=\"no-data-image\">\r\n    </div>\r\n</ng-template>\r\n"
        },
        {
            "name": "BlocksComponent",
            "id": "component-BlocksComponent-f58080a01eaf9e700097a5434d9b9d88ae240fec1c33cf22d49020f4f133273f8276ceeacd0475b0c66891abb5bfd9f5ead84911b7e7c2d27f86128cc6fcce10",
            "file": "src/app/showcase/components/blocks/blocks.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./blocks.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "block1",
                    "defaultValue": "`\r\n  <div class=\"grid grid-nogutter surface-section text-800\">\r\n      <div class=\"col-12 md:col-6 p-6 text-center md:text-left flex align-items-center \">\r\n          <section>\r\n              <span class=\"block text-6xl font-bold mb-1\">Create the screens your</span>\r\n              <div class=\"text-6xl text-primary font-bold mb-3\">your visitors deserve to see</div>\r\n              <p class=\"mt-0 mb-4 text-700 line-height-3\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\r\n\r\n              <button pButton pRipple label=\"Learn More\" type=\"button\" class=\"mr-3 p-button-raised\"></button>\r\n              <button pButton pRipple label=\"Live Demo\" type=\"button\" class=\"p-button-outlined\"></button>\r\n          </section>\r\n      </div>\r\n      <div class=\"col-12 md:col-6 overflow-hidden\">\r\n          <img src=\"assets/demo/images/blocks/hero/hero-1.png\" alt=\"Image\" class=\"md:ml-auto block md:h-full\" style=\"clip-path: polygon(8% 0, 100% 0%, 100% 100%, 0 100%)\">\r\n      </div>\r\n  </div>`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "block10",
                    "defaultValue": "`\r\n  <div class=\"surface-card p-4 shadow-2 border-round\">\r\n      <div class=\"text-3xl font-medium text-900 mb-3\">Card Title</div>\r\n      <div class=\"font-medium text-500 mb-3\">Vivamus id nisl interdum, blandit augue sit amet, eleifend mi.</div>\r\n      <div style=\"height: 150px\" class=\"border-2 border-dashed surface-border\"></div>\r\n  </div>`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 400
                },
                {
                    "name": "block2",
                    "defaultValue": "`\r\n  <div class=\"surface-section px-4 py-8 md:px-6 lg:px-8 text-center\">\r\n      <div class=\"mb-3 font-bold text-2xl\">\r\n          <span class=\"text-900\">One Product, </span>\r\n          <span class=\"text-blue-600\">Many Solutions</span>\r\n      </div>\r\n      <div class=\"text-700 text-sm mb-6\">Ac turpis egestas maecenas pharetra convallis posuere morbi leo urna.</div>\r\n      <div class=\"grid\">\r\n          <div class=\"col-12 md:col-4 mb-4 px-5\">\r\n              <span class=\"p-3 shadow-2 mb-3 inline-block surface-card\" style=\"border-radius: 10px\">\r\n                  <i class=\"pi pi-desktop text-4xl text-blue-500\"></i>\r\n              </span>\r\n              <div class=\"text-900 mb-3 font-medium\">Built for Developers</div>\r\n              <span class=\"text-700 text-sm line-height-3\">Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.</span>\r\n          </div>\r\n          <div class=\"col-12 md:col-4 mb-4 px-5\">\r\n              <span class=\"p-3 shadow-2 mb-3 inline-block surface-card\" style=\"border-radius: 10px\">\r\n                  <i class=\"pi pi-lock text-4xl text-blue-500\"></i>\r\n              </span>\r\n              <div class=\"text-900 mb-3 font-medium\">End-to-End Encryption</div>\r\n              <span class=\"text-700 text-sm line-height-3\">Risus nec feugiat in fermentum posuere urna nec. Posuere sollicitudin aliquam ultrices sagittis.</span>\r\n          </div>\r\n          <div class=\"col-12 md:col-4 mb-4 px-5\">\r\n              <span class=\"p-3 shadow-2 mb-3 inline-block surface-card\" style=\"border-radius: 10px\">\r\n                  <i class=\"pi pi-check-circle text-4xl text-blue-500\"></i>\r\n              </span>\r\n              <div class=\"text-900 mb-3 font-medium\">Easy to Use</div>\r\n              <span class=\"text-700 text-sm line-height-3\">Ornare suspendisse sed nisi lacus sed viverra tellus. Neque volutpat ac tincidunt vitae semper.</span>\r\n          </div>\r\n          <div class=\"col-12 md:col-4 mb-4 px-5\">\r\n              <span class=\"p-3 shadow-2 mb-3 inline-block surface-card\" style=\"border-radius: 10px\">\r\n                  <i class=\"pi pi-globe text-4xl text-blue-500\"></i>\r\n              </span>\r\n              <div class=\"text-900 mb-3 font-medium\">Fast & Global Support</div>\r\n              <span class=\"text-700 text-sm line-height-3\">Fermentum et sollicitudin ac orci phasellus egestas tellus rutrum tellus.</span>\r\n          </div>\r\n          <div class=\"col-12 md:col-4 mb-4 px-5\">\r\n              <span class=\"p-3 shadow-2 mb-3 inline-block surface-card\" style=\"border-radius: 10px\">\r\n                  <i class=\"pi pi-github text-4xl text-blue-500\"></i>\r\n              </span>\r\n              <div class=\"text-900 mb-3 font-medium\">Open Source</div>\r\n              <span class=\"text-700 text-sm line-height-3\">Nec tincidunt praesent semper feugiat. Sed adipiscing diam donec adipiscing tristique risus nec feugiat. </span>\r\n          </div>\r\n          <div class=\"col-12 md:col-4 md:mb-4 mb-0 px-3\">\r\n              <span class=\"p-3 shadow-2 mb-3 inline-block surface-card\" style=\"border-radius: 10px\">\r\n                  <i class=\"pi pi-shield text-4xl text-blue-500\"></i>\r\n              </span>\r\n              <div class=\"text-900 mb-3 font-medium\">Trusted Securitty</div>\r\n              <span class=\"text-700 text-sm line-height-3\">Mattis rhoncus urna neque viverra justo nec ultrices. Id cursus metus aliquam eleifend.</span>\r\n          </div>\r\n      </div>\r\n  </div>`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "block3",
                    "defaultValue": "`\r\n  <div class=\"surface-ground px-4 py-8 md:px-6 lg:px-8\">\r\n      <div class=\"text-900 font-bold text-6xl mb-4 text-center\">Pricing Plans</div>\r\n      <div class=\"text-700 text-xl mb-6 text-center line-height-3\">Lorem ipsum dolor sit, amet consectetur adipisicing elit. Velit numquam eligendi quos.</div>\r\n\r\n      <div class=\"grid\">\r\n          <div class=\"col-12 lg:col-4\">\r\n              <div class=\"p-3 h-full\">\r\n                  <div class=\"shadow-2 p-3 h-full flex flex-column surface-card\" style=\"border-radius: 6px\">\r\n                      <div class=\"text-900 font-medium text-xl mb-2\">Basic</div>\r\n                      <div class=\"text-600\">Plan description</div>\r\n                      <hr class=\"my-3 mx-0 border-top-1 border-none surface-border\" />\r\n                      <div class=\"flex align-items-center\">\r\n                          <span class=\"font-bold text-2xl text-900\">$9</span>\r\n                          <span class=\"ml-2 font-medium text-600\">per month</span>\r\n                      </div>\r\n                      <hr class=\"my-3 mx-0 border-top-1 border-none surface-border\" />\r\n                      <ul class=\"list-none p-0 m-0 flex-grow-1\">\r\n                          <li class=\"flex align-items-center mb-3\">\r\n                              <i class=\"pi pi-check-circle text-green-500 mr-2\"></i>\r\n                              <span>Arcu vitae elementum</span>\r\n                          </li>\r\n                          <li class=\"flex align-items-center mb-3\">\r\n                              <i class=\"pi pi-check-circle text-green-500 mr-2\"></i>\r\n                              <span>Dui faucibus in ornare</span>\r\n                          </li>\r\n                          <li class=\"flex align-items-center mb-3\">\r\n                              <i class=\"pi pi-check-circle text-green-500 mr-2\"></i>\r\n                              <span>Morbi tincidunt augue</span>\r\n                          </li>\r\n                      </ul>\r\n                      <hr class=\"mb-3 mx-0 border-top-1 border-none surface-border mt-auto\" />\r\n                      <button pButton pRipple label=\"Buy Now\" class=\"p-3 w-full mt-auto\"></button>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n\r\n          <div class=\"col-12 lg:col-4\">\r\n              <div class=\"p-3 h-full\">\r\n                  <div class=\"shadow-2 p-3 h-full flex flex-column surface-card\" style=\"border-radius: 6px\">\r\n                      <div class=\"text-900 font-medium text-xl mb-2\">Premium</div>\r\n                      <div class=\"text-600\">Plan description</div>\r\n                      <hr class=\"my-3 mx-0 border-top-1 border-none surface-border\" />\r\n                      <div class=\"flex align-items-center\">\r\n                          <span class=\"font-bold text-2xl text-900\">$29</span>\r\n                          <span class=\"ml-2 font-medium text-600\">per month</span>\r\n                      </div>\r\n                      <hr class=\"my-3 mx-0 border-top-1 border-none surface-border\" />\r\n                      <ul class=\"list-none p-0 m-0 flex-grow-1\">\r\n                          <li class=\"flex align-items-center mb-3\">\r\n                              <i class=\"pi pi-check-circle text-green-500 mr-2\"></i>\r\n                              <span>Arcu vitae elementum</span>\r\n                          </li>\r\n                          <li class=\"flex align-items-center mb-3\">\r\n                              <i class=\"pi pi-check-circle text-green-500 mr-2\"></i>\r\n                              <span>Dui faucibus in ornare</span>\r\n                          </li>\r\n                          <li class=\"flex align-items-center mb-3\">\r\n                              <i class=\"pi pi-check-circle text-green-500 mr-2\"></i>\r\n                              <span>Morbi tincidunt augue</span>\r\n                          </li>\r\n                          <li class=\"flex align-items-center mb-3\">\r\n                              <i class=\"pi pi-check-circle text-green-500 mr-2\"></i>\r\n                              <span>Duis ultricies lacus sed</span>\r\n                          </li>\r\n                      </ul>\r\n                      <hr class=\"mb-3 mx-0 border-top-1 border-none surface-border\" />\r\n                      <button pButton pRipple label=\"Buy Now\" class=\"p-3 w-full\"></button>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n\r\n          <div class=\"col-12 lg:col-4\">\r\n              <div class=\"p-3 h-full\">\r\n                  <div class=\"shadow-2 p-3 flex flex-column surface-card\" style=\"border-radius: 6px\">\r\n                      <div class=\"text-900 font-medium text-xl mb-2\">Enterprise</div>\r\n                      <div class=\"text-600\">Plan description</div>\r\n                      <hr class=\"my-3 mx-0 border-top-1 border-none surface-border\" />\r\n                      <div class=\"flex align-items-center\">\r\n                          <span class=\"font-bold text-2xl text-900\">$49</span>\r\n                          <span class=\"ml-2 font-medium text-600\">per month</span>\r\n                      </div>\r\n                      <hr class=\"my-3 mx-0 border-top-1 border-none surface-border\" />\r\n                      <ul class=\"list-none p-0 m-0 flex-grow-1\">\r\n                          <li class=\"flex align-items-center mb-3\">\r\n                              <i class=\"pi pi-check-circle text-green-500 mr-2\"></i>\r\n                              <span>Arcu vitae elementum</span>\r\n                          </li>\r\n                          <li class=\"flex align-items-center mb-3\">\r\n                              <i class=\"pi pi-check-circle text-green-500 mr-2\"></i>\r\n                              <span>Dui faucibus in ornare</span>\r\n                          </li>\r\n                          <li class=\"flex align-items-center mb-3\">\r\n                              <i class=\"pi pi-check-circle text-green-500 mr-2\"></i>\r\n                              <span>Morbi tincidunt augue</span>\r\n                          </li>\r\n                          <li class=\"flex align-items-center mb-3\">\r\n                              <i class=\"pi pi-check-circle text-green-500 mr-2\"></i>\r\n                              <span>Duis ultricies lacus sed</span>\r\n                          </li>\r\n                          <li class=\"flex align-items-center mb-3\">\r\n                              <i class=\"pi pi-check-circle text-green-500 mr-2\"></i>\r\n                              <span>Imperdiet proin</span>\r\n                          </li>\r\n                          <li class=\"flex align-items-center mb-3\">\r\n                              <i class=\"pi pi-check-circle text-green-500 mr-2\"></i>\r\n                              <span>Nisi scelerisque</span>\r\n                          </li>\r\n                      </ul>\r\n                      <hr class=\"mb-3 mx-0 border-top-1 border-none surface-border\" />\r\n                      <button pButton pRipple label=\"Buy Now\" class=\"p-3 w-full p-button-outlined\"></button>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n      </div>\r\n  </div>`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 78
                },
                {
                    "name": "block4",
                    "defaultValue": "`\r\n  <div class=\"surface-section px-4 py-8 md:px-6 lg:px-8\">\r\n      <div class=\"text-700 text-center\">\r\n          <div class=\"text-blue-600 font-bold mb-3\"><i class=\"pi pi-discord\"></i>&nbsp;POWERED BY DISCORD</div>\r\n          <div class=\"text-900 font-bold text-5xl mb-3\">Join Our Design Community</div>\r\n          <div class=\"text-700 text-2xl mb-5\">Lorem ipsum dolor sit, amet consectetur adipisicing elit. Velit numquam eligendi quos.</div>\r\n          <button pButton pRipple label=\"Join Now\" icon=\"pi pi-discord\" class=\"font-bold px-5 py-3 p-button-raised p-button-rounded white-space-nowrap\"></button>\r\n      </div>\r\n  </div>`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 195
                },
                {
                    "name": "block5",
                    "defaultValue": "`\r\n  <div class=\"bg-bluegray-900 text-gray-100 p-3 flex justify-content-between lg:justify-content-center align-items-center flex-wrap\">\r\n      <div class=\"font-bold mr-8\">🔥 Hot Deals!</div>\r\n      <div class=\"align-items-center hidden lg:flex\">\r\n          <span class=\"line-height-3\">Libero voluptatum atque exercitationem praesentium provident odit.</span>\r\n      </div>\r\n      <a class=\"flex align-items-center ml-2 mr-8\">\r\n          <a class=\"text-white\" href=\"#\"><span class=\"underline font-bold\">Learn More</span></a>\r\n      </a>\r\n      <a pRipple class=\"flex align-items-center no-underline justify-content-center border-circle text-gray-50 hover:bg-bluegray-700 cursor-pointer transition-colors transition-duration-150\" style=\"width:2rem; height: 2rem\">\r\n          <i class=\"pi pi-times\"></i>\r\n      </a>\r\n  </div>`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 205
                },
                {
                    "name": "block6",
                    "defaultValue": "`\r\n  <div class=\"surface-section px-4 py-5 md:px-6 lg:px-8\">\r\n      <ul class=\"list-none p-0 m-0 flex align-items-center font-medium mb-3\">\r\n          <li>\r\n              <a class=\"text-500 no-underline line-height-3 cursor-pointer\">Application</a>\r\n          </li>\r\n          <li class=\"px-2\">\r\n              <i class=\"pi pi-angle-right text-500 line-height-3\"></i>\r\n          </li>\r\n          <li>\r\n              <span class=\"text-900 line-height-3\">Analytics</span>\r\n          </li>\r\n      </ul>\r\n      <div class=\"flex align-items-start flex-column lg:justify-content-between lg:flex-row\">\r\n          <div>\r\n              <div class=\"font-medium text-3xl text-900\">Customers</div>\r\n              <div class=\"flex align-items-center text-700 flex-wrap\">\r\n                  <div class=\"mr-5 flex align-items-center mt-3\">\r\n                      <i class=\"pi pi-users mr-2\"></i>\r\n                      <span>332 Active Users</span>\r\n                  </div>\r\n                  <div class=\"mr-5 flex align-items-center mt-3\">\r\n                      <i class=\"pi pi-globe mr-2\"></i>\r\n                      <span>9402 Sessions</span>\r\n                  </div>\r\n                  <div class=\"flex align-items-center mt-3\">\r\n                      <i class=\"pi pi-clock mr-2\"></i>\r\n                      <span>2.32m Avg. Duration</span>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n          <div class=\"mt-3 lg:mt-0\">\r\n              <button pButton pRipple label=\"Add\" class=\"p-button-outlined mr-2\" icon=\"pi pi-user-plus\"></button>\r\n              <button pButton pRipple label=\"Save\" icon=\"pi pi-check\"></button>\r\n          </div>\r\n      </div>\r\n  </div>`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 219
                },
                {
                    "name": "block7",
                    "defaultValue": "`\r\n  <div class=\"surface-ground px-4 py-5 md:px-6 lg:px-8\">\r\n      <div class=\"grid\">\r\n          <div class=\"col-12 md:col-6 lg:col-3\">\r\n              <div class=\"surface-card shadow-2 p-3 border-round\">\r\n                  <div class=\"flex justify-content-between mb-3\">\r\n                      <div>\r\n                          <span class=\"block text-500 font-medium mb-3\">Orders</span>\r\n                          <div class=\"text-900 font-medium text-xl\">152</div>\r\n                      </div>\r\n                      <div class=\"flex align-items-center justify-content-center bg-blue-100 border-round\" style=\"width:2.5rem;height:2.5rem\">\r\n                          <i class=\"pi pi-shopping-cart text-blue-500 text-xl\"></i>\r\n                      </div>\r\n                  </div>\r\n                  <span class=\"text-green-500 font-medium\">24 new </span>\r\n                  <span class=\"text-500\">since last visit</span>\r\n              </div>\r\n          </div>\r\n          <div class=\"col-12 md:col-6 lg:col-3\">\r\n              <div class=\"surface-card shadow-2 p-3 border-round\">\r\n                  <div class=\"flex justify-content-between mb-3\">\r\n                      <div>\r\n                          <span class=\"block text-500 font-medium mb-3\">Revenue</span>\r\n                          <div class=\"text-900 font-medium text-xl\">$2.100</div>\r\n                      </div>\r\n                      <div class=\"flex align-items-center justify-content-center bg-orange-100 border-round\" style=\"width:2.5rem;height:2.5rem\">\r\n                          <i class=\"pi pi-map-marker text-orange-500 text-xl\"></i>\r\n                      </div>\r\n                  </div>\r\n                  <span class=\"text-green-500 font-medium\">%52+ </span>\r\n                  <span class=\"text-500\">since last week</span>\r\n              </div>\r\n          </div>\r\n          <div class=\"col-12 md:col-6 lg:col-3\">\r\n              <div class=\"surface-card shadow-2 p-3 border-round\">\r\n                  <div class=\"flex justify-content-between mb-3\">\r\n                      <div>\r\n                          <span class=\"block text-500 font-medium mb-3\">Customers</span>\r\n                          <div class=\"text-900 font-medium text-xl\">28441</div>\r\n                      </div>\r\n                      <div class=\"flex align-items-center justify-content-center bg-cyan-100 border-round\" style=\"width:2.5rem;height:2.5rem\">\r\n                          <i class=\"pi pi-inbox text-cyan-500 text-xl\"></i>\r\n                      </div>\r\n                  </div>\r\n                  <span class=\"text-green-500 font-medium\">520  </span>\r\n                  <span class=\"text-500\">newly registered</span>\r\n              </div>\r\n          </div>\r\n          <div class=\"col-12 md:col-6 lg:col-3\">\r\n              <div class=\"surface-card shadow-2 p-3 border-round\">\r\n                  <div class=\"flex justify-content-between mb-3\">\r\n                      <div>\r\n                          <span class=\"block text-500 font-medium mb-3\">Comments</span>\r\n                          <div class=\"text-900 font-medium text-xl\">152 Unread</div>\r\n                      </div>\r\n                      <div class=\"flex align-items-center justify-content-center bg-purple-100 border-round\" style=\"width:2.5rem;height:2.5rem\">\r\n                          <i class=\"pi pi-comment text-purple-500 text-xl\"></i>\r\n                      </div>\r\n                  </div>\r\n                  <span class=\"text-green-500 font-medium\">85 </span>\r\n                  <span class=\"text-500\">responded</span>\r\n              </div>\r\n          </div>\r\n      </div>\r\n  </div>`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 257
                },
                {
                    "name": "block8",
                    "defaultValue": "`\r\n  <div class=\"surface-card p-4 shadow-2 border-round w-full lg:w-6\">\r\n      <div class=\"text-center mb-5\">\r\n          <img src=\"assets/demo/images/blocks/logos/hyper.svg\" alt=\"Image\" height=\"50\" class=\"mb-3\">\r\n          <div class=\"text-900 text-3xl font-medium mb-3\">Welcome Back</div>\r\n          <span class=\"text-600 font-medium line-height-3\">Don't have an account?</span>\r\n          <a class=\"font-medium no-underline ml-2 text-blue-500 cursor-pointer\">Create today!</a>\r\n      </div>\r\n\r\n      <div>\r\n          <label for=\"email1\" class=\"block text-900 font-medium mb-2\">Email</label>\r\n          <input id=\"email1\" type=\"text\" pInputText class=\"w-full mb-3\">\r\n\r\n          <label for=\"password1\" class=\"block text-900 font-medium mb-2\">Password</label>\r\n          <input id=\"password1\" type=\"password\" pInputText class=\"w-full mb-3\">\r\n\r\n          <div class=\"flex align-items-center justify-content-between mb-6\">\r\n              <div class=\"flex align-items-center\">\r\n                  <p-checkbox id=\"rememberme1\" [binary]=\"true\" styleClass=\"mr-2\"></p-checkbox>\r\n                  <label for=\"rememberme1\">Remember me</label>\r\n              </div>\r\n              <a class=\"font-medium no-underline ml-2 text-blue-500 text-right cursor-pointer\">Forgot password?</a>\r\n          </div>\r\n\r\n          <button pButton pRipple label=\"Sign In\" icon=\"pi pi-user\" class=\"w-full\"></button>\r\n      </div>\r\n  </div>`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 323
                },
                {
                    "name": "block9",
                    "defaultValue": "`\r\n  <div class=\"surface-section\">\r\n      <div class=\"font-medium text-3xl text-900 mb-3\">Movie Information</div>\r\n      <div class=\"text-500 mb-5\">Morbi tristique blandit turpis. In viverra ligula id nulla hendrerit rutrum.</div>\r\n      <ul class=\"list-none p-0 m-0\">\r\n          <li class=\"flex align-items-center py-3 px-2 border-top-1 surface-border flex-wrap\">\r\n              <div class=\"text-500 w-6 md:w-2 font-medium\">Title</div>\r\n              <div class=\"text-900 w-full md:w-8 md:flex-order-0 flex-order-1\">Heat</div>\r\n              <div class=\"w-6 md:w-2 flex justify-content-end\">\r\n                  <button pButton pRipple label=\"Edit\" icon=\"pi pi-pencil\" class=\"p-button-text\"></button>\r\n              </div>\r\n          </li>\r\n          <li class=\"flex align-items-center py-3 px-2 border-top-1 surface-border flex-wrap\">\r\n              <div class=\"text-500 w-6 md:w-2 font-medium\">Genre</div>\r\n              <div class=\"text-900 w-full md:w-8 md:flex-order-0 flex-order-1\">\r\n                  <p-chip label=\"Crime\" class=\"mr-2\"></p-chip>\r\n                  <p-chip label=\"Drama\" class=\"mr-2\"></p-chip>\r\n                  <p-chip label=\"Thriller\"></p-chip>\r\n              </div>\r\n              <div class=\"w-6 md:w-2 flex justify-content-end\">\r\n                  <button pButton pRipple label=\"Edit\" icon=\"pi pi-pencil\" class=\"p-button-text\"></button>\r\n              </div>\r\n          </li>\r\n          <li class=\"flex align-items-center py-3 px-2 border-top-1 surface-border flex-wrap\">\r\n              <div class=\"text-500 w-6 md:w-2 font-medium\">Director</div>\r\n              <div class=\"text-900 w-full md:w-8 md:flex-order-0 flex-order-1\">Michael Mann</div>\r\n              <div class=\"w-6 md:w-2 flex justify-content-end\">\r\n                  <button pButton pRipple label=\"Edit\" icon=\"pi pi-pencil\" class=\"p-button-text\"></button>\r\n              </div>\r\n          </li>\r\n          <li class=\"flex align-items-center py-3 px-2 border-top-1 surface-border flex-wrap\">\r\n              <div class=\"text-500 w-6 md:w-2 font-medium\">Actors</div>\r\n              <div class=\"text-900 w-full md:w-8 md:flex-order-0 flex-order-1\">Robert De Niro, Al Pacino</div>\r\n              <div class=\"w-6 md:w-2 flex justify-content-end\">\r\n                  <button pButton pRipple label=\"Edit\" icon=\"pi pi-pencil\" class=\"p-button-text\"></button>\r\n              </div>\r\n          </li>\r\n          <li class=\"flex align-items-center py-3 px-2 border-top-1 border-bottom-1 surface-border flex-wrap\">\r\n              <div class=\"text-500 w-6 md:w-2 font-medium\">Plot</div>\r\n              <div class=\"text-900 w-full md:w-8 md:flex-order-0 flex-order-1 line-height-3\">\r\n                  A group of professional bank robbers start to feel the heat from police\r\n                   when they unknowingly leave a clue at their latest heist.</div>\r\n              <div class=\"w-6 md:w-2 flex justify-content-end\">\r\n                  <button pButton pRipple label=\"Edit\" icon=\"pi pi-pencil\" class=\"p-button-text\"></button>\r\n              </div>\r\n          </li>\r\n      </ul>\r\n  </div>`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 351
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  templateUrl: './blocks.component.html'\r\n})\r\nexport class BlocksComponent{\r\n\r\n  block1: string = `\r\n  <div class=\"grid grid-nogutter surface-section text-800\">\r\n      <div class=\"col-12 md:col-6 p-6 text-center md:text-left flex align-items-center \">\r\n          <section>\r\n              <span class=\"block text-6xl font-bold mb-1\">Create the screens your</span>\r\n              <div class=\"text-6xl text-primary font-bold mb-3\">your visitors deserve to see</div>\r\n              <p class=\"mt-0 mb-4 text-700 line-height-3\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\r\n\r\n              <button pButton pRipple label=\"Learn More\" type=\"button\" class=\"mr-3 p-button-raised\"></button>\r\n              <button pButton pRipple label=\"Live Demo\" type=\"button\" class=\"p-button-outlined\"></button>\r\n          </section>\r\n      </div>\r\n      <div class=\"col-12 md:col-6 overflow-hidden\">\r\n          <img src=\"assets/demo/images/blocks/hero/hero-1.png\" alt=\"Image\" class=\"md:ml-auto block md:h-full\" style=\"clip-path: polygon(8% 0, 100% 0%, 100% 100%, 0 100%)\">\r\n      </div>\r\n  </div>`;\r\n\r\n      block2: string = `\r\n  <div class=\"surface-section px-4 py-8 md:px-6 lg:px-8 text-center\">\r\n      <div class=\"mb-3 font-bold text-2xl\">\r\n          <span class=\"text-900\">One Product, </span>\r\n          <span class=\"text-blue-600\">Many Solutions</span>\r\n      </div>\r\n      <div class=\"text-700 text-sm mb-6\">Ac turpis egestas maecenas pharetra convallis posuere morbi leo urna.</div>\r\n      <div class=\"grid\">\r\n          <div class=\"col-12 md:col-4 mb-4 px-5\">\r\n              <span class=\"p-3 shadow-2 mb-3 inline-block surface-card\" style=\"border-radius: 10px\">\r\n                  <i class=\"pi pi-desktop text-4xl text-blue-500\"></i>\r\n              </span>\r\n              <div class=\"text-900 mb-3 font-medium\">Built for Developers</div>\r\n              <span class=\"text-700 text-sm line-height-3\">Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.</span>\r\n          </div>\r\n          <div class=\"col-12 md:col-4 mb-4 px-5\">\r\n              <span class=\"p-3 shadow-2 mb-3 inline-block surface-card\" style=\"border-radius: 10px\">\r\n                  <i class=\"pi pi-lock text-4xl text-blue-500\"></i>\r\n              </span>\r\n              <div class=\"text-900 mb-3 font-medium\">End-to-End Encryption</div>\r\n              <span class=\"text-700 text-sm line-height-3\">Risus nec feugiat in fermentum posuere urna nec. Posuere sollicitudin aliquam ultrices sagittis.</span>\r\n          </div>\r\n          <div class=\"col-12 md:col-4 mb-4 px-5\">\r\n              <span class=\"p-3 shadow-2 mb-3 inline-block surface-card\" style=\"border-radius: 10px\">\r\n                  <i class=\"pi pi-check-circle text-4xl text-blue-500\"></i>\r\n              </span>\r\n              <div class=\"text-900 mb-3 font-medium\">Easy to Use</div>\r\n              <span class=\"text-700 text-sm line-height-3\">Ornare suspendisse sed nisi lacus sed viverra tellus. Neque volutpat ac tincidunt vitae semper.</span>\r\n          </div>\r\n          <div class=\"col-12 md:col-4 mb-4 px-5\">\r\n              <span class=\"p-3 shadow-2 mb-3 inline-block surface-card\" style=\"border-radius: 10px\">\r\n                  <i class=\"pi pi-globe text-4xl text-blue-500\"></i>\r\n              </span>\r\n              <div class=\"text-900 mb-3 font-medium\">Fast & Global Support</div>\r\n              <span class=\"text-700 text-sm line-height-3\">Fermentum et sollicitudin ac orci phasellus egestas tellus rutrum tellus.</span>\r\n          </div>\r\n          <div class=\"col-12 md:col-4 mb-4 px-5\">\r\n              <span class=\"p-3 shadow-2 mb-3 inline-block surface-card\" style=\"border-radius: 10px\">\r\n                  <i class=\"pi pi-github text-4xl text-blue-500\"></i>\r\n              </span>\r\n              <div class=\"text-900 mb-3 font-medium\">Open Source</div>\r\n              <span class=\"text-700 text-sm line-height-3\">Nec tincidunt praesent semper feugiat. Sed adipiscing diam donec adipiscing tristique risus nec feugiat. </span>\r\n          </div>\r\n          <div class=\"col-12 md:col-4 md:mb-4 mb-0 px-3\">\r\n              <span class=\"p-3 shadow-2 mb-3 inline-block surface-card\" style=\"border-radius: 10px\">\r\n                  <i class=\"pi pi-shield text-4xl text-blue-500\"></i>\r\n              </span>\r\n              <div class=\"text-900 mb-3 font-medium\">Trusted Securitty</div>\r\n              <span class=\"text-700 text-sm line-height-3\">Mattis rhoncus urna neque viverra justo nec ultrices. Id cursus metus aliquam eleifend.</span>\r\n          </div>\r\n      </div>\r\n  </div>`;\r\n\r\n      block3: string = `\r\n  <div class=\"surface-ground px-4 py-8 md:px-6 lg:px-8\">\r\n      <div class=\"text-900 font-bold text-6xl mb-4 text-center\">Pricing Plans</div>\r\n      <div class=\"text-700 text-xl mb-6 text-center line-height-3\">Lorem ipsum dolor sit, amet consectetur adipisicing elit. Velit numquam eligendi quos.</div>\r\n\r\n      <div class=\"grid\">\r\n          <div class=\"col-12 lg:col-4\">\r\n              <div class=\"p-3 h-full\">\r\n                  <div class=\"shadow-2 p-3 h-full flex flex-column surface-card\" style=\"border-radius: 6px\">\r\n                      <div class=\"text-900 font-medium text-xl mb-2\">Basic</div>\r\n                      <div class=\"text-600\">Plan description</div>\r\n                      <hr class=\"my-3 mx-0 border-top-1 border-none surface-border\" />\r\n                      <div class=\"flex align-items-center\">\r\n                          <span class=\"font-bold text-2xl text-900\">$9</span>\r\n                          <span class=\"ml-2 font-medium text-600\">per month</span>\r\n                      </div>\r\n                      <hr class=\"my-3 mx-0 border-top-1 border-none surface-border\" />\r\n                      <ul class=\"list-none p-0 m-0 flex-grow-1\">\r\n                          <li class=\"flex align-items-center mb-3\">\r\n                              <i class=\"pi pi-check-circle text-green-500 mr-2\"></i>\r\n                              <span>Arcu vitae elementum</span>\r\n                          </li>\r\n                          <li class=\"flex align-items-center mb-3\">\r\n                              <i class=\"pi pi-check-circle text-green-500 mr-2\"></i>\r\n                              <span>Dui faucibus in ornare</span>\r\n                          </li>\r\n                          <li class=\"flex align-items-center mb-3\">\r\n                              <i class=\"pi pi-check-circle text-green-500 mr-2\"></i>\r\n                              <span>Morbi tincidunt augue</span>\r\n                          </li>\r\n                      </ul>\r\n                      <hr class=\"mb-3 mx-0 border-top-1 border-none surface-border mt-auto\" />\r\n                      <button pButton pRipple label=\"Buy Now\" class=\"p-3 w-full mt-auto\"></button>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n\r\n          <div class=\"col-12 lg:col-4\">\r\n              <div class=\"p-3 h-full\">\r\n                  <div class=\"shadow-2 p-3 h-full flex flex-column surface-card\" style=\"border-radius: 6px\">\r\n                      <div class=\"text-900 font-medium text-xl mb-2\">Premium</div>\r\n                      <div class=\"text-600\">Plan description</div>\r\n                      <hr class=\"my-3 mx-0 border-top-1 border-none surface-border\" />\r\n                      <div class=\"flex align-items-center\">\r\n                          <span class=\"font-bold text-2xl text-900\">$29</span>\r\n                          <span class=\"ml-2 font-medium text-600\">per month</span>\r\n                      </div>\r\n                      <hr class=\"my-3 mx-0 border-top-1 border-none surface-border\" />\r\n                      <ul class=\"list-none p-0 m-0 flex-grow-1\">\r\n                          <li class=\"flex align-items-center mb-3\">\r\n                              <i class=\"pi pi-check-circle text-green-500 mr-2\"></i>\r\n                              <span>Arcu vitae elementum</span>\r\n                          </li>\r\n                          <li class=\"flex align-items-center mb-3\">\r\n                              <i class=\"pi pi-check-circle text-green-500 mr-2\"></i>\r\n                              <span>Dui faucibus in ornare</span>\r\n                          </li>\r\n                          <li class=\"flex align-items-center mb-3\">\r\n                              <i class=\"pi pi-check-circle text-green-500 mr-2\"></i>\r\n                              <span>Morbi tincidunt augue</span>\r\n                          </li>\r\n                          <li class=\"flex align-items-center mb-3\">\r\n                              <i class=\"pi pi-check-circle text-green-500 mr-2\"></i>\r\n                              <span>Duis ultricies lacus sed</span>\r\n                          </li>\r\n                      </ul>\r\n                      <hr class=\"mb-3 mx-0 border-top-1 border-none surface-border\" />\r\n                      <button pButton pRipple label=\"Buy Now\" class=\"p-3 w-full\"></button>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n\r\n          <div class=\"col-12 lg:col-4\">\r\n              <div class=\"p-3 h-full\">\r\n                  <div class=\"shadow-2 p-3 flex flex-column surface-card\" style=\"border-radius: 6px\">\r\n                      <div class=\"text-900 font-medium text-xl mb-2\">Enterprise</div>\r\n                      <div class=\"text-600\">Plan description</div>\r\n                      <hr class=\"my-3 mx-0 border-top-1 border-none surface-border\" />\r\n                      <div class=\"flex align-items-center\">\r\n                          <span class=\"font-bold text-2xl text-900\">$49</span>\r\n                          <span class=\"ml-2 font-medium text-600\">per month</span>\r\n                      </div>\r\n                      <hr class=\"my-3 mx-0 border-top-1 border-none surface-border\" />\r\n                      <ul class=\"list-none p-0 m-0 flex-grow-1\">\r\n                          <li class=\"flex align-items-center mb-3\">\r\n                              <i class=\"pi pi-check-circle text-green-500 mr-2\"></i>\r\n                              <span>Arcu vitae elementum</span>\r\n                          </li>\r\n                          <li class=\"flex align-items-center mb-3\">\r\n                              <i class=\"pi pi-check-circle text-green-500 mr-2\"></i>\r\n                              <span>Dui faucibus in ornare</span>\r\n                          </li>\r\n                          <li class=\"flex align-items-center mb-3\">\r\n                              <i class=\"pi pi-check-circle text-green-500 mr-2\"></i>\r\n                              <span>Morbi tincidunt augue</span>\r\n                          </li>\r\n                          <li class=\"flex align-items-center mb-3\">\r\n                              <i class=\"pi pi-check-circle text-green-500 mr-2\"></i>\r\n                              <span>Duis ultricies lacus sed</span>\r\n                          </li>\r\n                          <li class=\"flex align-items-center mb-3\">\r\n                              <i class=\"pi pi-check-circle text-green-500 mr-2\"></i>\r\n                              <span>Imperdiet proin</span>\r\n                          </li>\r\n                          <li class=\"flex align-items-center mb-3\">\r\n                              <i class=\"pi pi-check-circle text-green-500 mr-2\"></i>\r\n                              <span>Nisi scelerisque</span>\r\n                          </li>\r\n                      </ul>\r\n                      <hr class=\"mb-3 mx-0 border-top-1 border-none surface-border\" />\r\n                      <button pButton pRipple label=\"Buy Now\" class=\"p-3 w-full p-button-outlined\"></button>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n      </div>\r\n  </div>`;\r\n\r\n      block4: string = `\r\n  <div class=\"surface-section px-4 py-8 md:px-6 lg:px-8\">\r\n      <div class=\"text-700 text-center\">\r\n          <div class=\"text-blue-600 font-bold mb-3\"><i class=\"pi pi-discord\"></i>&nbsp;POWERED BY DISCORD</div>\r\n          <div class=\"text-900 font-bold text-5xl mb-3\">Join Our Design Community</div>\r\n          <div class=\"text-700 text-2xl mb-5\">Lorem ipsum dolor sit, amet consectetur adipisicing elit. Velit numquam eligendi quos.</div>\r\n          <button pButton pRipple label=\"Join Now\" icon=\"pi pi-discord\" class=\"font-bold px-5 py-3 p-button-raised p-button-rounded white-space-nowrap\"></button>\r\n      </div>\r\n  </div>`;\r\n\r\n      block5: string = `\r\n  <div class=\"bg-bluegray-900 text-gray-100 p-3 flex justify-content-between lg:justify-content-center align-items-center flex-wrap\">\r\n      <div class=\"font-bold mr-8\">🔥 Hot Deals!</div>\r\n      <div class=\"align-items-center hidden lg:flex\">\r\n          <span class=\"line-height-3\">Libero voluptatum atque exercitationem praesentium provident odit.</span>\r\n      </div>\r\n      <a class=\"flex align-items-center ml-2 mr-8\">\r\n          <a class=\"text-white\" href=\"#\"><span class=\"underline font-bold\">Learn More</span></a>\r\n      </a>\r\n      <a pRipple class=\"flex align-items-center no-underline justify-content-center border-circle text-gray-50 hover:bg-bluegray-700 cursor-pointer transition-colors transition-duration-150\" style=\"width:2rem; height: 2rem\">\r\n          <i class=\"pi pi-times\"></i>\r\n      </a>\r\n  </div>`;\r\n\r\n      block6: string = `\r\n  <div class=\"surface-section px-4 py-5 md:px-6 lg:px-8\">\r\n      <ul class=\"list-none p-0 m-0 flex align-items-center font-medium mb-3\">\r\n          <li>\r\n              <a class=\"text-500 no-underline line-height-3 cursor-pointer\">Application</a>\r\n          </li>\r\n          <li class=\"px-2\">\r\n              <i class=\"pi pi-angle-right text-500 line-height-3\"></i>\r\n          </li>\r\n          <li>\r\n              <span class=\"text-900 line-height-3\">Analytics</span>\r\n          </li>\r\n      </ul>\r\n      <div class=\"flex align-items-start flex-column lg:justify-content-between lg:flex-row\">\r\n          <div>\r\n              <div class=\"font-medium text-3xl text-900\">Customers</div>\r\n              <div class=\"flex align-items-center text-700 flex-wrap\">\r\n                  <div class=\"mr-5 flex align-items-center mt-3\">\r\n                      <i class=\"pi pi-users mr-2\"></i>\r\n                      <span>332 Active Users</span>\r\n                  </div>\r\n                  <div class=\"mr-5 flex align-items-center mt-3\">\r\n                      <i class=\"pi pi-globe mr-2\"></i>\r\n                      <span>9402 Sessions</span>\r\n                  </div>\r\n                  <div class=\"flex align-items-center mt-3\">\r\n                      <i class=\"pi pi-clock mr-2\"></i>\r\n                      <span>2.32m Avg. Duration</span>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n          <div class=\"mt-3 lg:mt-0\">\r\n              <button pButton pRipple label=\"Add\" class=\"p-button-outlined mr-2\" icon=\"pi pi-user-plus\"></button>\r\n              <button pButton pRipple label=\"Save\" icon=\"pi pi-check\"></button>\r\n          </div>\r\n      </div>\r\n  </div>`;\r\n\r\n      block7: string = `\r\n  <div class=\"surface-ground px-4 py-5 md:px-6 lg:px-8\">\r\n      <div class=\"grid\">\r\n          <div class=\"col-12 md:col-6 lg:col-3\">\r\n              <div class=\"surface-card shadow-2 p-3 border-round\">\r\n                  <div class=\"flex justify-content-between mb-3\">\r\n                      <div>\r\n                          <span class=\"block text-500 font-medium mb-3\">Orders</span>\r\n                          <div class=\"text-900 font-medium text-xl\">152</div>\r\n                      </div>\r\n                      <div class=\"flex align-items-center justify-content-center bg-blue-100 border-round\" style=\"width:2.5rem;height:2.5rem\">\r\n                          <i class=\"pi pi-shopping-cart text-blue-500 text-xl\"></i>\r\n                      </div>\r\n                  </div>\r\n                  <span class=\"text-green-500 font-medium\">24 new </span>\r\n                  <span class=\"text-500\">since last visit</span>\r\n              </div>\r\n          </div>\r\n          <div class=\"col-12 md:col-6 lg:col-3\">\r\n              <div class=\"surface-card shadow-2 p-3 border-round\">\r\n                  <div class=\"flex justify-content-between mb-3\">\r\n                      <div>\r\n                          <span class=\"block text-500 font-medium mb-3\">Revenue</span>\r\n                          <div class=\"text-900 font-medium text-xl\">$2.100</div>\r\n                      </div>\r\n                      <div class=\"flex align-items-center justify-content-center bg-orange-100 border-round\" style=\"width:2.5rem;height:2.5rem\">\r\n                          <i class=\"pi pi-map-marker text-orange-500 text-xl\"></i>\r\n                      </div>\r\n                  </div>\r\n                  <span class=\"text-green-500 font-medium\">%52+ </span>\r\n                  <span class=\"text-500\">since last week</span>\r\n              </div>\r\n          </div>\r\n          <div class=\"col-12 md:col-6 lg:col-3\">\r\n              <div class=\"surface-card shadow-2 p-3 border-round\">\r\n                  <div class=\"flex justify-content-between mb-3\">\r\n                      <div>\r\n                          <span class=\"block text-500 font-medium mb-3\">Customers</span>\r\n                          <div class=\"text-900 font-medium text-xl\">28441</div>\r\n                      </div>\r\n                      <div class=\"flex align-items-center justify-content-center bg-cyan-100 border-round\" style=\"width:2.5rem;height:2.5rem\">\r\n                          <i class=\"pi pi-inbox text-cyan-500 text-xl\"></i>\r\n                      </div>\r\n                  </div>\r\n                  <span class=\"text-green-500 font-medium\">520  </span>\r\n                  <span class=\"text-500\">newly registered</span>\r\n              </div>\r\n          </div>\r\n          <div class=\"col-12 md:col-6 lg:col-3\">\r\n              <div class=\"surface-card shadow-2 p-3 border-round\">\r\n                  <div class=\"flex justify-content-between mb-3\">\r\n                      <div>\r\n                          <span class=\"block text-500 font-medium mb-3\">Comments</span>\r\n                          <div class=\"text-900 font-medium text-xl\">152 Unread</div>\r\n                      </div>\r\n                      <div class=\"flex align-items-center justify-content-center bg-purple-100 border-round\" style=\"width:2.5rem;height:2.5rem\">\r\n                          <i class=\"pi pi-comment text-purple-500 text-xl\"></i>\r\n                      </div>\r\n                  </div>\r\n                  <span class=\"text-green-500 font-medium\">85 </span>\r\n                  <span class=\"text-500\">responded</span>\r\n              </div>\r\n          </div>\r\n      </div>\r\n  </div>`;\r\n\r\n      block8: string = `\r\n  <div class=\"surface-card p-4 shadow-2 border-round w-full lg:w-6\">\r\n      <div class=\"text-center mb-5\">\r\n          <img src=\"assets/demo/images/blocks/logos/hyper.svg\" alt=\"Image\" height=\"50\" class=\"mb-3\">\r\n          <div class=\"text-900 text-3xl font-medium mb-3\">Welcome Back</div>\r\n          <span class=\"text-600 font-medium line-height-3\">Don't have an account?</span>\r\n          <a class=\"font-medium no-underline ml-2 text-blue-500 cursor-pointer\">Create today!</a>\r\n      </div>\r\n\r\n      <div>\r\n          <label for=\"email1\" class=\"block text-900 font-medium mb-2\">Email</label>\r\n          <input id=\"email1\" type=\"text\" pInputText class=\"w-full mb-3\">\r\n\r\n          <label for=\"password1\" class=\"block text-900 font-medium mb-2\">Password</label>\r\n          <input id=\"password1\" type=\"password\" pInputText class=\"w-full mb-3\">\r\n\r\n          <div class=\"flex align-items-center justify-content-between mb-6\">\r\n              <div class=\"flex align-items-center\">\r\n                  <p-checkbox id=\"rememberme1\" [binary]=\"true\" styleClass=\"mr-2\"></p-checkbox>\r\n                  <label for=\"rememberme1\">Remember me</label>\r\n              </div>\r\n              <a class=\"font-medium no-underline ml-2 text-blue-500 text-right cursor-pointer\">Forgot password?</a>\r\n          </div>\r\n\r\n          <button pButton pRipple label=\"Sign In\" icon=\"pi pi-user\" class=\"w-full\"></button>\r\n      </div>\r\n  </div>`;\r\n\r\n      block9: string = `\r\n  <div class=\"surface-section\">\r\n      <div class=\"font-medium text-3xl text-900 mb-3\">Movie Information</div>\r\n      <div class=\"text-500 mb-5\">Morbi tristique blandit turpis. In viverra ligula id nulla hendrerit rutrum.</div>\r\n      <ul class=\"list-none p-0 m-0\">\r\n          <li class=\"flex align-items-center py-3 px-2 border-top-1 surface-border flex-wrap\">\r\n              <div class=\"text-500 w-6 md:w-2 font-medium\">Title</div>\r\n              <div class=\"text-900 w-full md:w-8 md:flex-order-0 flex-order-1\">Heat</div>\r\n              <div class=\"w-6 md:w-2 flex justify-content-end\">\r\n                  <button pButton pRipple label=\"Edit\" icon=\"pi pi-pencil\" class=\"p-button-text\"></button>\r\n              </div>\r\n          </li>\r\n          <li class=\"flex align-items-center py-3 px-2 border-top-1 surface-border flex-wrap\">\r\n              <div class=\"text-500 w-6 md:w-2 font-medium\">Genre</div>\r\n              <div class=\"text-900 w-full md:w-8 md:flex-order-0 flex-order-1\">\r\n                  <p-chip label=\"Crime\" class=\"mr-2\"></p-chip>\r\n                  <p-chip label=\"Drama\" class=\"mr-2\"></p-chip>\r\n                  <p-chip label=\"Thriller\"></p-chip>\r\n              </div>\r\n              <div class=\"w-6 md:w-2 flex justify-content-end\">\r\n                  <button pButton pRipple label=\"Edit\" icon=\"pi pi-pencil\" class=\"p-button-text\"></button>\r\n              </div>\r\n          </li>\r\n          <li class=\"flex align-items-center py-3 px-2 border-top-1 surface-border flex-wrap\">\r\n              <div class=\"text-500 w-6 md:w-2 font-medium\">Director</div>\r\n              <div class=\"text-900 w-full md:w-8 md:flex-order-0 flex-order-1\">Michael Mann</div>\r\n              <div class=\"w-6 md:w-2 flex justify-content-end\">\r\n                  <button pButton pRipple label=\"Edit\" icon=\"pi pi-pencil\" class=\"p-button-text\"></button>\r\n              </div>\r\n          </li>\r\n          <li class=\"flex align-items-center py-3 px-2 border-top-1 surface-border flex-wrap\">\r\n              <div class=\"text-500 w-6 md:w-2 font-medium\">Actors</div>\r\n              <div class=\"text-900 w-full md:w-8 md:flex-order-0 flex-order-1\">Robert De Niro, Al Pacino</div>\r\n              <div class=\"w-6 md:w-2 flex justify-content-end\">\r\n                  <button pButton pRipple label=\"Edit\" icon=\"pi pi-pencil\" class=\"p-button-text\"></button>\r\n              </div>\r\n          </li>\r\n          <li class=\"flex align-items-center py-3 px-2 border-top-1 border-bottom-1 surface-border flex-wrap\">\r\n              <div class=\"text-500 w-6 md:w-2 font-medium\">Plot</div>\r\n              <div class=\"text-900 w-full md:w-8 md:flex-order-0 flex-order-1 line-height-3\">\r\n                  A group of professional bank robbers start to feel the heat from police\r\n                   when they unknowingly leave a clue at their latest heist.</div>\r\n              <div class=\"w-6 md:w-2 flex justify-content-end\">\r\n                  <button pButton pRipple label=\"Edit\" icon=\"pi pi-pencil\" class=\"p-button-text\"></button>\r\n              </div>\r\n          </li>\r\n      </ul>\r\n  </div>`;\r\n\r\n      block10: string = `\r\n  <div class=\"surface-card p-4 shadow-2 border-round\">\r\n      <div class=\"text-3xl font-medium text-900 mb-3\">Card Title</div>\r\n      <div class=\"font-medium text-500 mb-3\">Vivamus id nisl interdum, blandit augue sit amet, eleifend mi.</div>\r\n      <div style=\"height: 150px\" class=\"border-2 border-dashed surface-border\"></div>\r\n  </div>`;\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<block-viewer header=\"Hero\" [code]=\"block1\">\r\n    <div class=\"grid grid-nogutter surface-section text-800\">\r\n        <div class=\"col-12 md:col-6 p-6 text-center md:text-left flex align-items-center \">\r\n            <section>\r\n                <span class=\"block text-6xl font-bold mb-1\">Create the screens your</span>\r\n                <div class=\"text-6xl text-primary font-bold mb-3\">your visitors deserve to see</div>\r\n                <p class=\"mt-0 mb-4 text-700 line-height-3\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\r\n                \r\n                <button pButton pRipple label=\"Learn More\" type=\"button\" class=\"mr-3 p-button-raised\"></button>\r\n                <button pButton pRipple label=\"Live Demo\" type=\"button\" class=\"p-button-outlined\"></button>\r\n            </section>\r\n        </div>\r\n        <div class=\"col-12 md:col-6 overflow-hidden\">\r\n            <img src=\"assets/demo/images/blocks/hero/hero-1.png\" alt=\"Image\" class=\"md:ml-auto block md:h-full\" style=\"clip-path: polygon(8% 0, 100% 0%, 100% 100%, 0 100%)\">\r\n        </div>\r\n    </div>\r\n</block-viewer>\r\n\r\n<block-viewer header=\"Feature\" [code]=\"block2\">\r\n    <div class=\"surface-section px-4 py-8 md:px-6 lg:px-8 text-center\">\r\n        <div class=\"mb-3 font-bold text-2xl\">\r\n            <span class=\"text-900\">One Product, </span>\r\n            <span class=\"text-blue-600\">Many Solutions</span>\r\n        </div>\r\n        <div class=\"text-700 cus-text-sm mb-6\">Ac turpis egestas maecenas pharetra convallis posuere morbi leo urna.</div>\r\n        <div class=\"grid\">\r\n            <div class=\"col-12 md:col-4 mb-4 px-5\">\r\n                <span class=\"p-3 shadow-2 mb-3 inline-block surface-card\" style=\"border-radius: 10px\">\r\n                    <i class=\"pi pi-desktop text-4xl text-blue-500\"></i>\r\n                </span>\r\n                <div class=\"text-900 mb-3 font-medium\">Built for Developers</div>\r\n                <span class=\"text-700 cus-text-sm line-height-3\">Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.</span>\r\n            </div>\r\n            <div class=\"col-12 md:col-4 mb-4 px-5\">\r\n                <span class=\"p-3 shadow-2 mb-3 inline-block surface-card\" style=\"border-radius: 10px\">\r\n                    <i class=\"pi pi-lock text-4xl text-blue-500\"></i>\r\n                </span>\r\n                <div class=\"text-900 mb-3 font-medium\">End-to-End Encryption</div>\r\n                <span class=\"text-700 cus-text-sm line-height-3\">Risus nec feugiat in fermentum posuere urna nec. Posuere sollicitudin aliquam ultrices sagittis.</span>\r\n            </div>\r\n            <div class=\"col-12 md:col-4 mb-4 px-5\">\r\n                <span class=\"p-3 shadow-2 mb-3 inline-block surface-card\" style=\"border-radius: 10px\">\r\n                    <i class=\"pi pi-check-circle text-4xl text-blue-500\"></i>\r\n                </span>\r\n                <div class=\"text-900 mb-3 font-medium\">Easy to Use</div>\r\n                <span class=\"text-700 cus-text-sm line-height-3\">Ornare suspendisse sed nisi lacus sed viverra tellus. Neque volutpat ac tincidunt vitae semper.</span>\r\n            </div>\r\n            <div class=\"col-12 md:col-4 mb-4 px-5\">\r\n                <span class=\"p-3 shadow-2 mb-3 inline-block surface-card\" style=\"border-radius: 10px\">\r\n                    <i class=\"pi pi-globe text-4xl text-blue-500\"></i>\r\n                </span>\r\n                <div class=\"text-900 mb-3 font-medium\">Fast & Global Support</div>\r\n                <span class=\"text-700 cus-text-sm line-height-3\">Fermentum et sollicitudin ac orci phasellus egestas tellus rutrum tellus.</span>\r\n            </div>\r\n            <div class=\"col-12 md:col-4 mb-4 px-5\">\r\n                <span class=\"p-3 shadow-2 mb-3 inline-block surface-card\" style=\"border-radius: 10px\">\r\n                    <i class=\"pi pi-github text-4xl text-blue-500\"></i>\r\n                </span>\r\n                <div class=\"text-900 mb-3 font-medium\">Open Source</div>\r\n                <span class=\"text-700 cus-text-sm line-height-3\">Nec tincidunt praesent semper feugiat. Sed adipiscing diam donec adipiscing tristique risus nec feugiat. </span>\r\n            </div>\r\n            <div class=\"col-12 md:col-4 md:mb-4 mb-0 px-3\">\r\n                <span class=\"p-3 shadow-2 mb-3 inline-block surface-card\" style=\"border-radius: 10px\">\r\n                    <i class=\"pi pi-shield text-4xl text-blue-500\"></i>\r\n                </span>\r\n                <div class=\"text-900 mb-3 font-medium\">Trusted Securitty</div>\r\n                <span class=\"text-700 cus-text-sm line-height-3\">Mattis rhoncus urna neque viverra justo nec ultrices. Id cursus metus aliquam eleifend.</span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</block-viewer>\r\n\r\n<block-viewer header=\"Pricing\" [code]=\"block3\">\r\n    <div class=\"surface-ground px-4 py-8 md:px-6 lg:px-8\">\r\n        <div class=\"text-900 font-bold text-6xl mb-4 text-center\">Pricing Plans</div>\r\n        <div class=\"text-700 text-xl mb-6 text-center line-height-3\">Lorem ipsum dolor sit, amet consectetur adipisicing elit. Velit numquam eligendi quos.</div>\r\n\r\n        <div class=\"grid\">\r\n            <div class=\"col-12 lg:col-4\">\r\n                <div class=\"p-3 h-full\">\r\n                    <div class=\"shadow-2 p-3 h-full flex flex-column surface-card\" style=\"border-radius: 6px\">\r\n                        <div class=\"text-900 font-medium text-xl mb-2\">Basic</div>\r\n                        <div class=\"text-600\">Plan description</div>\r\n                        <hr class=\"my-3 mx-0 border-top-1 border-none surface-border\" />\r\n                        <div class=\"flex align-items-center\">\r\n                            <span class=\"font-bold text-2xl text-900\">$9</span>\r\n                            <span class=\"ml-2 font-medium text-600\">per month</span>\r\n                        </div>\r\n                        <hr class=\"my-3 mx-0 border-top-1 border-none surface-border\" />\r\n                        <ul class=\"list-none p-0 m-0 flex-grow-1\">\r\n                            <li class=\"flex align-items-center mb-3\">\r\n                                <i class=\"pi pi-check-circle text-green-500 mr-2\"></i>\r\n                                <span>Arcu vitae elementum</span>\r\n                            </li>\r\n                            <li class=\"flex align-items-center mb-3\">\r\n                                <i class=\"pi pi-check-circle text-green-500 mr-2\"></i>\r\n                                <span>Dui faucibus in ornare</span>\r\n                            </li>\r\n                            <li class=\"flex align-items-center mb-3\">\r\n                                <i class=\"pi pi-check-circle text-green-500 mr-2\"></i>\r\n                                <span>Morbi tincidunt augue</span>\r\n                            </li>\r\n                        </ul>\r\n                        <hr class=\"mb-3 mx-0 border-top-1 border-none surface-border mt-auto\" />\r\n                        <button pButton pRipple label=\"Buy Now\" class=\"p-3 w-full mt-auto\"></button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"col-12 lg:col-4\">\r\n                <div class=\"p-3 h-full\">\r\n                    <div class=\"shadow-2 p-3 h-full flex flex-column surface-card\" style=\"border-radius: 6px\">\r\n                        <div class=\"text-900 font-medium text-xl mb-2\">Premium</div>\r\n                        <div class=\"text-600\">Plan description</div>\r\n                        <hr class=\"my-3 mx-0 border-top-1 border-none surface-border\" />\r\n                        <div class=\"flex align-items-center\">\r\n                            <span class=\"font-bold text-2xl text-900\">$29</span>\r\n                            <span class=\"ml-2 font-medium text-600\">per month</span>\r\n                        </div>\r\n                        <hr class=\"my-3 mx-0 border-top-1 border-none surface-border\" />\r\n                        <ul class=\"list-none p-0 m-0 flex-grow-1\">\r\n                            <li class=\"flex align-items-center mb-3\">\r\n                                <i class=\"pi pi-check-circle text-green-500 mr-2\"></i>\r\n                                <span>Arcu vitae elementum</span>\r\n                            </li>\r\n                            <li class=\"flex align-items-center mb-3\">\r\n                                <i class=\"pi pi-check-circle text-green-500 mr-2\"></i>\r\n                                <span>Dui faucibus in ornare</span>\r\n                            </li>\r\n                            <li class=\"flex align-items-center mb-3\">\r\n                                <i class=\"pi pi-check-circle text-green-500 mr-2\"></i>\r\n                                <span>Morbi tincidunt augue</span>\r\n                            </li>\r\n                            <li class=\"flex align-items-center mb-3\">\r\n                                <i class=\"pi pi-check-circle text-green-500 mr-2\"></i>\r\n                                <span>Duis ultricies lacus sed</span>\r\n                            </li>\r\n                        </ul>\r\n                        <hr class=\"mb-3 mx-0 border-top-1 border-none surface-border\" />\r\n                        <button pButton pRipple label=\"Buy Now\" class=\"p-3 w-full\"></button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"col-12 lg:col-4\">\r\n                <div class=\"p-3 h-full\">\r\n                    <div class=\"shadow-2 p-3 flex flex-column surface-card\" style=\"border-radius: 6px\">\r\n                        <div class=\"text-900 font-medium text-xl mb-2\">Enterprise</div>\r\n                        <div class=\"text-600\">Plan description</div>\r\n                        <hr class=\"my-3 mx-0 border-top-1 border-none surface-border\" />\r\n                        <div class=\"flex align-items-center\">\r\n                            <span class=\"font-bold text-2xl text-900\">$49</span>\r\n                            <span class=\"ml-2 font-medium text-600\">per month</span>\r\n                        </div>\r\n                        <hr class=\"my-3 mx-0 border-top-1 border-none surface-border\" />\r\n                        <ul class=\"list-none p-0 m-0 flex-grow-1\">\r\n                            <li class=\"flex align-items-center mb-3\">\r\n                                <i class=\"pi pi-check-circle text-green-500 mr-2\"></i>\r\n                                <span>Arcu vitae elementum</span>\r\n                            </li>\r\n                            <li class=\"flex align-items-center mb-3\">\r\n                                <i class=\"pi pi-check-circle text-green-500 mr-2\"></i>\r\n                                <span>Dui faucibus in ornare</span>\r\n                            </li>\r\n                            <li class=\"flex align-items-center mb-3\">\r\n                                <i class=\"pi pi-check-circle text-green-500 mr-2\"></i>\r\n                                <span>Morbi tincidunt augue</span>\r\n                            </li>\r\n                            <li class=\"flex align-items-center mb-3\">\r\n                                <i class=\"pi pi-check-circle text-green-500 mr-2\"></i>\r\n                                <span>Duis ultricies lacus sed</span>\r\n                            </li>\r\n                            <li class=\"flex align-items-center mb-3\">\r\n                                <i class=\"pi pi-check-circle text-green-500 mr-2\"></i>\r\n                                <span>Imperdiet proin</span>\r\n                            </li>\r\n                            <li class=\"flex align-items-center mb-3\">\r\n                                <i class=\"pi pi-check-circle text-green-500 mr-2\"></i>\r\n                                <span>Nisi scelerisque</span>\r\n                            </li>\r\n                        </ul>\r\n                        <hr class=\"mb-3 mx-0 border-top-1 border-none surface-border\" />\r\n                        <button pButton pRipple label=\"Buy Now\" class=\"p-3 w-full p-button-outlined\"></button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</block-viewer>\r\n\r\n<block-viewer header=\"Call to Action\" [code]=\"block4\">\r\n    <div class=\"surface-section px-4 py-8 md:px-6 lg:px-8\">\r\n        <div class=\"text-700 text-center\">\r\n            <div class=\"text-blue-600 font-bold mb-3\"><i class=\"pi pi-discord\"></i>&nbsp;POWERED BY DISCORD</div>\r\n            <div class=\"text-900 font-bold text-5xl mb-3\">Join Our Design Community</div>\r\n            <div class=\"text-700 text-2xl mb-5\">Lorem ipsum dolor sit, amet consectetur adipisicing elit. Velit numquam eligendi quos.</div>\r\n            <button pButton pRipple label=\"Join Now\" icon=\"pi pi-discord\" class=\"font-bold px-5 py-3 p-button-raised p-button-rounded white-space-nowrap\"></button>\r\n        </div>\r\n    </div>\r\n</block-viewer>\r\n\r\n<block-viewer header=\"Banner\" [code]=\"block5\" containerClass=\"surface-section py-8\">\r\n    <div class=\"bg-bluegray-900 text-gray-100 p-3 flex justify-content-between lg:justify-content-center align-items-center flex-wrap\">\r\n        <div class=\"font-bold mr-8\">🔥 Hot Deals!</div>\r\n        <div class=\"align-items-center hidden lg:flex\">\r\n            <span class=\"line-height-3\">Libero voluptatum atque exercitationem praesentium provident odit.</span>\r\n        </div>\r\n        <a class=\"flex align-items-center ml-2 mr-8\">\r\n            <a class=\"text-white\" href=\"#\"><span class=\"underline font-bold\">Learn More</span></a>\r\n        </a>\r\n        <a pRipple class=\"flex align-items-center no-underline justify-content-center border-circle text-gray-50 hover:bg-bluegray-700 cursor-pointer transition-colors transition-duration-150\" style=\"width:2rem; height: 2rem\">\r\n            <i class=\"pi pi-times\"></i>\r\n        </a>\r\n    </div>\r\n</block-viewer>\r\n\r\n\r\n<block-viewer header=\"Page Heading\" [code]=\"block6\">\r\n    <div class=\"surface-section px-4 py-5 md:px-6 lg:px-8\">\r\n        <ul class=\"list-none p-0 m-0 flex align-items-center font-medium mb-3\">\r\n            <li>\r\n                <a class=\"text-500 no-underline line-height-3 cursor-pointer\">Application</a>\r\n            </li>\r\n            <li class=\"px-2\">\r\n                <i class=\"pi pi-angle-right text-500 line-height-3\"></i>\r\n            </li>\r\n            <li>\r\n                <span class=\"text-900 line-height-3\">Analytics</span>\r\n            </li>\r\n        </ul>\r\n        <div class=\"flex align-items-start flex-column lg:justify-content-between lg:flex-row\">\r\n            <div>\r\n                <div class=\"font-medium text-3xl text-900\">Customers</div>\r\n                <div class=\"flex align-items-center text-700 flex-wrap\">\r\n                    <div class=\"mr-5 flex align-items-center mt-3\">\r\n                        <i class=\"pi pi-users mr-2\"></i>\r\n                        <span>332 Active Users</span>\r\n                    </div>\r\n                    <div class=\"mr-5 flex align-items-center mt-3\">\r\n                        <i class=\"pi pi-globe mr-2\"></i>\r\n                        <span>9402 Sessions</span>\r\n                    </div>\r\n                    <div class=\"flex align-items-center mt-3\">\r\n                        <i class=\"pi pi-clock mr-2\"></i>\r\n                        <span>2.32m Avg. Duration</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"mt-3 lg:mt-0\">\r\n                <button pButton pRipple label=\"Add\" class=\"p-button-outlined mr-2\" icon=\"pi pi-user-plus\"></button>\r\n                <button pButton pRipple label=\"Save\" icon=\"pi pi-check\"></button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</block-viewer>\r\n\r\n<block-viewer header=\"Stats\" [code]=\"block7\">\r\n    <div class=\"surface-ground px-4 py-5 md:px-6 lg:px-8\">\r\n        <div class=\"grid\">\r\n            <div class=\"col-12 md:col-6 lg:col-3\">\r\n                <div class=\"surface-card shadow-2 p-3 border-round\">\r\n                    <div class=\"flex justify-content-between mb-3\">\r\n                        <div>\r\n                            <span class=\"block text-500 font-medium mb-3\">Orders</span>\r\n                            <div class=\"text-900 font-medium text-xl\">152</div>\r\n                        </div>\r\n                        <div class=\"flex align-items-center justify-content-center bg-blue-100 border-round\" style=\"width:2.5rem;height:2.5rem\">\r\n                            <i class=\"pi pi-shopping-cart text-blue-500 text-xl\"></i>\r\n                        </div>\r\n                    </div>\r\n                    <span class=\"text-green-500 font-medium\">24 new </span>\r\n                    <span class=\"text-500\">since last visit</span>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-12 md:col-6 lg:col-3\">\r\n                <div class=\"surface-card shadow-2 p-3 border-round\">\r\n                    <div class=\"flex justify-content-between mb-3\">\r\n                        <div>\r\n                            <span class=\"block text-500 font-medium mb-3\">Revenue</span>\r\n                            <div class=\"text-900 font-medium text-xl\">$2.100</div>\r\n                        </div>\r\n                        <div class=\"flex align-items-center justify-content-center bg-orange-100 border-round\" style=\"width:2.5rem;height:2.5rem\">\r\n                            <i class=\"pi pi-map-marker text-orange-500 text-xl\"></i>\r\n                        </div>\r\n                    </div>\r\n                    <span class=\"text-green-500 font-medium\">%52+ </span>\r\n                    <span class=\"text-500\">since last week</span>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-12 md:col-6 lg:col-3\">\r\n                <div class=\"surface-card shadow-2 p-3 border-round\">\r\n                    <div class=\"flex justify-content-between mb-3\">\r\n                        <div>\r\n                            <span class=\"block text-500 font-medium mb-3\">Customers</span>\r\n                            <div class=\"text-900 font-medium text-xl\">28441</div>\r\n                        </div>\r\n                        <div class=\"flex align-items-center justify-content-center bg-cyan-100 border-round\" style=\"width:2.5rem;height:2.5rem\">\r\n                            <i class=\"pi pi-inbox text-cyan-500 text-xl\"></i>\r\n                        </div>\r\n                    </div>\r\n                    <span class=\"text-green-500 font-medium\">520  </span>\r\n                    <span class=\"text-500\">newly registered</span>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-12 md:col-6 lg:col-3\">\r\n                <div class=\"surface-card shadow-2 p-3 border-round\">\r\n                    <div class=\"flex justify-content-between mb-3\">\r\n                        <div>\r\n                            <span class=\"block text-500 font-medium mb-3\">Comments</span>\r\n                            <div class=\"text-900 font-medium text-xl\">152 Unread</div>\r\n                        </div>\r\n                        <div class=\"flex align-items-center justify-content-center bg-purple-100 border-round\" style=\"width:2.5rem;height:2.5rem\">\r\n                            <i class=\"pi pi-comment text-purple-500 text-xl\"></i>\r\n                        </div>\r\n                    </div>\r\n                    <span class=\"text-green-500 font-medium\">85 </span>\r\n                    <span class=\"text-500\">responded</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</block-viewer>\r\n\r\n<block-viewer header=\"Sign-In\" [code]=\"block8\" containerClass=\"surface-ground px-4 py-8 md:px-6 lg:px-8 flex align-items-center justify-content-center\">\r\n    <div class=\"surface-card p-4 shadow-2 border-round w-full lg:w-6\">\r\n        <div class=\"text-center mb-5\">\r\n            <img src=\"assets/demo/images/blocks/logos/hyper.svg\" alt=\"Image\" height=\"50\" class=\"mb-3\">\r\n            <div class=\"text-900 text-3xl font-medium mb-3\">Welcome Back</div>\r\n            <span class=\"text-600 font-medium line-height-3\">Don't have an account?</span>\r\n            <a class=\"font-medium no-underline ml-2 text-blue-500 cursor-pointer\">Create today!</a>\r\n        </div>\r\n\r\n        <div>\r\n            <label for=\"email1\" class=\"block text-900 font-medium mb-2\">Email</label>\r\n            <input id=\"email1\" type=\"text\" pInputText class=\"w-full mb-3\">\r\n\r\n            <label for=\"password1\" class=\"block text-900 font-medium mb-2\">Password</label>\r\n            <input id=\"password1\" type=\"password\" pInputText class=\"w-full mb-3\">\r\n\r\n            <div class=\"flex align-items-center justify-content-between mb-6\">\r\n                <div class=\"flex align-items-center\">\r\n                    <p-checkbox id=\"rememberme1\" [binary]=\"true\" styleClass=\"mr-2\"></p-checkbox>\r\n                    <label for=\"rememberme1\">Remember me</label>\r\n                </div>\r\n                <a class=\"font-medium no-underline ml-2 text-blue-500 text-right cursor-pointer\">Forgot password?</a>\r\n            </div>\r\n\r\n            <button pButton pRipple label=\"Sign In\" icon=\"pi pi-user\" class=\"w-full\"></button>\r\n        </div>\r\n    </div>\r\n</block-viewer>\r\n\r\n<block-viewer header=\"Description List\" [code]=\"block9\" containerClass=\"surface-section px-4 py-8 md:px-6 lg:px-8\">\r\n    <div class=\"surface-section\">\r\n        <div class=\"font-medium text-3xl text-900 mb-3\">Movie Information</div>\r\n        <div class=\"text-500 mb-5\">Morbi tristique blandit turpis. In viverra ligula id nulla hendrerit rutrum.</div>\r\n        <ul class=\"list-none p-0 m-0\">\r\n            <li class=\"flex align-items-center py-3 px-2 border-top-1 surface-border flex-wrap\">\r\n                <div class=\"text-500 w-6 md:w-2 font-medium\">Title</div>\r\n                <div class=\"text-900 w-full md:w-8 md:flex-order-0 flex-order-1\">Heat</div>\r\n                <div class=\"w-6 md:w-2 flex justify-content-end\">\r\n                    <button pButton pRipple label=\"Edit\" icon=\"pi pi-pencil\" class=\"p-button-text\"></button>\r\n                </div>\r\n            </li>\r\n            <li class=\"flex align-items-center py-3 px-2 border-top-1 surface-border flex-wrap\">\r\n                <div class=\"text-500 w-6 md:w-2 font-medium\">Genre</div>\r\n                <div class=\"text-900 w-full md:w-8 md:flex-order-0 flex-order-1\">\r\n                    <p-chip label=\"Crime\" class=\"mr-2\"></p-chip>\r\n                    <p-chip label=\"Drama\" class=\"mr-2\"></p-chip>\r\n                    <p-chip label=\"Thriller\"></p-chip>\r\n                </div>\r\n                <div class=\"w-6 md:w-2 flex justify-content-end\">\r\n                    <button pButton pRipple label=\"Edit\" icon=\"pi pi-pencil\" class=\"p-button-text\"></button>\r\n                </div>\r\n            </li>\r\n            <li class=\"flex align-items-center py-3 px-2 border-top-1 surface-border flex-wrap\">\r\n                <div class=\"text-500 w-6 md:w-2 font-medium\">Director</div>\r\n                <div class=\"text-900 w-full md:w-8 md:flex-order-0 flex-order-1\">Michael Mann</div>\r\n                <div class=\"w-6 md:w-2 flex justify-content-end\">\r\n                    <button pButton pRipple label=\"Edit\" icon=\"pi pi-pencil\" class=\"p-button-text\"></button>\r\n                </div>\r\n            </li>\r\n            <li class=\"flex align-items-center py-3 px-2 border-top-1 surface-border flex-wrap\">\r\n                <div class=\"text-500 w-6 md:w-2 font-medium\">Actors</div>\r\n                <div class=\"text-900 w-full md:w-8 md:flex-order-0 flex-order-1\">Robert De Niro, Al Pacino</div>\r\n                <div class=\"w-6 md:w-2 flex justify-content-end\">\r\n                    <button pButton pRipple label=\"Edit\" icon=\"pi pi-pencil\" class=\"p-button-text\"></button>\r\n                </div>\r\n            </li>\r\n            <li class=\"flex align-items-center py-3 px-2 border-top-1 border-bottom-1 surface-border flex-wrap\">\r\n                <div class=\"text-500 w-6 md:w-2 font-medium\">Plot</div>\r\n                <div class=\"text-900 w-full md:w-8 md:flex-order-0 flex-order-1 line-height-3\">\r\n                    A group of professional bank robbers start to feel the heat from police\r\n                     when they unknowingly leave a clue at their latest heist.</div>\r\n                <div class=\"w-6 md:w-2 flex justify-content-end\">\r\n                    <button pButton pRipple label=\"Edit\" icon=\"pi pi-pencil\" class=\"p-button-text\"></button>\r\n                </div>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n</block-viewer>\r\n\r\n<block-viewer header=\"Card\" [code]=\"block10\" containerClass=\"px-4 py-8 md:px-6 lg:px-8\">\r\n    <div class=\"surface-card p-4 shadow-2 border-round\">\r\n        <div class=\"text-3xl font-medium text-900 mb-3\">Card Title</div>\r\n        <div class=\"font-medium text-500 mb-3\">Vivamus id nisl interdum, blandit augue sit amet, eleifend mi.</div>\r\n        <div style=\"height: 150px\" class=\"border-2 border-dashed surface-border\"></div>\r\n    </div>\r\n</block-viewer>"
        },
        {
            "name": "BlockViewer",
            "id": "component-BlockViewer-8dba61a8238b8fcb60de4e686b4ba16d50fc0db934d3fe12314e9514fe3169f1fd1c4a436abd3f902f1ce3bfef4ee123ff230552e6aa99eb855e6940ad50d655",
            "file": "src/app/showcase/components/blockviewer/blockviewer.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "block-viewer",
            "styleUrls": [
                "./blockviewer.component.scss"
            ],
            "styles": [],
            "template": "<div class=\"block-section\">\n    <div class=\"block-header\">\n        <span class=\"block-title\">\n            <span>{{header}}</span>\n            <span class=\"badge-free\" *ngIf=\"free\">Free</span>\n            <span class=\"badge-new\" *ngIf=\"new\">New</span>\n        </span>\n        <div class=\"block-actions\">\n            <a tabindex=\"0\" [ngClass]=\"{'block-action-active': blockView == BlockView.PREVIEW}\" (click)=\"activateView($event, BlockView.PREVIEW)\"><span>Preview</span></a>\n            <a [attr.tabindex]=\"'0'\" [ngClass]=\"{'block-action-active': blockView == BlockView.CODE}\" (click)=\"activateView($event, BlockView.CODE)\">\n                <span>Code</span>\n            </a>\n            <a [attr.tabindex]=\"'0'\" class=\"block-action-copy\" (click)=\"copyCode($event)\"\n                pTooltip=\"Copied to clipboard\" tooltipEvent=\"focus\" tooltipPosition=\"bottom\"><i class=\"pi pi-copy m-0\"></i></a>\n        </div>\n    </div>\n    <div class=\"block-content\">\n        <div [class]=\"containerClass\" [ngStyle]=\"previewStyle\" *ngIf=\"blockView == BlockView.PREVIEW\">\n            <ng-content></ng-content>\n        </div>\n        <div *ngIf=\"blockView == BlockView.CODE\">\n            <app-code lang=\"markup\" ngPreserveWhitespaces>{{code}}\n            </app-code>\n        </div>\n    </div>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "code",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "containerClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "free",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 50,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "header",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "new",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 52,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "previewStyle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "blockView",
                    "defaultValue": "BlockView.PREVIEW",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BlockView",
                    "optional": false,
                    "description": "",
                    "line": 56
                },
                {
                    "name": "BlockView",
                    "defaultValue": "BlockView",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 54
                }
            ],
            "methodsClass": [
                {
                    "name": "activateView",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "blockView",
                            "type": "BlockView",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "blockView",
                            "type": "BlockView",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "copyCode",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        132
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\nenum BlockView {\r\n  PREVIEW,\r\n  CODE\r\n}\r\n\r\n@Component({\r\n  selector: 'block-viewer',\r\n  template: `\r\n    <div class=\"block-section\">\r\n        <div class=\"block-header\">\r\n            <span class=\"block-title\">\r\n                <span>{{header}}</span>\r\n                <span class=\"badge-free\" *ngIf=\"free\">Free</span>\r\n                <span class=\"badge-new\" *ngIf=\"new\">New</span>\r\n            </span>\r\n            <div class=\"block-actions\">\r\n                <a tabindex=\"0\" [ngClass]=\"{'block-action-active': blockView == BlockView.PREVIEW}\" (click)=\"activateView($event, BlockView.PREVIEW)\"><span>Preview</span></a>\r\n                <a [attr.tabindex]=\"'0'\" [ngClass]=\"{'block-action-active': blockView == BlockView.CODE}\" (click)=\"activateView($event, BlockView.CODE)\">\r\n                    <span>Code</span>\r\n                </a>\r\n                <a [attr.tabindex]=\"'0'\" class=\"block-action-copy\" (click)=\"copyCode($event)\" \r\n                    pTooltip=\"Copied to clipboard\" tooltipEvent=\"focus\" tooltipPosition=\"bottom\"><i class=\"pi pi-copy m-0\"></i></a>\r\n            </div>\r\n        </div>\r\n        <div class=\"block-content\">\r\n            <div [class]=\"containerClass\" [ngStyle]=\"previewStyle\" *ngIf=\"blockView == BlockView.PREVIEW\">\r\n                <ng-content></ng-content>\r\n            </div>\r\n            <div *ngIf=\"blockView == BlockView.CODE\">\r\n                <app-code lang=\"markup\" ngPreserveWhitespaces>{{code}}\r\n                </app-code>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  `,\r\n  styleUrls: ['./blockviewer.component.scss']\r\n})\r\nexport class BlockViewer {\r\n  \r\n  @Input() header: string;\r\n\r\n  @Input() code: string;\r\n\r\n  @Input() containerClass: string;\r\n\r\n  @Input() previewStyle: string;\r\n\r\n  @Input() free: boolean = true;\r\n\r\n  @Input() new: boolean = false;\r\n\r\n  BlockView = BlockView;\r\n\r\n  blockView: BlockView = BlockView.PREVIEW;\r\n\r\n  activateView(event: Event, blockView: BlockView) {\r\n\r\n    this.blockView = blockView;  \r\n    event.preventDefault();\r\n  }\r\n\r\n  async copyCode(event: Event) {\r\n    await navigator.clipboard.writeText(this.code);\r\n    event.preventDefault();\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".block-section {\r\n    margin-bottom: 4rem;\r\n    overflow: hidden;\r\n}\r\n\r\n.block-header {\r\n    padding: 1rem 2rem;\r\n    background-color: var(--surface-section);\r\n    border-top-left-radius: 12px;\r\n    border-top-right-radius: 12px;\r\n    border:1px solid var(--surface-d);\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n\r\n    .block-title {\r\n        font-weight: 700;\r\n        display: inline-flex;\r\n        align-items: center;\r\n\r\n        .badge-free {\r\n            border-radius: 4px;\r\n            padding: .25rem .5rem;\r\n            background-color: var(--orange-500);\r\n            color: white;\r\n            margin-left: 1rem;\r\n            font-weight: 700;\r\n            font-size: .875rem;\r\n        }\r\n    }\r\n\r\n    .block-actions {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n        user-select: none;\r\n        margin-left: 1rem;\r\n\r\n        a {\r\n            display: flex;\r\n            align-items: center;\r\n            margin-right: .75rem;\r\n            padding: .5rem 1rem;\r\n            border-radius: 4px;\r\n            font-weight: 600;\r\n            border: 1px solid transparent;\r\n            transition: background-color .2s;\r\n            cursor: pointer;\r\n\r\n            &:last-child {\r\n                margin-right: 0;\r\n            }\r\n\r\n            &:not(.block-action-disabled):hover {\r\n                background-color: var(--surface-c);\r\n            }\r\n\r\n            &.block-action-active {\r\n                border-color: var(--primary-color);\r\n                color: var(--primary-color);\r\n            }\r\n\r\n            &.block-action-copy {\r\n                i {\r\n                    color: var(--primary-color);\r\n                    font-size: 1.25rem;\r\n                }\r\n            }\r\n\r\n            &.block-action-disabled {\r\n                opacity: .6;\r\n                cursor: auto !important;\r\n            }\r\n\r\n            i {\r\n                margin-right: .5rem;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n.block-content {\r\n    padding: 0;\r\n    border:1px solid var(--surface-d);\r\n    border-top: 0 none;\r\n    border-bottom-left-radius: 12px;\r\n    border-bottom-right-radius: 12px;\r\n    overflow: hidden;\r\n}\r\n\r\n:host ::ng-deep pre[class*=\"language-\"] {\r\n    margin: 0 !important;\r\n\r\n    &:before, &:after {\r\n        display: none !important;\r\n    } \r\n\r\n    code {\r\n        border-left: 0 none !important;\r\n        box-shadow: none !important;\r\n        background: var(--surface-e) !important;\r\n        margin: 0;\r\n        color: var(--text-color);\r\n        font-size: 14px;\r\n        padding: 0 2rem !important;\r\n    }\r\n}\r\n\r\n@media screen and (max-width: 575px) {\r\n    .block-header {\r\n        flex-direction: column;\r\n        align-items: start;\r\n\r\n        .block-actions {\r\n            margin-top: 1rem;\r\n            margin-left: 0;\r\n        }\r\n    }\r\n}",
                    "styleUrl": "./blockviewer.component.scss"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "ButtonAddComponent",
            "id": "component-ButtonAddComponent-eb7d2e465c2d571cab6ec07be653ab802e739cbc060dd6497469ea0bec5cf72c1d6155a536fb2e728ca167d3233a0d000694740911a28e18ae41587f2806dcac",
            "file": "src/app/core/shared-component/linov-button/button-add/button-add.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "btn-add",
            "styleUrls": [
                "./button-add.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button-add.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "click",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, Output,EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'btn-add',\r\n  templateUrl: './button-add.component.html',\r\n  styleUrls: ['./button-add.component.scss']\r\n})\r\nexport class ButtonAddComponent implements OnInit {\r\n\r\n  @Input() disabled = false;\r\n  @Output() onClick = new EventEmitter<any>();\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  click(){\r\n    this.onClick.emit();\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./button-add.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<button pButton pRipple label=\"Add\" [disabled]=\"disabled\" class=\"mb-2 ml-2 btn-add\" (click)=\"click()\" icon=\"fas fa-plus\"></button>\r\n"
        },
        {
            "name": "ButtonBackComponent",
            "id": "component-ButtonBackComponent-1766825c6f1ac4abd15699d3296d80a4d9fb7aed5930eacb6276048bcc70b96d9904ffcec8663c88a95a94f7b72dacd3fc0bd8367967630268a589c7888eee90",
            "file": "src/app/core/shared-component/linov-button/button-back-general/button-back-general.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-button-back-general",
            "styleUrls": [
                "./button-back-general.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button-back-general.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onBack",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { Location } from '@angular/common';\n@Component({\n    selector: 'app-button-back-general',\n    templateUrl: './button-back-general.component.html',\n    styleUrls: ['./button-back-general.component.scss'],\n})\nexport class ButtonBackComponent {\n    constructor(private location: Location) {}\n    onBack() {\n        this.location.back();\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./button-back-general.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "location",
                        "type": "Location",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "location",
                        "type": "Location",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<button  class=\"btn-back\" pButton (click)=\"onBack()\">\n    <i class=\"fas fa-arrow-left\"></i>\n</button>\n"
        },
        {
            "name": "ButtonCancelComponent",
            "id": "component-ButtonCancelComponent-d5b1dbfa9cadeff1ce5246a2b9a1da17d256d361f6ad4c7feba94d2c980ee0685f302806324fba43f868764f482703c9116b4fb336a1c39469b07a9e7813cd00",
            "file": "src/app/core/shared-component/linov-button/button-cancel/button-cancel.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "btn-cancel",
            "styleUrls": [
                "./button-cancel.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button-cancel.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "isNeedConfirmation",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "routeUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "isShow",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "click",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onCancel",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ConfirmationService } from 'primeng/api';\r\nimport { AppConstant } from 'src/app/core/config/app.config';\r\n\r\n@Component({\r\n    selector: 'btn-cancel',\r\n    templateUrl: './button-cancel.component.html',\r\n    styleUrls: ['./button-cancel.component.scss'],\r\n})\r\nexport class ButtonCancelComponent {\r\n    @Input() routeUrl;\r\n    @Input() disabled = false;\r\n    @Input() isNeedConfirmation = true;\r\n    @Output() onClick = new EventEmitter<any>();\r\n    isShow = false;\r\n    constructor(\r\n        private router: Router,\r\n        private confirmationService: ConfirmationService\r\n    ) {}\r\n\r\n    onCancel() {\r\n        if (this.routeUrl) {\r\n            this.router.navigate([this.routeUrl]);\r\n        } else {\r\n            this.onClick.emit();\r\n        }\r\n    }\r\n\r\n    click() {\r\n        if (this.isNeedConfirmation) {\r\n            this.isShow = true;\r\n            this.confirmationService.confirm({\r\n                message: AppConstant.cancelMessage,\r\n                acceptLabel: 'Ya',\r\n                rejectLabel: 'Tidak',\r\n                icon: 'c-icons cancel-icon',\r\n                rejectButtonStyleClass: 'p-button-cancel-outlined-grey',\r\n                acceptButtonStyleClass: 'p-button-cancel ',\r\n                accept: () => {\r\n                    this.isShow = false;\r\n                    this.confirmationService.close();\r\n                    this.onCancel();\r\n                },\r\n                reject: () => {\r\n                    this.isShow = false;\r\n                    this.confirmationService.close();\r\n                },\r\n            });\r\n        } else {\r\n            this.onCancel();\r\n        }\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n    ::ng-deep .p-dialog-content {\r\n        padding-top: 0;\r\n        display: flex;\r\n        flex-direction: column;\r\n        gap: 30px;\r\n        align-items: center;\r\n\r\n        .p-confirm-dialog-message {\r\n            text-align: center;\r\n        }\r\n    }\r\n\r\n    ::ng-deep .p-dialog-footer {\r\n        text-align: center;\r\n\r\n        button {\r\n            margin: 0 0.5rem 0 0.5rem;\r\n        }\r\n    }\r\n}\r\n\r\n:host ::ng-deep {\r\n    .c-icons {\r\n        width: 6rem;\r\n        height: 6rem;\r\n    }\r\n    .cancel-icon {\r\n        background-image: url(\"/assets/icon/icon-cancel.svg\");\r\n        background-size: contain;\r\n        background-repeat: no-repeat;\r\n    }\r\n}\r\n",
                    "styleUrl": "./button-cancel.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "confirmationService",
                        "type": "ConfirmationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "confirmationService",
                        "type": "ConfirmationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<button [disabled]=\"disabled\" pButton class=\"btn-cancel mb-2 ml-2\" icon=\"fas fa-times\" (click)=\"click()\"\r\n  label=\"Cancel\"></button>\r\n<p-confirmDialog [hidden]=\"!isShow\" [style]=\"{width: '500px'}\" [breakpoints]=\"{'960px': '85vw'}\" [baseZIndex]=\"10000\"\r\n  [closable]=\"false\" [acceptIcon]=\"false\" [rejectIcon]=\"false\"></p-confirmDialog>\r\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-a53fd738b978780d39fb5fcc9ae4cfe0088e57a1f6ce674862d57dab9192140bd1c05548a9910db0469a431142886e658ff2e761f15781b2ad430e58d64724d0",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat background color to use\n",
                    "description": "<p>What background color to use</p>\n",
                    "line": 28,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 786,
                            "end": 799,
                            "flags": 8421376,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 330,
                            "tagName": {
                                "pos": 787,
                                "end": 795,
                                "flags": 8421376,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 42,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this the principal call to action on the page?\n",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 22,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHow large should the button be?\n",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 34,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 48,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  imports: [CommonModule],\n  template: ` <button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button.css'],\n})\nexport default class ButtonComponent {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  font-family: 'SF Pro Text Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n}\n.storybook-button--primary {\n  color: white;\n  background-color: #1ea7fd;\n}\n.storybook-button--secondary {\n  color: #333;\n  background-color: transparent;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n}\n.storybook-button--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n.storybook-button--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n.storybook-button--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 50
                    }
                }
            }
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-de5d6cff019d58e80ea4c7559900c3c24a5f4959fd047d8c83aa61dff22333529b5b41fcfbc4a7675b6ccd8d9505e53b21d9087b9524cf6c0d6fb7a576f192c4-1",
            "file": "src/app/showcase/components/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "items",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem[]",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "loading",
                    "defaultValue": "[false, false, false, false]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "load",
                    "args": [
                        {
                            "name": "index",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { MenuItem } from 'primeng/api';\r\n\r\n@Component({\r\n    templateUrl: './button.component.html'\r\n})\r\nexport class ButtonComponent implements OnInit {\r\n\r\n    items: MenuItem[];\r\n\r\n    loading = [false, false, false, false]\r\n\r\n    ngOnInit() {\r\n        this.items = [\r\n            {label: 'Update', icon: 'pi pi-refresh'},\r\n            {label: 'Delete', icon: 'pi pi-times'},\r\n            {label: 'Angular.io', icon: 'pi pi-info', url: 'http://angular.io'},\r\n            {separator: true},\r\n            {label: 'Setup', icon: 'pi pi-cog'}\r\n        ];\r\n    }\r\n\r\n    load(index) {\r\n        this.loading[index] = true;\r\n        setTimeout(() => this.loading[index] = false, 1000);\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "ButtonComponent-1",
            "templateData": "<div class=\"grid\">\r\n\t<div class=\"col-12 md:col-6\">\r\n\t\t<div class=\"card\">\r\n\t\t\t<h5>Default</h5>\r\n\t\t\t<button pButton pRipple label=\"Submit\" class=\"mr-2 mb-2\"></button>\r\n\t\t\t<button pButton pRipple label=\"Disabled\" disabled=\"true\" class=\"mr-2 mb-2\"></button>\r\n\t\t\t<p-button label=\"Link\" styleClass=\"p-button-link mr-2 mb-2\"></p-button>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"card\">\r\n\t\t\t<h5>Severities</h5>\r\n\t\t\t<button pButton pRipple type=\"button\" label=\"Primary\" class=\"mr-2 mb-2\"></button>\r\n\t\t\t<button pButton pRipple type=\"button\" label=\"Secondary\" class=\"p-button-secondary mr-2 mb-2\"></button>\r\n\t\t\t<button pButton pRipple type=\"button\" label=\"Success\" class=\"p-button-success mr-2 mb-2\"></button>\r\n\t\t\t<button pButton pRipple type=\"button\" label=\"Info\" class=\"p-button-info mr-2 mb-2\"></button>\r\n\t\t\t<button pButton pRipple type=\"button\" label=\"Warning\" class=\"p-button-warning mr-2 mb-2\"></button>\r\n\t\t\t<button pButton pRipple type=\"button\" label=\"Help\" class=\"p-button-help mr-2 mb-2\"></button>\r\n\t\t\t<button pButton pRipple type=\"button\" label=\"Danger\" class=\"p-button-danger mr-2 mb-2\"></button>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"card\">\r\n\t\t\t<h5>Text</h5>\r\n\t\t\t<button pButton pRipple type=\"button\" label=\"Primary\" class=\"p-button-text mr-2 mb-2\"></button>\r\n\t\t\t<button pButton pRipple type=\"button\" label=\"Secondary\" class=\"p-button-secondary p-button-text mr-2 mb-2\"></button>\r\n\t\t\t<button pButton pRipple type=\"button\" label=\"Success\" class=\"p-button-success p-button-text mr-2 mb-2\"></button>\r\n\t\t\t<button pButton pRipple type=\"button\" label=\"Info\" class=\"p-button-info p-button-text mr-2 mb-2\"></button>\r\n\t\t\t<button pButton pRipple type=\"button\" label=\"Warning\" class=\"p-button-warning p-button-text mr-2 mb-2\"></button>\r\n\t\t\t<button pButton pRipple type=\"button\" label=\"Help\" class=\"p-button-help p-button-text mr-2 mb-2\"></button>\r\n\t\t\t<button pButton pRipple type=\"button\" label=\"Danger\" class=\"p-button-danger p-button-text mr-2 mb-2\"></button>\r\n\t\t\t<button pButton pRipple type=\"button\" label=\"Plain\" class=\"p-button-text p-button-plain mr-2 mb-2\"></button>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"card\">\r\n\t\t\t<h5>Outlined</h5>\r\n\t\t\t<button pButton pRipple type=\"button\" label=\"Primary\" class=\"p-button-outlined mr-2 mb-2\"></button>\r\n\t\t\t<button pButton pRipple type=\"button\" label=\"Secondary\" class=\"p-button-outlined p-button-secondary mr-2 mb-2\"></button>\r\n\t\t\t<button pButton pRipple type=\"button\" label=\"Success\" class=\"p-button-outlined p-button-success mr-2 mb-2\"></button>\r\n\t\t\t<button pButton pRipple type=\"button\" label=\"Info\" class=\"p-button-outlined p-button-info mr-2 mb-2\"></button>\r\n\t\t\t<button pButton pRipple type=\"button\" label=\"Warning\" class=\"p-button-outlined p-button-warning mr-2 mb-2\"></button>\r\n\t\t\t<button pButton pRipple type=\"button\" label=\"Help\" class=\"p-button-outlined p-button-help mr-2 mb-2\"></button>\r\n\t\t\t<button pButton pRipple type=\"button\" label=\"Danger\" class=\"p-button-outlined p-button-danger mr-2 mb-2\"></button>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"card\">\r\n\t\t\t<h5>Button Set</h5>\r\n\t\t\t<span class=\"p-buttonset\">\r\n\t\t\t\t<button pButton pRipple label=\"Save\" icon=\"pi pi-check\"></button>\r\n\t\t\t\t<button pButton pRipple label=\"Delete\" icon=\"pi pi-trash\"></button>\r\n\t\t\t\t<button pButton pRipple label=\"Cancel\" icon=\"pi pi-times\"></button>\r\n\t\t\t</span>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"card\">\r\n\t\t\t<h5>SplitButton</h5>\r\n\t\t\t<p-splitButton label=\"Save\" icon=\"pi pi-plus\" [model]=\"items\" styleClass=\"p-button-info mr-2 mb-2\"></p-splitButton>\r\n\t\t\t<p-splitButton label=\"Save\" icon=\"pi pi-plus\" [model]=\"items\" styleClass=\"p-button-success mr-2 mb-2\"></p-splitButton>\r\n\t\t\t<p-splitButton label=\"Save\" icon=\"pi pi-plus\" [model]=\"items\" styleClass=\"p-button-warning mr-2 mb-2\"></p-splitButton>\r\n\t\t\t<p-splitButton label=\"Save\" icon=\"pi pi-plus\" [model]=\"items\" styleClass=\"p-button-help mr-2 mb-2\"></p-splitButton>\r\n\t\t\t<p-splitButton label=\"Save\" icon=\"pi pi-plus\" [model]=\"items\" styleClass=\"p-button-danger mr-2 mb-2\"></p-splitButton>\r\n\t\t</div>\r\n\t\t<div class=\"card\">\r\n\t\t\t<h5>Templating</h5>\r\n\t\t\t<p-button styleClass=\"mr-2 mb-2 px-3\">\r\n\t\t\t\t<ng-template pTemplate=\"content\">\r\n\t\t\t\t\t<img alt=\"logo\" src=\"https://primefaces.org/primeng/showcase/assets/showcase/images/primeng-icon.svg\" style=\"width: 1.5rem\"/>\r\n\t\t\t\t</ng-template>\r\n\t\t\t</p-button>\r\n\t\t\t\r\n\t\t\t<p-button styleClass=\"p-button-outlined mr-2 mb-2\">\r\n\t\t\t\t<img alt=\"logo\" src=\"https://primefaces.org/primeng/showcase/assets/showcase/images/primeng-icon.svg\" style=\"width: 1.5rem\"/>\r\n\t\t\t\t<span class=\"ml-2 p-text-bold\">PrimeNG</span>\r\n\t\t\t</p-button>\r\n\t\t</div>\r\n\t</div>\r\n\t<div class=\"col-12 md:col-6\">\r\n\t\t<div class=\"card\">\r\n\t\t\t<h5>Icons</h5>\r\n\t\t\t<button pButton pRipple icon=\"pi pi-star-fill\" class=\"mr-2 mb-2\"></button>\r\n\t\t\t<button pButton pRipple label=\"Submit\" icon=\"pi pi-bookmark\" class=\"mr-2 mb-2\"></button>\r\n\t\t\t<button pButton pRipple label=\"Submit\" icon=\"pi pi-bookmark\" iconPos=\"right\" class=\"mr-2 mb-2\"></button>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"card\">\r\n\t\t\t<h5>Raised</h5>\r\n\t\t\t<button pButton pRipple type=\"button\" label=\"Primary\" class=\"p-button-raised mr-2 mb-2\"></button>\r\n\t\t\t<button pButton pRipple type=\"button\" label=\"Secondary\" class=\"p-button-raised p-button-secondary mr-2 mb-2\"></button>\r\n\t\t\t<button pButton pRipple type=\"button\" label=\"Success\" class=\"p-button-raised p-button-success mr-2 mb-2\"></button>\r\n\t\t\t<button pButton pRipple type=\"button\" label=\"Info\" class=\"p-button-raised p-button-info mr-2 mb-2\"></button>\r\n\t\t\t<button pButton pRipple type=\"button\" label=\"Warning\" class=\"p-button-raised p-button-warning mr-2 mb-2\"></button>\r\n\t\t\t<button pButton pRipple type=\"button\" label=\"Help\" class=\"p-button-raised p-button-help mr-2 mb-2\"></button>\r\n\t\t\t<button pButton pRipple type=\"button\" label=\"Danger\" class=\"p-button-raised p-button-danger mr-2 mb-2\"></button>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"card\">\r\n\t\t\t<h5>Rounded</h5>\r\n\t\t\t<button pButton pRipple type=\"button\" label=\"Primary\" class=\"p-button-rounded mr-2 mb-2\"></button>\r\n\t\t\t<button pButton pRipple type=\"button\" label=\"Secondary\" class=\"p-button-rounded p-button-secondary mr-2 mb-2\"></button>\r\n\t\t\t<button pButton pRipple type=\"button\" label=\"Success\" class=\"p-button-rounded p-button-success mr-2 mb-2\"></button>\r\n\t\t\t<button pButton pRipple type=\"button\" label=\"Info\" class=\"p-button-rounded p-button-info mr-2 mb-2\"></button>\r\n\t\t\t<button pButton pRipple type=\"button\" label=\"Warning\" class=\"p-button-rounded p-button-warning mr-2 mb-2\"></button>\r\n\t\t\t<button pButton pRipple type=\"button\" label=\"Help\" class=\"p-button-rounded p-button-help mr-2 mb-2\"></button>\r\n\t\t\t<button pButton pRipple type=\"button\" label=\"Danger\" class=\"p-button-rounded p-button-danger mr-2 mb-2\"></button>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"card\">\r\n\t\t\t<h5>Rounded Icons</h5>\r\n\t\t\t<button pButton pRipple type=\"button\" icon=\"pi pi-check\" class=\"p-button-rounded mr-2 mb-2\"></button>\r\n\t\t\t<button pButton pRipple type=\"button\" icon=\"pi pi-bookmark\" class=\"p-button-rounded p-button-secondary mr-2 mb-2\"></button>\r\n\t\t\t<button pButton pRipple type=\"button\" icon=\"pi pi-search\" class=\"p-button-rounded p-button-success mr-2 mb-2\"></button>\r\n\t\t\t<button pButton pRipple type=\"button\" icon=\"pi pi-user\" class=\"p-button-rounded p-button-info mr-2 mb-2\"></button>\r\n\t\t\t<button pButton pRipple type=\"button\" icon=\"pi pi-bell\" class=\"p-button-rounded p-button-warning mr-2 mb-2\"></button>\r\n\t\t\t<button pButton pRipple type=\"button\" icon=\"pi pi-heart\" class=\"p-button-rounded p-button-help mr-2 mb-2\"></button>\r\n\t\t\t<button pButton pRipple type=\"button\" icon=\"pi pi-times\" class=\"p-button-rounded p-button-danger mr-2 mb-2\"></button>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"card\">\r\n\t\t\t<h5>Rounded Text</h5>\r\n\t\t\t<button pButton pRipple type=\"button\" icon=\"pi pi-check\" class=\"p-button-rounded p-button-text mr-2 mb-2\"></button>\r\n\t\t\t<button pButton pRipple type=\"button\" icon=\"pi pi-bookmark\" class=\"p-button-rounded p-button-secondary p-button-text mr-2 mb-2\"></button>\r\n\t\t\t<button pButton pRipple type=\"button\" icon=\"pi pi-search\" class=\"p-button-rounded p-button-success p-button-text mr-2 mb-2\"></button>\r\n\t\t\t<button pButton pRipple type=\"button\" icon=\"pi pi-user\" class=\"p-button-rounded p-button-info p-button-text mr-2 mb-2\"></button>\r\n\t\t\t<button pButton pRipple type=\"button\" icon=\"pi pi-bell\" class=\"p-button-rounded p-button-warning p-button-text mr-2 mb-2\"></button>\r\n\t\t\t<button pButton pRipple type=\"button\" icon=\"pi pi-heart\" class=\"p-button-rounded p-button-help p-button-text mr-2 mb-2\"></button>\r\n\t\t\t<button pButton pRipple type=\"button\" icon=\"pi pi-times\" class=\"p-button-rounded p-button-danger p-button-text mr-2 mb-2\"></button>\r\n\t\t\t<button pButton pRipple type=\"button\" icon=\"pi pi-filter\" class=\"p-button-rounded p-button-text p-button-plain mr-2 mb-2\"></button>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"card\">\r\n\t\t\t<h5>Rounded Outlined</h5>\r\n\t\t\t<button pButton pRipple type=\"button\" icon=\"pi pi-check\" class=\"p-button-rounded p-button-outlined mr-2 mb-2\"></button>\r\n\t\t\t<button pButton pRipple type=\"button\" icon=\"pi pi-bookmark\" class=\"p-button-rounded p-button-secondary p-button-outlined mr-2 mb-2\"></button>\r\n\t\t\t<button pButton pRipple type=\"button\" icon=\"pi pi-search\" class=\"p-button-rounded p-button-success p-button-outlined mr-2 mb-2\"></button>\r\n\t\t\t<button pButton pRipple type=\"button\" icon=\"pi pi-user\" class=\"p-button-rounded p-button-info p-button-outlined mr-2 mb-2\"></button>\r\n\t\t\t<button pButton pRipple type=\"button\" icon=\"pi pi-bell\" class=\"p-button-rounded p-button-warning p-button-outlined mr-2 mb-2\"></button>\r\n\t\t\t<button pButton pRipple type=\"button\" icon=\"pi pi-heart\" class=\"p-button-rounded p-button-help p-button-outlined mr-2 mb-2\"></button>\r\n\t\t\t<button pButton pRipple type=\"button\" icon=\"pi pi-times\" class=\"p-button-rounded p-button-danger p-button-outlined mr-2 mb-2\"></button>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"card\">\r\n\t\t\t<h5>Loading</h5>\r\n\t\t\t<p-button label=\"Search\" icon=\"pi pi-search\" styleClass=\"mr-2 mb-2\" [loading]=\"loading[0]\" (onClick)=\"load(0)\"></p-button>\r\n\t\t\t<p-button label=\"Search\" icon=\"pi pi-search\" iconPos=\"right\" styleClass=\"mr-2 mb-2\" [loading]=\"loading[1]\" (onClick)=\"load(1)\"></p-button>\r\n\t\t\t<p-button icon=\"pi pi-search\" styleClass=\"mr-2 mb-2\" [loading]=\"loading[2]\" (onClick)=\"load(2)\"></p-button>\r\n\t\t\t<p-button label=\"Search\" styleClass=\"mr-2 mb-2\" [loading]=\"loading[3]\" (onClick)=\"load(3)\"></p-button>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n"
        },
        {
            "name": "ButtonDeleteComponent",
            "id": "component-ButtonDeleteComponent-82bd72f1f82439347ff896ced649faf42d27c2e5600dabedb79176bf56407e98b08299ea2f384a8a18043acbe93fd1e895aec8077ba7ad42e4da38043e4a5d1e",
            "file": "src/app/core/shared-component/linov-button/button-delete/button-delete.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "btn-delete",
            "styleUrls": [
                "./button-delete.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button-delete.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "selected",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "singleData",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "isShow",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "isShowNoData",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "check",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "click",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onUpdate",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { ConfirmationService } from 'primeng/api';\r\nimport { AppConstant } from 'src/app/core/config/app.config';\r\n\r\n@Component({\r\n    selector: 'btn-delete',\r\n    templateUrl: './button-delete.component.html',\r\n    styleUrls: ['./button-delete.component.scss'],\r\n})\r\nexport class ButtonDeleteComponent {\r\n    @Output() onClick = new EventEmitter<any>();\r\n    @Input() disabled = false;\r\n    @Input() selected;\r\n    @Input() singleData = false;\r\n    isShowNoData = false;\r\n    isShow = false;\r\n    constructor(private confirmationService: ConfirmationService) {}\r\n\r\n    onUpdate() {\r\n        this.onClick.emit();\r\n    }\r\n\r\n    check() {\r\n        if (\r\n            !this.singleData &&\r\n            (!this.selected || this.selected?.length <= 0)\r\n        ) {\r\n            this.isShowNoData = true;\r\n        } else {\r\n            this.click();\r\n        }\r\n    }\r\n\r\n    click() {\r\n        this.isShow = true;\r\n        this.confirmationService.confirm({\r\n            message: AppConstant.deleteMessage,\r\n            acceptLabel: 'Ya',\r\n            rejectLabel: 'Tidak',\r\n            icon: 'c-icons reject-icon',\r\n            rejectButtonStyleClass: 'p-button-cancel-outlined-red ',\r\n            acceptButtonStyleClass: 'p-button-reject ',\r\n            accept: () => {\r\n                this.isShow = false;\r\n                this.confirmationService.close();\r\n                this.onUpdate();\r\n            },\r\n            reject: () => {\r\n                this.isShow = false;\r\n                this.confirmationService.close();\r\n            },\r\n        });\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n    ::ng-deep .p-dialog-content {\r\n        padding-top: 0;\r\n        display: flex;\r\n        flex-direction: column;\r\n        gap: 30px;\r\n        align-items: center;\r\n\r\n        .p-confirm-dialog-message {\r\n            text-align: center;\r\n        }\r\n    }\r\n\r\n    ::ng-deep .p-dialog-footer {\r\n        text-align: center;\r\n\r\n        button {\r\n            margin: 0 0.5rem 0 0.5rem;\r\n        }\r\n    }\r\n}\r\n\r\n:host ::ng-deep {\r\n    .c-icons {\r\n        width: 6rem;\r\n        height: 6rem;\r\n    }\r\n    .reject-icon {\r\n        background-image: url(\"/assets/icon/icon-reject.svg\");\r\n        background-size: contain;\r\n        background-repeat: no-repeat;\r\n    }\r\n}\r\n",
                    "styleUrl": "./button-delete.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "confirmationService",
                        "type": "ConfirmationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "confirmationService",
                        "type": "ConfirmationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<button [disabled]=\"disabled\" pButton class=\"ml-2 mb-2 p-button-danger btn-delete\" icon=\"fas fa-trash\" (click)=\"check()\"\r\n    label=\"Delete\"></button>\r\n<p-confirmDialog [hidden]=\"!isShow\" [style]=\"{width: '500px'}\" [breakpoints]=\"{'960px': '85vw'}\" [baseZIndex]=\"10000\"\r\n    [closable]=\"false\" [acceptIcon]=\"false\" [rejectIcon]=\"false\"></p-confirmDialog>\r\n<p-dialog [(visible)]=\"isShowNoData\" [modal]=\"true\" [style]=\"{width: '500px'}\" [breakpoints]=\"{'960px': '85vw'}\"\r\n    [baseZIndex]=\"10000\" [draggable]=\"false\" [resizable]=\"false\" header=\"Hapus\">\r\n    <div class=\"text-center\">\r\n        Harap pilih data\r\n    </div>\r\n    <p-footer>\r\n        <button pButton class=\"btn-primary\" (click)=\"isShowNoData = false\" label=\"Ok\"></button>\r\n    </p-footer>\r\n</p-dialog>\r\n"
        },
        {
            "name": "ButtonDownloadComponent",
            "id": "component-ButtonDownloadComponent-77f3ef642945f040a01e764d12b4318dc9a8e237c02f17b355cd18beb2823d3226ae9a3e64bf2724603db5dd421138fad08c6d3e1bce360390f5878993b3516c",
            "file": "src/app/core/shared-component/linov-button/button-download/button-download.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "btn-download",
            "styleUrls": [
                "./button-download.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button-download.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "click",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'btn-download',\r\n    templateUrl: './button-download.component.html',\r\n    styleUrls: ['./button-download.component.scss'],\r\n})\r\nexport class ButtonDownloadComponent implements OnInit {\r\n    @Input() disabled = false;\r\n    @Output() onClick = new EventEmitter<any>();\r\n    constructor() {}\r\n\r\n    ngOnInit(): void {}\r\n\r\n    click() {\r\n        this.onClick.emit();\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./button-download.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 10
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<button pButton pRipple [disabled]=\"disabled\" class=\"btn-download mb-2 ml-2\" (click)=\"click()\" label=\"Unduh\"></button>"
        },
        {
            "name": "ButtonDownloadLaporanComponent",
            "id": "component-ButtonDownloadLaporanComponent-ceba759180caf9ef22c048aeaf309603acf6bb9ad7a52f5a49d92c19a959f5268a2fd60bb07262ec689c8447fdbb04b24c5c9872b4133e2ea8fb24088eb09add",
            "file": "src/app/core/shared-component/linov-button/button-download-laporan/button-download-laporan.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "btn-download-laporan",
            "styleUrls": [
                "./button-download-laporan.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button-download-laporan.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "click",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'btn-download-laporan',\r\n    templateUrl: './button-download-laporan.component.html',\r\n    styleUrls: ['./button-download-laporan.component.scss'],\r\n})\r\nexport class ButtonDownloadLaporanComponent implements OnInit {\r\n    @Input() disabled = false;\r\n    @Output() onClick = new EventEmitter<any>();\r\n    constructor() {}\r\n\r\n    ngOnInit(): void {}\r\n\r\n    click() {\r\n        this.onClick.emit();\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./button-download-laporan.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 10
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<button pButton pRipple [disabled]=\"disabled\" class=\"p-button-rounded btn-download mb-2 ml-2\" (click)=\"click()\"\r\n  label=\"Unduh\"></button>"
        },
        {
            "name": "ButtonEditComponent",
            "id": "component-ButtonEditComponent-0e9bfc2b11578da29817441bc54795881d30a626dcf2880b6314cae9d14fab63b361248262316b2aa5e4e36f810093b1f56ef136d4c2804e5413833cf1e9e140",
            "file": "src/app/core/shared-component/linov-button/button-edit/button-edit.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "btn-edit",
            "styleUrls": [
                "./button-edit.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button-edit.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "click",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'btn-edit',\r\n  templateUrl: './button-edit.component.html',\r\n  styleUrls: ['./button-edit.component.scss']\r\n})\r\nexport class ButtonEditComponent implements OnInit {\r\n\r\n  @Input() disabled = false;\r\n  @Output() onClick = new EventEmitter<any>();\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  click() {\r\n    this.onClick.emit()\r\n}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./button-edit.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<button pButton pRipple label=\"Ubah\" [disabled]=\"disabled\" class=\"mb-2 ml-2\" (click)=\"click()\" icon=\"fas fa-pencil\"></button>\r\n"
        },
        {
            "name": "ButtonGenerateComponent",
            "id": "component-ButtonGenerateComponent-b4f80b6e05624d646be9097e7817a3ffb9fd69d7ae16d20550868ee92ee1999ad86e2785d67392d9ed936b59d52caf7b15d04c0f961f21ae76f4c11daf4dfa73",
            "file": "src/app/core/shared-component/linov-button/button-generate/button-generate.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "btn-generate",
            "styleUrls": [
                "./button-generate.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button-generate.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "click",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'btn-generate',\r\n    templateUrl: './button-generate.component.html',\r\n    styleUrls: ['./button-generate.component.scss'],\r\n})\r\nexport class ButtonGenerateComponent implements OnInit {\r\n    @Input() disabled = false;\r\n    @Output() onClick = new EventEmitter<any>();\r\n    constructor() {}\r\n\r\n    ngOnInit(): void {}\r\n\r\n    click() {\r\n        this.onClick.emit();\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./button-generate.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 10
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<button pButton pRipple [disabled]=\"disabled\" class=\"ml-2\" (click)=\"click()\" icon=\"bi bi-gear-fill\"></button>"
        },
        {
            "name": "ButtonKembaliComponent",
            "id": "component-ButtonKembaliComponent-44e10661fe379830f95ba578ead96bd7ad45ab1c1fc73d894db084d4dd367824b884fbc250d4a1f973eaa8c027368b693377377ac8e12a2dc6a5bbf436748520",
            "file": "src/app/core/shared-component/linov-button/button-kembali/button-kembali.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "btn-kembali",
            "styleUrls": [
                "./button-kembali.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button-kembali.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "isNeedConfirmation",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "routeUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "isShow",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "click",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onCancel",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ConfirmationService } from 'primeng/api';\r\nimport { AppConstant } from 'src/app/core/config/app.config';\r\n\r\n@Component({\r\n    selector: 'btn-kembali',\r\n    templateUrl: './button-kembali.component.html',\r\n    styleUrls: ['./button-kembali.component.scss'],\r\n})\r\nexport class ButtonKembaliComponent {\r\n    @Input() routeUrl;\r\n    @Input() disabled = false;\r\n    @Input() isNeedConfirmation = true;\r\n    @Output() onClick = new EventEmitter<any>();\r\n    isShow = false;\r\n    constructor(\r\n        private router: Router,\r\n        private confirmationService: ConfirmationService\r\n    ) {}\r\n\r\n    onCancel() {\r\n        if (this.routeUrl) {\r\n            this.router.navigate([this.routeUrl]);\r\n        } else {\r\n            this.onClick.emit();\r\n        }\r\n    }\r\n\r\n    click() {\r\n        if (this.isNeedConfirmation) {\r\n            this.isShow = true;\r\n            this.confirmationService.confirm({\r\n                message: AppConstant.kembaliMessage,\r\n                acceptLabel: 'Ya',\r\n                rejectLabel: 'Tidak',\r\n                icon: 'c-icons cancel-icon',\r\n                rejectButtonStyleClass: 'p-button-cancel-outlined-grey',\r\n                acceptButtonStyleClass: 'p-button-cancel ',\r\n                accept: () => {\r\n                    this.isShow = false;\r\n                    this.confirmationService.close();\r\n                    this.onCancel();\r\n                },\r\n                reject: () => {\r\n                    this.isShow = false;\r\n                    this.confirmationService.close();\r\n                },\r\n            });\r\n        } else {\r\n            this.onCancel();\r\n        }\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n    ::ng-deep .p-dialog-content {\r\n        padding-top: 0;\r\n        display: flex;\r\n        flex-direction: column;\r\n        gap: 30px;\r\n        align-items: center;\r\n\r\n        .p-confirm-dialog-message {\r\n            text-align: center;\r\n        }\r\n    }\r\n\r\n    ::ng-deep .p-dialog-footer {\r\n        text-align: center;\r\n\r\n        button {\r\n            margin: 0 0.5rem 0 0.5rem;\r\n        }\r\n    }\r\n}\r\n\r\n:host ::ng-deep {\r\n    .c-icons {\r\n        width: 6rem;\r\n        height: 6rem;\r\n    }\r\n    .cancel-icon {\r\n        background-image: url(\"/assets/icon/icon-cancel.svg\");\r\n        background-size: contain;\r\n        background-repeat: no-repeat;\r\n    }\r\n}",
                    "styleUrl": "./button-kembali.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "confirmationService",
                        "type": "ConfirmationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "confirmationService",
                        "type": "ConfirmationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<button [disabled]=\"disabled\" pButton class=\"p-button-outlined mb-2 ml-2\" icon=\"fas fa-times\" (click)=\"click()\"\r\n  label=\"Kembali\"></button>\r\n<p-confirmDialog [hidden]=\"!isShow\" [style]=\"{width: '500px'}\" [breakpoints]=\"{'960px': '85vw'}\" [baseZIndex]=\"10000\"\r\n  [closable]=\"false\" [acceptIcon]=\"false\" [rejectIcon]=\"false\">\r\n</p-confirmDialog>\r\n"
        },
        {
            "name": "ButtonMultiActionComponent",
            "id": "component-ButtonMultiActionComponent-c8a84e3e18cc47a03a7db2f7b71baa787c0182b8d9d99895303b64cbfa5f9da45518ee839032baf1afc9a8eaab2ce5b19d876be9365a23ee49fc5eb18400e956",
            "file": "src/app/core/shared-component/linov-button/button-multi-action/button-multi-action.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "btn-multi-action",
            "styleUrls": [
                "./button-multi-action.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button-multi-action.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "haveAct",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "haveAdd",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "haveApprove",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "haveAttendance",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "haveCancel",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "haveChangePass",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "haveClearAll",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "haveClose",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "haveCorrection",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "haveDeact",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "haveDel",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "haveDownload",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "haveEdit",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "haveExtend",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "havePaid",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "havePrepayment",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "haveProc",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "haveReimburse",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "haveReopen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "haveReport",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 51,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "haveResetPass",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "haveRollback",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "haveSave",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "haveShowUnassign",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "haveTerminate",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "haveUpdate",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "haveUpload",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "multiple",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 50,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "selected",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "singleAttendance",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "singleReimburse",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 55,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "isShow",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 53
                },
                {
                    "name": "isShowNoData",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 52
                },
                {
                    "name": "items",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem[]",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 54
                }
            ],
            "methodsClass": [
                {
                    "name": "click",
                    "args": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "needData",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "needConfirmation",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "icon",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "labelAccept",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "buttonStyle",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "outlined",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 449,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "needData",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "needConfirmation",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "icon",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "labelAccept",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "buttonStyle",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "outlined",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n    Component,\r\n    EventEmitter,\r\n    Input,\r\n    OnChanges,\r\n    OnInit,\r\n    Output,\r\n    SimpleChanges,\r\n} from '@angular/core';\r\nimport { ConfirmationService, MenuItem } from 'primeng/api';\r\nimport { AppConstant } from 'src/app/core/config/app.config';\r\n\r\n@Component({\r\n    selector: 'btn-multi-action',\r\n    templateUrl: './button-multi-action.component.html',\r\n    styleUrls: ['./button-multi-action.component.scss'],\r\n})\r\nexport class ButtonMultiActionComponent implements OnInit, OnChanges {\r\n    items: MenuItem[] = [];\r\n    @Input() haveAdd = false;\r\n    @Input() haveCancel = false;\r\n    @Input() haveUpdate = false;\r\n    @Input() haveSave = false;\r\n    @Input() haveDel = false;\r\n    @Input() haveAct = false;\r\n    @Input() haveDeact = false;\r\n    @Input() haveDownload = false;\r\n    @Input() haveUpload = false;\r\n    @Input() haveEdit = false;\r\n    @Input() haveProc = false;\r\n    @Input() havePaid = false;\r\n    @Input() haveClearAll = false;\r\n    @Input() haveShowUnassign = false;\r\n    @Input() haveResetPass = false;\r\n    @Input() haveChangePass = false;\r\n    @Input() haveAttendance = false;\r\n    @Input() haveReimburse = false;\r\n    @Input() selected;\r\n    @Input() disabled = false;\r\n    @Input() haveApprove = false;\r\n    @Input() singleAttendance = false;\r\n    @Input() singleReimburse = false;\r\n    @Input() haveCorrection = false;\r\n    @Input() haveRollback = false;\r\n    @Input() havePrepayment = false;\r\n    @Input() haveReopen = false;\r\n    @Input() haveClose = false;\r\n    @Input() haveExtend = false;\r\n    @Input() haveTerminate = false;\r\n    @Input() multiple = true;\r\n    @Input() haveReport = false;\r\n    isShowNoData = false;\r\n    isShow = false;\r\n    title;\r\n    @Output() onClick = new EventEmitter<any>();\r\n    constructor(private confirmationService: ConfirmationService) {}\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        this.ngOnInit();\r\n    }\r\n    ngOnInit() {\r\n        this.items = [];\r\n        if (this.haveAdd) {\r\n            this.items.push({\r\n                label: 'Tambah',\r\n                command: () => {\r\n                    this.click('add');\r\n                },\r\n            });\r\n        }\r\n        if (this.haveCancel) {\r\n            this.items.push({\r\n                label: 'Batalkan',\r\n                command: () => {\r\n                    this.click(\r\n                        'cancel',\r\n                        false,\r\n                        true,\r\n                        'c-icons cancel-icon',\r\n                        'Batal'\r\n                    );\r\n                },\r\n            });\r\n        }\r\n        if (this.haveUpdate) {\r\n            this.items.push({\r\n                label: 'Perbaharui',\r\n                command: () => {\r\n                    this.click('update', false, true);\r\n                },\r\n            });\r\n        }\r\n        if (this.haveReport) {\r\n            this.items.push({\r\n                label: 'Laporan',\r\n                command: () => {\r\n                    this.click('report');\r\n                },\r\n            });\r\n        }\r\n        if (this.haveSave) {\r\n            this.items.push({\r\n                label: 'Simpan',\r\n                command: () => {\r\n                    this.click('save');\r\n                },\r\n            });\r\n        }\r\n        if (this.haveDel) {\r\n            this.items.push({\r\n                label: 'Delete',\r\n                command: () => {\r\n                    this.click('delete', true);\r\n                },\r\n            });\r\n        }\r\n        if (this.haveEdit) {\r\n            this.items.push({\r\n                label: 'Edit',\r\n                command: () => {\r\n                    this.click('edit');\r\n                },\r\n            });\r\n        }\r\n        if (this.haveAct) {\r\n            this.items.push({\r\n                label: 'Aktifkan',\r\n                command: () => {\r\n                    this.click('activate', true, null, 'c-icons approved-icon');\r\n                },\r\n            });\r\n        }\r\n        if (this.haveDownload) {\r\n            this.items.push({\r\n                label: 'Unduh',\r\n                command: () => {\r\n                    this.click('download');\r\n                },\r\n            });\r\n        }\r\n        if (this.haveUpload) {\r\n            this.items.push({\r\n                label: 'Upload',\r\n                command: () => {\r\n                    this.click('upload');\r\n                },\r\n            });\r\n        }\r\n        if (this.haveClearAll) {\r\n            this.items.push({\r\n                label: 'Clear All',\r\n                command: () => {\r\n                    this.click('clearAll');\r\n                },\r\n            });\r\n        }\r\n        if (this.haveShowUnassign) {\r\n            this.items.push({\r\n                label: 'Unassign',\r\n                command: () => {\r\n                    this.click('showUnassign');\r\n                },\r\n            });\r\n        }\r\n        if (this.haveProc) {\r\n            this.items.push({\r\n                label: 'Process',\r\n                command: () => {\r\n                    this.click('process');\r\n                },\r\n            });\r\n        }\r\n        if (this.haveDeact) {\r\n            this.items.push({\r\n                label: 'Non Aktifkan',\r\n                command: () => {\r\n                    this.click(\r\n                        'deactivate',\r\n                        true,\r\n                        null,\r\n                        'c-icons reject-icon',\r\n                        null,\r\n                        'p-button-reject',\r\n                        true\r\n                    );\r\n                },\r\n            });\r\n        }\r\n        if (this.haveResetPass) {\r\n            this.items.push({\r\n                label: 'Reset Password',\r\n                command: () => {\r\n                    this.click(\r\n                        'resetPassword',\r\n                        false,\r\n                        true,\r\n                        'c-icons reject-icon',\r\n                        null,\r\n                        'p-button-reject',\r\n                        true\r\n                    );\r\n                },\r\n            });\r\n        }\r\n        if (this.haveCorrection) {\r\n            this.items.push({\r\n                label: 'Koreksi',\r\n                command: () => {\r\n                    this.click('correction', false);\r\n                },\r\n            });\r\n        }\r\n        if (this.havePrepayment) {\r\n            this.items.push({\r\n                label: 'Prepayment',\r\n                command: () => {\r\n                    this.click(\r\n                        'prepayment',\r\n                        false,\r\n                        true,\r\n                        'c-icons approved-icon'\r\n                    );\r\n                },\r\n            });\r\n        }\r\n        if (this.haveRollback) {\r\n            this.items.push({\r\n                label: 'Proses Ulang',\r\n                command: () => {\r\n                    this.click(\r\n                        'rollback',\r\n                        false,\r\n                        true,\r\n                        'c-icons reject-icon',\r\n                        null,\r\n                        'p-button-reject',\r\n                        true\r\n                    );\r\n                },\r\n            });\r\n        }\r\n        if (this.haveChangePass) {\r\n            this.items.push({\r\n                label: 'Ganti Password',\r\n                command: () => {\r\n                    this.click('changePassword', false);\r\n                },\r\n            });\r\n        }\r\n        if (this.haveReopen) {\r\n            this.items.push({\r\n                label: 'Buka Kembali',\r\n                command: () => {\r\n                    this.click(\r\n                        'reopen',\r\n                        false,\r\n                        true,\r\n                        'c-icons reject-icon',\r\n                        null,\r\n                        'p-button-reject',\r\n                        true\r\n                    );\r\n                },\r\n            });\r\n        }\r\n        if (this.haveClose) {\r\n            this.items.push({\r\n                label: 'Bayar & Selesai',\r\n                command: () => {\r\n                    this.click('close', false, true, 'c-icons approved-icon');\r\n                },\r\n            });\r\n        }\r\n        if (this.haveExtend) {\r\n            this.items.push({\r\n                label: 'Perpanjang',\r\n                command: () => {\r\n                    this.click(\r\n                        'extend',\r\n                        this.multiple,\r\n                        null,\r\n                        'c-icons approved-icon',\r\n                        null\r\n                    );\r\n                },\r\n            });\r\n        }\r\n        if (this.haveTerminate) {\r\n            this.items.push({\r\n                label: 'Berhentikan',\r\n                command: () => {\r\n                    this.click(\r\n                        'terminate',\r\n                        this.multiple,\r\n                        null,\r\n                        'c-icons reject-icon',\r\n                        null,\r\n                        'p-button-reject',\r\n                        true\r\n                    );\r\n                },\r\n            });\r\n        }\r\n        if (this.haveApprove) {\r\n            this.items.push(\r\n                { separator: true },\r\n                {\r\n                    label: 'Tolak',\r\n                    command: () => {\r\n                        this.click(\r\n                            'reject',\r\n                            true,\r\n                            null,\r\n                            'c-icons reject-icon',\r\n                            'Tolak',\r\n                            'p-button-reject',\r\n                            true\r\n                        );\r\n                    },\r\n                },\r\n\r\n                {\r\n                    label: 'Setuju',\r\n                    command: () => {\r\n                        this.click(\r\n                            'approve',\r\n                            true,\r\n                            null,\r\n                            'c-icons approved-icon',\r\n                            'Setuju'\r\n                        );\r\n                    },\r\n                }\r\n            );\r\n        }\r\n        if (this.havePaid) {\r\n            this.items.push({\r\n                label: 'Bayar',\r\n                command: () => {\r\n                    this.click(\r\n                        'paid',\r\n                        true,\r\n                        null,\r\n                        'c-icons payment-icon',\r\n                        'Bayar'\r\n                    );\r\n                },\r\n            });\r\n        }\r\n\r\n        if (this.haveAttendance) {\r\n            this.items.push(\r\n                { separator: true },\r\n                {\r\n                    label: 'Hadir',\r\n                    command: () => {\r\n                        this.click(\r\n                            'present',\r\n                            true,\r\n                            this.singleAttendance,\r\n                            'c-icons time-icon'\r\n                        );\r\n                    },\r\n                },\r\n\r\n                {\r\n                    label: 'Terlambat',\r\n                    command: () => {\r\n                        this.click(\r\n                            'late',\r\n                            true,\r\n                            this.singleAttendance,\r\n                            'c-icons time-icon'\r\n                        );\r\n                    },\r\n                },\r\n\r\n                {\r\n                    label: 'Pulang Cepat',\r\n                    command: () => {\r\n                        this.click(\r\n                            'earlyOut',\r\n                            true,\r\n                            this.singleAttendance,\r\n                            'c-icons time-icon'\r\n                        );\r\n                    },\r\n                },\r\n\r\n                {\r\n                    label: 'Absen',\r\n                    command: () => {\r\n                        this.click(\r\n                            'absen',\r\n                            true,\r\n                            this.singleAttendance,\r\n                            'c-icons time-icon'\r\n                        );\r\n                    },\r\n                }\r\n            );\r\n        }\r\n\r\n        if (this.haveReimburse) {\r\n            this.items.push(\r\n                { separator: true },\r\n                {\r\n                    label: 'Disetujui',\r\n                    command: () => {\r\n                        this.click(\r\n                            'Approved',\r\n                            true,\r\n                            this.singleReimburse,\r\n                            'c-icons approved-icon',\r\n                            'Setuju'\r\n                        );\r\n                    },\r\n                },\r\n\r\n                {\r\n                    label: 'Ditolak',\r\n                    command: () => {\r\n                        this.click(\r\n                            'Rejected',\r\n                            true,\r\n                            this.singleReimburse,\r\n                            'c-icons reject-icon',\r\n                            'Tolak',\r\n                            'p-button-reject',\r\n                            true\r\n                        );\r\n                    },\r\n                },\r\n\r\n                {\r\n                    label: 'Dibayarkan',\r\n                    command: () => {\r\n                        this.click(\r\n                            'Paid',\r\n                            true,\r\n                            this.singleReimburse,\r\n                            'c-icons payment-icon',\r\n                            'Bayar'\r\n                        );\r\n                    },\r\n                }\r\n            );\r\n        }\r\n    }\r\n    click(\r\n        e,\r\n        needData?,\r\n        needConfirmation?,\r\n        icon?,\r\n        labelAccept?,\r\n        buttonStyle?,\r\n        outlined?\r\n    ) {\r\n        if (needData || needConfirmation) {\r\n            if (this.selected?.length > 0 || needConfirmation) {\r\n                this.isShow = true;\r\n                this.confirmationService.confirm({\r\n                    message: AppConstant[e + 'Message'],\r\n                    acceptLabel: labelAccept ? labelAccept : 'Ya',\r\n                    rejectLabel: 'Tidak',\r\n                    icon: icon ? icon : 'bi bi-exclamation-triangle',\r\n                    rejectButtonStyleClass: outlined\r\n                        ? 'p-button-cancel-outlined-red '\r\n                        : 'p-button-cancel-outlined',\r\n                    acceptButtonStyleClass: buttonStyle\r\n                        ? buttonStyle\r\n                        : 'p-button-accept',\r\n                    accept: () => {\r\n                        this.isShow = false;\r\n                        this.confirmationService.close();\r\n                        e = e == 'earlyOut' ? 'early-out' : e;\r\n                        this.onClick.emit(e);\r\n                    },\r\n                    reject: () => {\r\n                        this.isShow = false;\r\n                        this.confirmationService.close();\r\n                    },\r\n                });\r\n            } else {\r\n                this.title = e;\r\n                this.isShowNoData = true;\r\n            }\r\n        } else {\r\n            this.onClick.emit(e);\r\n        }\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n    ::ng-deep .p-dialog-content {\r\n        padding-top: 0;\r\n        display: flex;\r\n        flex-direction: column;\r\n        gap: 30px;\r\n        align-items: center;\r\n\r\n        .p-confirm-dialog-message {\r\n            text-align: center;\r\n        }\r\n    }\r\n\r\n    ::ng-deep .p-dialog-footer {\r\n        text-align: center;\r\n\r\n        button {\r\n            margin: 0 0.5rem 0 0.5rem;\r\n        }\r\n    }\r\n}\r\n\r\n:host ::ng-deep {\r\n    .c-icons {\r\n        width: 6rem;\r\n        height: 6rem;\r\n    }\r\n\r\n    .approved-icon {\r\n        background-image: url(\"/assets/icon/icon-approved.svg\");\r\n        background-size: contain;\r\n        background-repeat: no-repeat;\r\n    }\r\n\r\n    .reject-icon {\r\n        background-image: url(\"/assets/icon/icon-reject.svg\");\r\n        background-size: contain;\r\n        background-repeat: no-repeat;\r\n    }\r\n\r\n    .cancel-icon {\r\n        background-image: url(\"/assets/icon/icon-cancel.svg\");\r\n        background-size: contain;\r\n        background-repeat: no-repeat;\r\n    }\r\n\r\n    .payment-icon {\r\n        background-image: url(\"/assets/icon/icon-payment.svg\");\r\n        background-size: contain;\r\n        background-repeat: no-repeat;\r\n    }\r\n\r\n    .time-icon {\r\n        background-image: url(\"/assets/icon/icon-attandance.svg\");\r\n        background-size: contain;\r\n        background-repeat: no-repeat;\r\n    }\r\n}\r\n",
                    "styleUrl": "./button-multi-action.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "confirmationService",
                        "type": "ConfirmationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 55,
                "jsdoctags": [
                    {
                        "name": "confirmationService",
                        "type": "ConfirmationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnChanges"
            ],
            "templateData": "<p-splitButton #sb [disabled]=\"disabled\" (onClick)=\"sb.onDropdownButtonClick(null)\" styleClass=\"ml-2 mb-2\" label=\"Aksi\"\r\n    [model]=\"items\"></p-splitButton>\r\n<p-confirmDialog [hidden]=\"!isShow\" [style]=\"{width: '550px'}\" [breakpoints]=\"{'960px': '85vw'}\" [baseZIndex]=\"10000\"\r\n    [closable]=\"false\" [acceptIcon]=\"false\" [rejectIcon]=\"false\">\r\n</p-confirmDialog>\r\n\r\n<p-dialog [(visible)]=\"isShowNoData\" [modal]=\"true\" [style]=\"{width: '500px'}\" [breakpoints]=\"{'960px': '85vw'}\"\r\n    [baseZIndex]=\"10000\" [draggable]=\"false\" [resizable]=\"false\" header=\"{{ title | translate}}\">\r\n    <div class=\"text-center\">\r\n        Harap pilih data\r\n    </div>\r\n    <p-footer>\r\n        <button pButton class=\"btn-primary\" (click)=\"isShowNoData = false\" label=\"Ok\"></button>\r\n    </p-footer>\r\n</p-dialog>"
        },
        {
            "name": "ButtonProcessComponent",
            "id": "component-ButtonProcessComponent-56d90434b7a5988e574c7c4ce21ce9f356b55ff659cfb1f7ab69a099b11deac87679a855a1a7776eb4022f174e888b52ed2cafc90fd990779b6c5bb0e451af41",
            "file": "src/app/core/shared-component/linov-button/button-process/button-process.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "btn-process",
            "styleUrls": [
                "./button-process.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button-process.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "isShow",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "click",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onUpdate",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { ConfirmationService } from 'primeng/api';\r\nimport { AppConstant } from 'src/app/core/config/app.config';\r\n\r\n@Component({\r\n    selector: 'btn-process',\r\n    templateUrl: './button-process.component.html',\r\n    styleUrls: ['./button-process.component.scss'],\r\n})\r\nexport class ButtonProcessComponent {\r\n    @Output() onClick = new EventEmitter<any>();\r\n    @Input() disabled = false;\r\n    isShow = false;\r\n    constructor(private confirmationService: ConfirmationService) {}\r\n\r\n    onUpdate() {\r\n        this.onClick.emit();\r\n    }\r\n\r\n    click() {\r\n        this.isShow = true;\r\n        this.confirmationService.confirm({\r\n            message: AppConstant.processMessage,\r\n            acceptLabel: 'Ya',\r\n            rejectLabel: 'Tidak',\r\n            icon: 'c-icons approved-icon',\r\n            rejectButtonStyleClass: 'p-button-cancel-outlined',\r\n            acceptButtonStyleClass: 'p-button-accept',\r\n            accept: () => {\r\n                this.isShow = false;\r\n                this.confirmationService.close();\r\n                this.onUpdate();\r\n            },\r\n            reject: () => {\r\n                this.isShow = false;\r\n                this.confirmationService.close();\r\n            },\r\n        });\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n    ::ng-deep .p-dialog-content {\r\n        padding-top: 0;\r\n        display: flex;\r\n        flex-direction: column;\r\n        gap: 30px;\r\n        align-items: center;\r\n\r\n        .p-confirm-dialog-message {\r\n            text-align: center;\r\n        }\r\n    }\r\n\r\n    ::ng-deep .p-dialog-footer {\r\n        text-align: center;\r\n\r\n        button {\r\n            margin: 0 0.5rem 0 0.5rem;\r\n        }\r\n    }\r\n}\r\n\r\n:host ::ng-deep {\r\n    .c-icons {\r\n        width: 6rem;\r\n        height: 6rem;\r\n    }\r\n\r\n    .approved-icon {\r\n        background-image: url(\"/assets/icon/icon-approved.svg\");\r\n        background-size: contain;\r\n        background-repeat: no-repeat;\r\n    }\r\n}\r\n",
                    "styleUrl": "./button-process.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "confirmationService",
                        "type": "ConfirmationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "confirmationService",
                        "type": "ConfirmationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<button [disabled]=\"disabled\" pButton class=\"ml-2 mb-2\" (click)=\"click()\" label=\"Proses\"></button>\r\n<p-confirmDialog [hidden]=\"!isShow\" [style]=\"{width: '500px'}\" [breakpoints]=\"{'960px': '85vw'}\" [baseZIndex]=\"10000\"\r\n  [closable]=\"false\" [acceptIcon]=\"false\" [rejectIcon]=\"false\"></p-confirmDialog>"
        },
        {
            "name": "ButtonRenewComponent",
            "id": "component-ButtonRenewComponent-9c8417582af526bc262f474ebdb9188f546132335e2256db6110aff9b203b00616513ad39045295346fcae104de8294b618eaa6c70e97e2159062ac9a76610b8",
            "file": "src/app/core/shared-component/linov-button/button-renew/button-renew.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "btn-renew",
            "styleUrls": [
                "./button-renew.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button-renew.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "isShow",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "click",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onUpdate",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { ConfirmationService } from 'primeng/api';\r\nimport { AppConstant } from 'src/app/core/config/app.config';\r\n\r\n@Component({\r\n    selector: 'btn-renew',\r\n    templateUrl: './button-renew.component.html',\r\n    styleUrls: ['./button-renew.component.scss'],\r\n})\r\nexport class ButtonRenewComponent {\r\n    @Output() onClick = new EventEmitter<any>();\r\n    @Input() disabled = false;\r\n    isShow = false;\r\n    constructor(private confirmationService: ConfirmationService) {}\r\n\r\n    onUpdate() {\r\n        this.onClick.emit();\r\n    }\r\n\r\n    click() {\r\n        this.isShow = true;\r\n        this.confirmationService.confirm({\r\n            message: AppConstant.renewMessage,\r\n            acceptLabel: 'Ya',\r\n            rejectLabel: 'Tidak',\r\n            icon: 'c-icons approved-icon',\r\n            rejectButtonStyleClass: 'p-button-cancel-outlined',\r\n            acceptButtonStyleClass: 'p-button-accept',\r\n            accept: () => {\r\n                this.isShow = false;\r\n                this.confirmationService.close();\r\n                this.onUpdate();\r\n            },\r\n            reject: () => {\r\n                this.isShow = false;\r\n                this.confirmationService.close();\r\n            },\r\n        });\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n    ::ng-deep .p-dialog-content {\r\n        padding-top: 0;\r\n        display: flex;\r\n        flex-direction: column;\r\n        gap: 30px;\r\n        align-items: center;\r\n\r\n        .p-confirm-dialog-message {\r\n            text-align: center;\r\n        }\r\n    }\r\n\r\n    ::ng-deep .p-dialog-footer {\r\n        text-align: center;\r\n\r\n        button {\r\n            margin: 0 0.5rem 0 0.5rem;\r\n        }\r\n    }\r\n}\r\n\r\n:host ::ng-deep {\r\n    .c-icons {\r\n        width: 6rem;\r\n        height: 6rem;\r\n    }\r\n\r\n    .approved-icon {\r\n        background-image: url(\"/assets/icon/icon-approved.svg\");\r\n        background-size: contain;\r\n        background-repeat: no-repeat;\r\n    }\r\n}\r\n",
                    "styleUrl": "./button-renew.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "confirmationService",
                        "type": "ConfirmationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "confirmationService",
                        "type": "ConfirmationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<button [disabled]=\"disabled\" pButton class=\"ml-2 mb-2\" icon=\"bi bi-send\" (click)=\"click()\" label=\"Kirim\"></button>\r\n<p-confirmDialog [hidden]=\"!isShow\" [style]=\"{width: '500px'}\" [breakpoints]=\"{'960px': '85vw'}\" [baseZIndex]=\"10000\"\r\n  [closable]=\"false\" [acceptIcon]=\"false\" [rejectIcon]=\"false\"></p-confirmDialog>"
        },
        {
            "name": "ButtonReportComponent",
            "id": "component-ButtonReportComponent-de6d72f2cc74354d2e68cc1a635ca2eed50b6ea5c1ba7266543703e96abe97214b89534885680a2de8cf25dc647ac8a8c64b6b3318bcbe3a5dc77cce5b77a2ec",
            "file": "src/app/core/shared-component/linov-button/button-report/button-report.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "btn-report",
            "styleUrls": [
                "./button-report.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button-report.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "click",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'btn-report',\r\n    templateUrl: './button-report.component.html',\r\n    styleUrls: ['./button-report.component.scss'],\r\n})\r\nexport class ButtonReportComponent implements OnInit {\r\n    @Input() disabled = false;\r\n    @Output() onClick = new EventEmitter<any>();\r\n    constructor() {}\r\n\r\n    ngOnInit(): void {}\r\n\r\n    click() {\r\n        this.onClick.emit();\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./button-report.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 10
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<button pButton pRipple label=\"Laporan\" [disabled]=\"disabled\" class=\"mb-2 ml-2\" (click)=\"click()\"></button>"
        },
        {
            "name": "ButtonSaveComponent",
            "id": "component-ButtonSaveComponent-1f9da396236c724dad4f50bfd027f186c95cdb5e93300eaa1eee59afb592e3527bb445776fba54ab18d18e81bc14ddf7d52c10d34754fd7ad8dabe8855dfa404",
            "file": "src/app/core/shared-component/linov-button/button-save/button-save.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "btn-save",
            "styleUrls": [
                "./button-save.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button-save.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "click",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'btn-save',\r\n  templateUrl: './button-save.component.html',\r\n  styleUrls: ['./button-save.component.scss']\r\n})\r\nexport class ButtonSaveComponent implements OnInit {\r\n\r\n  @Input() disabled = false;\r\n  @Output() onClick = new EventEmitter<any>();\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  click(){\r\n    this.onClick.emit();\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./button-save.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<button pButton pRipple label=\"Save\" [disabled]=\"disabled\" class=\"mb-2 ml-2\" (click)=\"click()\" icon=\"fas fa-save\"></button>\r\n"
        },
        {
            "name": "ButtonSendComponent",
            "id": "component-ButtonSendComponent-1730470f0928fcd544c165f188a030006ebc6dc6d8660bac4ad59cba6e0a84e04f4310daa2028884fa4c20ff6efb28873802651d542490dd4798e68692d348cc",
            "file": "src/app/core/shared-component/linov-button/button-send/button-send.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "btn-send",
            "styleUrls": [
                "./button-send.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button-send.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "isShow",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "click",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onUpdate",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { ConfirmationService } from 'primeng/api';\r\nimport { AppConstant } from 'src/app/core/config/app.config';\r\n\r\n@Component({\r\n    selector: 'btn-send',\r\n    templateUrl: './button-send.component.html',\r\n    styleUrls: ['./button-send.component.scss'],\r\n})\r\nexport class ButtonSendComponent {\r\n    @Output() onClick = new EventEmitter<any>();\r\n    @Input() disabled = false;\r\n    isShow = false;\r\n    constructor(private confirmationService: ConfirmationService) {}\r\n\r\n    onUpdate() {\r\n        this.onClick.emit();\r\n    }\r\n\r\n    click() {\r\n        this.isShow = true;\r\n        this.confirmationService.confirm({\r\n            message: AppConstant.sendMessage,\r\n            acceptLabel: 'Ya',\r\n            rejectLabel: 'Tidak',\r\n            icon: 'c-icons approved-icon',\r\n            rejectButtonStyleClass: 'p-button-cancel-outlined',\r\n            acceptButtonStyleClass: 'p-button-accept',\r\n            accept: () => {\r\n                this.isShow = false;\r\n                this.confirmationService.close();\r\n                this.onUpdate();\r\n            },\r\n            reject: () => {\r\n                this.isShow = false;\r\n                this.confirmationService.close();\r\n            },\r\n        });\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n    ::ng-deep .p-dialog-content {\r\n        padding-top: 0;\r\n        display: flex;\r\n        flex-direction: column;\r\n        gap: 30px;\r\n        align-items: center;\r\n\r\n        .p-confirm-dialog-message {\r\n            text-align: center;\r\n        }\r\n    }\r\n\r\n    ::ng-deep .p-dialog-footer {\r\n        text-align: center;\r\n\r\n        button {\r\n            margin: 0 0.5rem 0 0.5rem;\r\n        }\r\n    }\r\n}\r\n\r\n:host ::ng-deep {\r\n    .c-icons {\r\n        width: 6rem;\r\n        height: 6rem;\r\n    }\r\n\r\n    .approved-icon {\r\n        background-image: url(\"/assets/icon/icon-approved.svg\");\r\n        background-size: contain;\r\n        background-repeat: no-repeat;\r\n    }\r\n}\r\n",
                    "styleUrl": "./button-send.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "confirmationService",
                        "type": "ConfirmationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "confirmationService",
                        "type": "ConfirmationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<button [disabled]=\"disabled\" pButton class=\"ml-2 mb-2\" icon=\"bi bi-send\" (click)=\"click()\" label=\"Kirim\"></button>\r\n<p-confirmDialog [hidden]=\"!isShow\" [style]=\"{width: '500px'}\" [breakpoints]=\"{'960px': '85vw'}\" [baseZIndex]=\"10000\"\r\n  [closable]=\"false\" [acceptIcon]=\"false\" [rejectIcon]=\"false\"></p-confirmDialog>"
        },
        {
            "name": "ButtonTerminateComponent",
            "id": "component-ButtonTerminateComponent-5be4385b5ce04155d24bf16e3431ea31159c451842533ee4ab8102169e031eeb236da9adcc6f9bd9c77f6a959927cfec16aca35bcca3c43457396c3f330272c5",
            "file": "src/app/core/shared-component/linov-button/button-terminate/button-terminate.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "btn-terminate",
            "styleUrls": [
                "./button-terminate.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button-terminate.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "selected",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "singleData",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "isShow",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "isShowNoData",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "check",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "click",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onUpdate",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { ConfirmationService } from 'primeng/api';\r\nimport { AppConstant } from 'src/app/core/config/app.config';\r\n\r\n@Component({\r\n    selector: 'btn-terminate',\r\n    templateUrl: './button-terminate.component.html',\r\n    styleUrls: ['./button-terminate.component.scss'],\r\n})\r\nexport class ButtonTerminateComponent {\r\n    @Output() onClick = new EventEmitter<any>();\r\n    @Input() disabled = false;\r\n    @Input() selected;\r\n    @Input() singleData = false;\r\n    isShowNoData = false;\r\n    isShow = false;\r\n    constructor(private confirmationService: ConfirmationService) {}\r\n\r\n    onUpdate() {\r\n        this.onClick.emit();\r\n    }\r\n\r\n    check() {\r\n        if (\r\n            !this.singleData &&\r\n            (!this.selected || this.selected?.length <= 0)\r\n        ) {\r\n            this.isShowNoData = true;\r\n        } else {\r\n            this.click();\r\n        }\r\n    }\r\n\r\n    click() {\r\n        this.isShow = true;\r\n        this.confirmationService.confirm({\r\n            message: AppConstant.terminateMessage,\r\n            acceptLabel: 'Ya',\r\n            rejectLabel: 'Tidak',\r\n            icon: 'c-icons reject-icon',\r\n            rejectButtonStyleClass: 'p-button-cancel-outlined-red ',\r\n            acceptButtonStyleClass: 'p-button-reject ',\r\n            accept: () => {\r\n                this.isShow = false;\r\n                this.confirmationService.close();\r\n                this.onUpdate();\r\n            },\r\n            reject: () => {\r\n                this.isShow = false;\r\n                this.confirmationService.close();\r\n            },\r\n        });\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n    ::ng-deep .p-dialog-content {\r\n        padding-top: 0;\r\n        display: flex;\r\n        flex-direction: column;\r\n        gap: 30px;\r\n        align-items: center;\r\n\r\n        .p-confirm-dialog-message {\r\n            text-align: center;\r\n        }\r\n    }\r\n\r\n    ::ng-deep .p-dialog-footer {\r\n        text-align: center;\r\n\r\n        button {\r\n            margin: 0 0.5rem 0 0.5rem;\r\n        }\r\n    }\r\n}\r\n\r\n:host ::ng-deep {\r\n    .c-icons {\r\n        width: 6rem;\r\n        height: 6rem;\r\n    }\r\n    .reject-icon {\r\n        background-image: url(\"/assets/icon/icon-reject.svg\");\r\n        background-size: contain;\r\n        background-repeat: no-repeat;\r\n    }\r\n}\r\n",
                    "styleUrl": "./button-terminate.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "confirmationService",
                        "type": "ConfirmationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "confirmationService",
                        "type": "ConfirmationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<button [disabled]=\"disabled\" pButton class=\"ml-2 mb-2 p-button-danger\" icon=\"fas fa-ban\" (click)=\"check()\"\r\n    label=\"Berhenti\"></button>\r\n<p-confirmDialog [hidden]=\"!isShow\" [style]=\"{width: '500px'}\" [breakpoints]=\"{'960px': '85vw'}\" [baseZIndex]=\"10000\"\r\n    [closable]=\"false\" [acceptIcon]=\"false\" [rejectIcon]=\"false\"></p-confirmDialog>\r\n<p-dialog [(visible)]=\"isShowNoData\" [modal]=\"true\" [style]=\"{width: '500px'}\" [breakpoints]=\"{'960px': '85vw'}\"\r\n    [baseZIndex]=\"10000\" [draggable]=\"false\" [resizable]=\"false\" header=\"Berhenti\">\r\n    <div class=\"text-center\">\r\n        Harap pilih data\r\n    </div>\r\n    <p-footer>\r\n        <button pButton class=\"btn-primary\" (click)=\"isShowNoData = false\" label=\"Ok\"></button>\r\n    </p-footer>\r\n</p-dialog>\r\n"
        },
        {
            "name": "ButtonUpdateComponent",
            "id": "component-ButtonUpdateComponent-d2a17fefe338a01020464a19212e8bfa08c9360b3fd1911f69160d90ca2654d808790d6b6e88f718b8ecb095af1b86fef00391399d8056b2b533368cb8119d91",
            "file": "src/app/core/shared-component/linov-button/button-update/button-update.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "btn-update",
            "styleUrls": [
                "./button-update.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button-update.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "isShow",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "click",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onUpdate",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { ConfirmationService } from 'primeng/api';\r\nimport { AppConstant } from 'src/app/core/config/app.config';\r\n\r\n@Component({\r\n    selector: 'btn-update',\r\n    templateUrl: './button-update.component.html',\r\n    styleUrls: ['./button-update.component.scss'],\r\n})\r\nexport class ButtonUpdateComponent {\r\n    @Output() onClick = new EventEmitter<any>();\r\n    @Input() disabled = false;\r\n    isShow = false;\r\n    constructor(private confirmationService: ConfirmationService) {}\r\n\r\n    onUpdate() {\r\n        this.onClick.emit();\r\n    }\r\n\r\n    click() {\r\n        this.isShow = true;\r\n        this.confirmationService.confirm({\r\n            message: AppConstant.updateMessage,\r\n            acceptLabel: 'Ya',\r\n            rejectLabel: 'Tidak',\r\n            icon: 'c-icons approved-icon',\r\n            rejectButtonStyleClass: 'p-button-cancel-outlined',\r\n            acceptButtonStyleClass: 'p-button-accept',\r\n            accept: () => {\r\n                this.isShow = false;\r\n                this.confirmationService.close();\r\n                this.onUpdate();\r\n            },\r\n            reject: () => {\r\n                this.isShow = false;\r\n                this.confirmationService.close();\r\n            },\r\n        });\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n    ::ng-deep .p-dialog-content {\r\n        padding-top: 0;\r\n        display: flex;\r\n        flex-direction: column;\r\n        gap: 30px;\r\n        align-items: center;\r\n\r\n        .p-confirm-dialog-message {\r\n            text-align: center;\r\n        }\r\n    }\r\n\r\n    ::ng-deep .p-dialog-footer {\r\n        text-align: center;\r\n\r\n        button {\r\n            margin: 0 0.5rem 0 0.5rem;\r\n        }\r\n    }\r\n}\r\n\r\n:host ::ng-deep {\r\n    .c-icons {\r\n        width: 6rem;\r\n        height: 6rem;\r\n    }\r\n\r\n    .approved-icon {\r\n        background-image: url(\"/assets/icon/icon-approved.svg\");\r\n        background-size: contain;\r\n        background-repeat: no-repeat;\r\n    }\r\n}\r\n",
                    "styleUrl": "./button-update.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "confirmationService",
                        "type": "ConfirmationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "confirmationService",
                        "type": "ConfirmationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<button [disabled]=\"disabled\" pButton class=\"ml-2 mb-2\" (click)=\"click()\" label=\"Simpan\"></button>\r\n<p-confirmDialog [hidden]=\"!isShow\" [style]=\"{width: '500px'}\" [breakpoints]=\"{'960px': '85vw'}\" [baseZIndex]=\"10000\"\r\n  [closable]=\"false\" [acceptIcon]=\"false\" [rejectIcon]=\"false\"></p-confirmDialog>"
        },
        {
            "name": "ChartsComponent",
            "id": "component-ChartsComponent-263c0e8faebe4d37027ca5a8e735e9b7504cc41504f2e7dd56046b74dbd3226b1e2e1849d72e90cbf4f3e6fed4f699c4ad717552ccaaa375f19139d917e21256",
            "file": "src/app/showcase/components/charts/charts.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./charts.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "barData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "barOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "config",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AppConfig",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "configService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ConfigService",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "lineData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "lineOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "pieData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "pieOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "polarData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "polarOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "radarData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "radarOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "subscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 33
                }
            ],
            "methodsClass": [
                {
                    "name": "applyDarkTheme",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 267,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "applyLightTheme",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 164,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 369,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateChartOptions",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 157,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { AppConfig } from '../../api/appconfig';\r\nimport { ConfigService } from '../../service/app.config.service';\r\n\r\n@Component({\r\n    templateUrl: './charts.component.html'\r\n})\r\nexport class ChartsComponent implements OnInit, OnDestroy {\r\n\r\n    lineData: any;\r\n\r\n    barData: any;\r\n\r\n    pieData: any;\r\n\r\n    polarData: any;\r\n\r\n    radarData: any;\r\n\r\n    lineOptions: any;\r\n\r\n    barOptions: any;\r\n\r\n    pieOptions: any;\r\n\r\n    polarOptions: any;\r\n\r\n    radarOptions: any;\r\n\r\n    config: AppConfig;\r\n\r\n    subscription: Subscription;\r\n    \r\n    constructor(public configService: ConfigService) { }\r\n\r\n    ngOnInit() {\r\n        this.config = this.configService.config;\r\n        this.subscription = this.configService.configUpdate$.subscribe(config => {\r\n            this.config = config;\r\n            this.updateChartOptions();\r\n        });\r\n\r\n        this.lineData = {\r\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n            datasets: [\r\n                {\r\n                    label: 'First Dataset',\r\n                    data: [65, 59, 80, 81, 56, 55, 40],\r\n                    fill: false,\r\n                    backgroundColor: '#2f4860',\r\n                    borderColor: '#2f4860',\r\n                    tension: .4\r\n                },\r\n                {\r\n                    label: 'Second Dataset',\r\n                    data: [28, 48, 40, 19, 86, 27, 90],\r\n                    fill: false,\r\n                    backgroundColor: '#00bb7e',\r\n                    borderColor: '#00bb7e',\r\n                    tension: .4\r\n                }\r\n            ]\r\n        };\r\n\r\n        this.barData = {\r\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n            datasets: [\r\n                {\r\n                    label: 'My First dataset',\r\n                    backgroundColor: '#2f4860',\r\n                    data: [65, 59, 80, 81, 56, 55, 40]\r\n                },\r\n                {\r\n                    label: 'My Second dataset',\r\n                    backgroundColor: '#00bb7e',\r\n                    data: [28, 48, 40, 19, 86, 27, 90]\r\n                }\r\n            ]\r\n        };\r\n\r\n        this.pieData = {\r\n            labels: ['A', 'B', 'C'],\r\n            datasets: [\r\n                {\r\n                    data: [300, 50, 100],\r\n                    backgroundColor: [\r\n                        \"#FF6384\",\r\n                        \"#36A2EB\",\r\n                        \"#FFCE56\"\r\n                    ],\r\n                    hoverBackgroundColor: [\r\n                        \"#FF6384\",\r\n                        \"#36A2EB\",\r\n                        \"#FFCE56\"\r\n                    ]\r\n                }\r\n            ]\r\n        };\r\n\r\n        this.polarData = {\r\n            datasets: [{\r\n                data: [\r\n                    11,\r\n                    16,\r\n                    7,\r\n                    3,\r\n                    14\r\n                ],\r\n                backgroundColor: [\r\n                    \"#FF6384\",\r\n                    \"#4BC0C0\",\r\n                    \"#FFCE56\",\r\n                    \"#E7E9ED\",\r\n                    \"#36A2EB\"\r\n                ],\r\n                label: 'My dataset'\r\n            }],\r\n            labels: [\r\n                \"Red\",\r\n                \"Green\",\r\n                \"Yellow\",\r\n                \"Grey\",\r\n                \"Blue\"\r\n            ]\r\n        };\r\n\r\n        this.radarData = {\r\n            labels: ['Eating', 'Drinking', 'Sleeping', 'Designing', 'Coding', 'Cycling', 'Running'],\r\n            datasets: [\r\n                {\r\n                    label: 'My First dataset',\r\n                    backgroundColor: 'rgba(179,181,198,0.2)',\r\n                    borderColor: 'rgba(179,181,198,1)',\r\n                    pointBackgroundColor: 'rgba(179,181,198,1)',\r\n                    pointBorderColor: '#fff',\r\n                    pointHoverBackgroundColor: '#fff',\r\n                    pointHoverBorderColor: 'rgba(179,181,198,1)',\r\n                    data: [65, 59, 90, 81, 56, 55, 40]\r\n                },\r\n                {\r\n                    label: 'My Second dataset',\r\n                    backgroundColor: 'rgba(255,99,132,0.2)',\r\n                    borderColor: 'rgba(255,99,132,1)',\r\n                    pointBackgroundColor: 'rgba(255,99,132,1)',\r\n                    pointBorderColor: '#fff',\r\n                    pointHoverBackgroundColor: '#fff',\r\n                    pointHoverBorderColor: 'rgba(255,99,132,1)',\r\n                    data: [28, 48, 40, 19, 96, 27, 100]\r\n                }\r\n            ]\r\n        };\r\n\r\n        this.updateChartOptions();\r\n    }\r\n\r\n    updateChartOptions() {\r\n        if (this.config.dark)\r\n            this.applyDarkTheme();\r\n        else\r\n            this.applyLightTheme();\r\n    }\r\n\r\n    applyLightTheme() {\r\n        this.lineOptions = {\r\n            plugins: {\r\n                legend: {\r\n                    labels: {\r\n                        color: '#495057'\r\n                    }\r\n                }\r\n            },\r\n            scales: {\r\n                x: {\r\n                    ticks: {\r\n                        color: '#495057'\r\n                    },\r\n                    grid: {\r\n                        color:  '#ebedef',\r\n                    }\r\n                },\r\n                y: {\r\n                    ticks: {\r\n                        color: '#495057'\r\n                    },\r\n                    grid: {\r\n                        color:  '#ebedef',\r\n                    }\r\n                },\r\n            }\r\n        };\r\n\r\n        this.barOptions = {\r\n            plugins: {\r\n                legend: {\r\n                    labels: {\r\n                        color: '#495057'\r\n                    }\r\n                }\r\n            },\r\n            scales: {\r\n                x: {\r\n                    ticks: {\r\n                        color: '#495057'\r\n                    },\r\n                    grid: {\r\n                        color:  '#ebedef',\r\n                    }\r\n                },\r\n                y: {\r\n                    ticks: {\r\n                        color: '#495057'\r\n                    },\r\n                    grid: {\r\n                        color:  '#ebedef',\r\n                    }\r\n                },\r\n            }\r\n        };\r\n\r\n        this.pieOptions = {\r\n            plugins: {\r\n                legend: {\r\n                    labels: {\r\n                        color: '#495057'\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        this.polarOptions = {\r\n            plugins: {\r\n                legend: {\r\n                    labels: {\r\n                        color: '#495057'\r\n                    }\r\n                }\r\n            },\r\n            scales: {\r\n                r: {\r\n                    grid: {\r\n                        color: '#ebedef'\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        this.radarOptions = {\r\n            plugins: {\r\n                legend: {\r\n                    labels: {\r\n                        color: '#495057'\r\n                    }\r\n                }\r\n            },\r\n            scales: {\r\n                r: {\r\n                    grid: {\r\n                        color: '#ebedef'\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n    }\r\n\r\n    applyDarkTheme() {\r\n        this.lineOptions = {\r\n            plugins: {\r\n                legend: {\r\n                    labels: {\r\n                        color: '#ebedef'\r\n                    }\r\n                }\r\n            },\r\n            scales: {\r\n                x: {\r\n                    ticks: {\r\n                        color: '#ebedef'\r\n                    },\r\n                    grid: {\r\n                        color:  'rgba(160, 167, 181, .3)',\r\n                    }\r\n                },\r\n                y: {\r\n                    ticks: {\r\n                        color: '#ebedef'\r\n                    },\r\n                    grid: {\r\n                        color:  'rgba(160, 167, 181, .3)',\r\n                    }\r\n                },\r\n            }\r\n        };\r\n\r\n        this.barOptions = {\r\n            plugins: {\r\n                legend: {\r\n                    labels: {\r\n                        color: '#ebedef'\r\n                    }\r\n                }\r\n            },\r\n            scales: {\r\n                x: {\r\n                    ticks: {\r\n                        color: '#ebedef'\r\n                    },\r\n                    grid: {\r\n                        color:  'rgba(160, 167, 181, .3)',\r\n                    }\r\n                },\r\n                y: {\r\n                    ticks: {\r\n                        color: '#ebedef'\r\n                    },\r\n                    grid: {\r\n                        color:  'rgba(160, 167, 181, .3)',\r\n                    }\r\n                },\r\n            }\r\n        };\r\n\r\n        this.pieOptions = {\r\n            plugins: {\r\n                legend: {\r\n                    labels: {\r\n                        color: '#ebedef'\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        this.polarOptions = {\r\n            plugins: {\r\n                legend: {\r\n                    labels: {\r\n                        color: '#ebedef'\r\n                    }\r\n                }\r\n            },\r\n            scales: {\r\n                r: {\r\n                    grid: {\r\n                        color: 'rgba(160, 167, 181, .3)'\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        this.radarOptions = {\r\n            plugins: {\r\n                legend: {\r\n                    labels: {\r\n                        color: '#ebedef'\r\n                    }\r\n                }\r\n            },\r\n            scales: {\r\n                r: {\r\n                    grid: {\r\n                        color: 'rgba(160, 167, 181, .3)'\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.subscription) {\r\n            this.subscription.unsubscribe();\r\n        }\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "configService",
                        "type": "ConfigService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 33,
                "jsdoctags": [
                    {
                        "name": "configService",
                        "type": "ConfigService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<div class=\"grid p-fluid\">\r\n    <div class=\"col-12 lg:col-6\">\r\n        <div class=\"card\">\r\n            <h5>Linear Chart</h5>\r\n            <p-chart type=\"line\" [data]=\"lineData\" [options]=\"lineOptions\" [style]=\"{'width': '50%'}\"></p-chart>\r\n        </div>\r\n\r\n        <div class=\"card flex flex-column align-items-center\">\r\n            <h5>Pie Chart</h5>\r\n            <p-chart type=\"pie\" [data]=\"pieData\" [options]=\"pieOptions\" [style]=\"{'width': '50%'}\"></p-chart>\r\n        </div>\r\n\r\n        <div class=\"card flex flex-column align-items-center\">\r\n            <h5>Polar Area Chart</h5>\r\n            <p-chart type=\"polarArea\" [data]=\"polarData\" [options]=\"polarOptions\" [style]=\"{'width': '50%'}\"></p-chart>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-12 lg:col-6\">\r\n        <div class=\"card\">\r\n            <h5>Bar Chart</h5>\r\n            <p-chart type=\"bar\" [data]=\"barData\" [options]=\"barOptions\"></p-chart>\r\n        </div>\r\n\r\n        <div class=\"card flex flex-column align-items-center\">\r\n            <h5>Doughnut Chart</h5>\r\n            <p-chart type=\"doughnut\" [data]=\"pieData\" [options]=\"pieOptions\" [style]=\"{'width': '50%'}\"></p-chart>\r\n        </div>\r\n\r\n        <div class=\"card flex flex-column align-items-center\">\r\n            <h5>Radar Chart</h5>\r\n            <p-chart type=\"radar\" [data]=\"radarData\" [options]=\"radarOptions\" [style]=\"{'width': '50%'}\"></p-chart>\r\n        </div>\r\n    </div>\r\n</div>\r\n"
        },
        {
            "name": "CheckboxAllComponent",
            "id": "component-CheckboxAllComponent-ae27d7cd52a6a21365215a49a50b6c649b8bd2ce74e5e8c65abc964ea629d9f283a9d8faff206815bc3ec98e7956d3883aaf3af8c9e6650098daafba070e0294",
            "file": "src/app/core/shared-component/checkbox-all/checkbox-all.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-checkbox-all",
            "styleUrls": [
                "./checkbox-all.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./checkbox-all.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "checked",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-checkbox-all',\n    templateUrl: './checkbox-all.component.html',\n    styleUrls: ['./checkbox-all.component.scss'],\n})\nexport class CheckboxAllComponent {\n    checked: boolean = false;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./checkbox-all.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<p-checkbox [(ngModel)]=\"checked\" [binary]=\"true\" inputId=\"binary\">\n</p-checkbox>\n<label>Select All</label>\n"
        },
        {
            "name": "CheckboxComponent",
            "id": "component-CheckboxComponent-a642ed09c7ef269435279d50473fac8acddb9eecb5d0314b9a098ffd6ec63457c218a3695a5f73ccfc9ad44374dd55b80807f7a88bf8a281fde65147cbc845d8",
            "file": "src/stories/primeng/controls/checkbox/checkbox.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "checkbox-custom",
            "styleUrls": [
                "./checkbox.component.css"
            ],
            "styles": [],
            "template": "<div [ngClass]=\"isVertical ? 'vertical' : 'horizontal'\">\n    <p-checkbox\n        *ngFor=\"let item of items\"\n        [label]=\"item.label\"\n        [value]=\"item.value\"\n        [(ngModel)]=\"selected\"\n        (onChange)=\"onChange()\"\n        >\n    </p-checkbox>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "isVertical",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "items",
                    "defaultValue": "[\r\n        {label : '1', value : '1'},\r\n        {label : '2', value : '2'},\r\n    ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "any[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "select",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "selected",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 27
                }
            ],
            "methodsClass": [
                {
                    "name": "onChange",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: 'checkbox-custom',\r\n    template: `\r\n    <div [ngClass]=\"isVertical ? 'vertical' : 'horizontal'\">\r\n        <p-checkbox\r\n            *ngFor=\"let item of items\"\r\n            [label]=\"item.label\"\r\n            [value]=\"item.value\"\r\n            [(ngModel)]=\"selected\"\r\n            (onChange)=\"onChange()\"\r\n            >\r\n        </p-checkbox>\r\n    </div>\r\n    `,\r\n    styleUrls: ['./checkbox.component.css']\r\n})\r\n\r\nexport class CheckboxComponent{\r\n    @Input() items: any[] = [\r\n        {label : '1', value : '1'},\r\n        {label : '2', value : '2'},\r\n    ];\r\n    @Input() isVertical : boolean = true;\r\n    @Output() select = new EventEmitter<any>();\r\n    selected: any[];\r\n\r\n    onChange(){\r\n        this.select.emit(this.selected);\r\n    }\r\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host ::ng-deep .p-element{\r\n    margin-right: 0.7em;\r\n    margin-bottom: 0.7em;\r\n}\r\n\r\n:host ::ng-deep .p-element.p-icon-wrapper{\r\n    margin-right: unset;\r\n    margin-bottom: unset;\r\n}\r\n\r\n:host ::ng-deep .p-checkbox-box{\r\n    width: 20px;\r\n    height: 20px;\r\n    border: 1px solid #9F9F9F;\r\n    border-radius: 3px;\r\n}\r\n\r\n:host ::ng-deep .p-checkbox-label{\r\n    font-size: 14px;\r\n    font-weight: 400;\r\n    color: #656565;\r\n    margin-left: 0.1em;\r\n}\r\n\r\ndiv.horizontal{\r\n    display: flex;\r\n    flex-direction: row;\r\n}\r\n\r\ndiv.vertical{\r\n    display: flex;\r\n    flex-direction: column;\r\n}\r\n\r\n",
                    "styleUrl": "./checkbox.component.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "ConfirmationComponent",
            "id": "component-ConfirmationComponent-69b7dad74f3df45cb7c5c0cf5c2802f10b5975ce5fd3b22957d1ac0ca55fd9eb43151c39e98c3d04579206be5cb94644637524e61106b7f4b46868ae184a62d0",
            "file": "src/app/showcase/components/menus/confirmation.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-confirmation",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"flex flex-column align-items-center justify-content-center h-full py-5 px-3\">\n  <i class=\"pi pi-fw pi-check mr-2 text-2xl\"></i>\n  <p class=\"m-0 mt-5 text-center text-lg\">Confirmation Component Content via Child Route</p>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-confirmation',\r\n  template: `\r\n  <div class=\"flex flex-column align-items-center justify-content-center h-full py-5 px-3\">\r\n    <i class=\"pi pi-fw pi-check mr-2 text-2xl\"></i>\r\n    <p class=\"m-0 mt-5 text-center text-lg\">Confirmation Component Content via Child Route</p>\r\n  </div>\r\n  `\r\n})\r\nexport class ConfirmationComponent {\r\n\r\n  constructor() { }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 12
            }
        },
        {
            "name": "ConfirmationDashboardComponent",
            "id": "component-ConfirmationDashboardComponent-40313553ec2150b3917026612c540e4160e61510770c61d289a2e6437c2815c56fc7862fb3efc4b8e2d8d5016d198744190de01a9e138f26d985d0f7288d066a",
            "file": "src/app/core/dashboard/component/confirmation-dashboard/confirmation-dashboard.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-confirmation-dashboard",
            "styleUrls": [
                "./confirmation-dashboard.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./confirmation-dashboard.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dictionary",
                    "defaultValue": "{\r\n    'Sakit':{url:'time/request/edit/',haveId:true},\r\n    'Lembur':{url:'time/request/edit/',haveId:true},\r\n    'Cuti':{url:'time/request/edit/',haveId:true},\r\n    'Gaji Instan':{url:'ewa/request',haveId:false},\r\n    'Penggantian':{url:'reimburse/request/edit/',haveId:true},\r\n    'Pinjaman':{url:'loan/request',haveId:false},\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "list",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "goTo",
                    "args": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { DashboardService } from '../../service/dashboard.service';\r\n\r\n@Component({\r\n  selector: 'app-confirmation-dashboard',\r\n  templateUrl: './confirmation-dashboard.component.html',\r\n  styleUrls: ['./confirmation-dashboard.component.scss']\r\n})\r\nexport class ConfirmationDashboardComponent implements OnInit {\r\n  list=[];\r\n  loading=false;\r\n  dictionary={\r\n    'Sakit':{url:'time/request/edit/',haveId:true},\r\n    'Lembur':{url:'time/request/edit/',haveId:true},\r\n    'Cuti':{url:'time/request/edit/',haveId:true},\r\n    'Gaji Instan':{url:'ewa/request',haveId:false},\r\n    'Penggantian':{url:'reimburse/request/edit/',haveId:true},\r\n    'Pinjaman':{url:'loan/request',haveId:false},\r\n  }\r\n  constructor(private api:DashboardService,private router:Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.api.getConfirmation().toPromise().then(res=>{\r\n      this.list=res;\r\n    })\r\n  }\r\n  goTo(e){\r\n    let obj = this.dictionary[e.type];\r\n    this.router.navigate([obj.url + (obj.haveId ? e.id : '') ]);\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./confirmation-dashboard.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "api",
                        "type": "DashboardService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 20,
                "jsdoctags": [
                    {
                        "name": "api",
                        "type": "DashboardService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"grid field p-fluid\">\r\n    <div class=\"col-12 md:col-8\">\r\n      <h5 class=\"pt-2\">Menunggu Konfirmasi</h5>\r\n    </div>\r\n</div>\r\n\r\n<p-table [value]=\"list\" [rows]=\"10\"  [loading]=\"loading\" styleClass=\"p-datatable-gridlines\" responsiveLayout=\"scroll\" scrollHeight=\"250px\" [paginator]=\"true\" pageLinks=\"3\">\r\n<ng-template pTemplate=\"header\">\r\n    <tr>\r\n        <th>\r\n            <div class=\"flex justify-content-between align-items-center\">\r\n                No\r\n            </div>\r\n        </th>\r\n        <th>\r\n            <div class=\"flex justify-content-between align-items-center\">\r\n                Nama Karyawan\r\n            </div>\r\n        </th>\r\n        <th>\r\n            <div class=\"flex justify-content-between align-items-center\">\r\n                Tipe Permintaan\r\n            </div>\r\n        </th>\r\n        <th>\r\n            <div class=\"flex justify-content-between align-items-center\">\r\n                Tanggal Permintaan \r\n            </div>\r\n        </th>\r\n    </tr>\r\n</ng-template>\r\n<ng-template pTemplate=\"body\" let-data let-rowIndex=\"rowIndex\">\r\n    <tr>\r\n        <td  style=\"min-width: 3rem;\">\r\n            {{rowIndex+1}}\r\n        </td>\r\n        <td  style=\"min-width: 12rem;\">\r\n            {{data?.name}}\r\n        </td>\r\n        <td  style=\"min-width: 12rem;\">\r\n            {{data?.type}}\r\n        </td>\r\n        <td  style=\"min-width: 12rem;\">\r\n            {{data?.date}}\r\n        </td>\r\n    </tr>\r\n</ng-template>\r\n<ng-template pTemplate=\"emptymessage\">\r\n    <tr>\r\n        <td class=\"text-center\" colspan=\"4\" style=\"height: 180px;\">No data found.</td>\r\n    </tr>\r\n</ng-template>\r\n<ng-template pTemplate=\"loadingbody\">\r\n    <tr>\r\n        <td class=\"text-center\" colspan=\"4\">Loading data. Please wait.</td>\r\n    </tr>\r\n</ng-template>\r\n</p-table>"
        },
        {
            "name": "CrudComponent",
            "id": "component-CrudComponent-b7f86f96a438ee521785c5ec03093a97c7768891223cd3d6a4af49fb77e5a3e1951278ad8c4874893209a5225d8c77d4e5a47cee589fe390a30efccb85fef2c7",
            "file": "src/app/showcase/components/crud/crud.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "MessageService",
                    "type": "injectable"
                },
                {
                    "name": "ConfirmationService",
                    "type": "injectable"
                }
            ],
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./crud.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "cols",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "deleteProductDialog",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "deleteProductsDialog",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "product",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Product",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "productDialog",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "products",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Product[]",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "rowsPerPageOptions",
                    "defaultValue": "[5, 10, 20]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "selectedProducts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Product[]",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "statuses",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "submitted",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 25
                }
            ],
            "methodsClass": [
                {
                    "name": "confirmDelete",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 81,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "confirmDeleteSelected",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "createId",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 130,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "deleteProduct",
                    "args": [
                        {
                            "name": "product",
                            "type": "Product",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "product",
                            "type": "Product",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deleteSelectedProducts",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "editProduct",
                    "args": [
                        {
                            "name": "product",
                            "type": "Product",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "product",
                            "type": "Product",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "findIndexById",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 118,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "hideDialog",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 88,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openNew",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "saveProduct",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 93,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { Product } from '../../api/product';\r\nimport { ProductService } from '../../service/productservice';\r\nimport { ConfirmationService, MessageService } from 'primeng/api';\r\n\r\n@Component({\r\n    templateUrl: './crud.component.html',\r\n    providers: [MessageService, ConfirmationService],\r\n    // styleUrls: ['../../../assets/demo/badges.scss']\r\n})\r\nexport class CrudComponent implements OnInit {\r\n\r\n    productDialog: boolean;\r\n\r\n    deleteProductDialog: boolean = false;\r\n\r\n    deleteProductsDialog: boolean = false;\r\n\r\n    products: Product[];\r\n\r\n    product: Product;\r\n\r\n    selectedProducts: Product[];\r\n\r\n    submitted: boolean;\r\n\r\n    cols: any[];\r\n\r\n    statuses: any[];\r\n\r\n    rowsPerPageOptions = [5, 10, 20];\r\n\r\n    constructor(private productService: ProductService, private messageService: MessageService,\r\n                private confirmationService: ConfirmationService) {}\r\n\r\n    ngOnInit() {\r\n        this.productService.getProducts().then(data => this.products = data);\r\n\r\n        this.cols = [\r\n            {field: 'name', header: 'Name'},\r\n            {field: 'price', header: 'Price'},\r\n            {field: 'category', header: 'Category'},\r\n            {field: 'rating', header: 'Reviews'},\r\n            {field: 'inventoryStatus', header: 'Status'}\r\n        ];\r\n\r\n        this.statuses = [\r\n            {label: 'INSTOCK', value: 'instock'},\r\n            {label: 'LOWSTOCK', value: 'lowstock'},\r\n            {label: 'OUTOFSTOCK', value: 'outofstock'}\r\n        ];\r\n    }\r\n\r\n    openNew() {\r\n        this.product = {};\r\n        this.submitted = false;\r\n        this.productDialog = true;\r\n    }\r\n\r\n    deleteSelectedProducts() {\r\n        this.deleteProductsDialog = true;\r\n    }\r\n\r\n    editProduct(product: Product) {\r\n        this.product = {...product};\r\n        this.productDialog = true;\r\n    }\r\n\r\n    deleteProduct(product: Product) {\r\n        this.deleteProductDialog = true;\r\n        this.product = {...product};\r\n    }\r\n\r\n    confirmDeleteSelected(){\r\n        this.deleteProductsDialog = false;\r\n        this.products = this.products.filter(val => !this.selectedProducts.includes(val));\r\n        this.messageService.add({severity: 'success', summary: 'Successful', detail: 'Products Deleted', life: 3000});\r\n        this.selectedProducts = null;\r\n    }\r\n\r\n    confirmDelete(){\r\n        this.deleteProductDialog = false;\r\n        this.products = this.products.filter(val => val.id !== this.product.id);\r\n        this.messageService.add({severity: 'success', summary: 'Successful', detail: 'Product Deleted', life: 3000});\r\n        this.product = {};\r\n    }\r\n\r\n    hideDialog() {\r\n        this.productDialog = false;\r\n        this.submitted = false;\r\n    }\r\n\r\n    saveProduct() {\r\n        this.submitted = true;\r\n\r\n        if (this.product.name.trim()) {\r\n            if (this.product.id) {\r\n                // @ts-ignore\r\n                this.product.inventoryStatus = this.product.inventoryStatus.value ? this.product.inventoryStatus.value: this.product.inventoryStatus;\r\n                this.products[this.findIndexById(this.product.id)] = this.product;\r\n                this.messageService.add({severity: 'success', summary: 'Successful', detail: 'Product Updated', life: 3000});\r\n            } else {\r\n                this.product.id = this.createId();\r\n                this.product.code = this.createId();\r\n                this.product.image = 'product-placeholder.svg';\r\n                // @ts-ignore\r\n                this.product.inventoryStatus = this.product.inventoryStatus ? this.product.inventoryStatus.value : 'INSTOCK';\r\n                this.products.push(this.product);\r\n                this.messageService.add({severity: 'success', summary: 'Successful', detail: 'Product Created', life: 3000});\r\n            }\r\n\r\n            this.products = [...this.products];\r\n            this.productDialog = false;\r\n            this.product = {};\r\n        }\r\n    }\r\n\r\n    findIndexById(id: string): number {\r\n        let index = -1;\r\n        for (let i = 0; i < this.products.length; i++) {\r\n            if (this.products[i].id === id) {\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return index;\r\n    }\r\n\r\n    createId(): string {\r\n        let id = '';\r\n        const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n        for (let i = 0; i < 5; i++) {\r\n            id += chars.charAt(Math.floor(Math.random() * chars.length));\r\n        }\r\n        return id;\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "productService",
                        "type": "ProductService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "messageService",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "confirmationService",
                        "type": "ConfirmationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 31,
                "jsdoctags": [
                    {
                        "name": "productService",
                        "type": "ProductService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "messageService",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "confirmationService",
                        "type": "ConfirmationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"grid\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <p-toast></p-toast>\r\n            <p-toolbar styleClass=\"mb-4\">\r\n                <ng-template pTemplate=\"left\">\r\n                    <div class=\"my-2\">\r\n                        <button pButton pRipple label=\"New\" icon=\"pi pi-plus\" class=\"p-button-success mr-2\" (click)=\"openNew()\"></button>\r\n                        <button pButton pRipple label=\"Delete\" icon=\"pi pi-trash\" class=\"p-button-danger\" (click)=\"deleteSelectedProducts()\" [disabled]=\"!selectedProducts || !selectedProducts.length\"></button>\r\n                    </div>\r\n                </ng-template>\r\n\r\n                <ng-template pTemplate=\"right\">\r\n                    <p-fileUpload mode=\"basic\" accept=\"image/*\" [maxFileSize]=\"1000000\" label=\"Import\" chooseLabel=\"Import\" class=\"mr-2 inline-block\"></p-fileUpload>\r\n                    <button pButton pRipple label=\"Export\" icon=\"pi pi-upload\" class=\"p-button-help\" (click)=\"dt.exportCSV()\"></button>\r\n                </ng-template>\r\n            </p-toolbar>\r\n\r\n            <p-table #dt [value]=\"products\" [columns]=\"cols\" responsiveLayout=\"scroll\" [rows]=\"10\" [globalFilterFields]=\"['name','country.name','representative.name','status']\" [rows]=\"10\" [paginator]=\"true\" pageLinks=\"3\" [rowsPerPageOptions]=\"[10,20,30]\" [showCurrentPageReport]=\"true\" currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" [(selection)]=\"selectedProducts\" selectionMode=\"multiple\" [rowHover]=\"true\" dataKey=\"id\">\r\n                <ng-template pTemplate=\"caption\">\r\n                    <div class=\"flex flex-column md:flex-row md:justify-content-between md:align-items-center\">\r\n                        <h5 class=\"m-0\">Manage Products</h5>\r\n                        <span class=\"block mt-2 md:mt-0 p-input-icon-left\">\r\n                            <i class=\"pi pi-search\"></i>\r\n                            <input pInputText type=\"text\" (input)=\"dt.filterGlobal($event.target.value, 'contains')\" placeholder=\"Search...\" />\r\n                        </span>\r\n                    </div>\r\n                </ng-template>\r\n                <ng-template pTemplate=\"header\">\r\n                    <tr>\r\n                        <th style=\"width: 3rem\">\r\n                            <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\r\n                        </th>\r\n                        <th pSortableColumn=\"code\">Code <p-sortIcon field=\"code\"></p-sortIcon></th>\r\n                        <th pSortableColumn=\"name\">Name <p-sortIcon field=\"name\"></p-sortIcon></th>\r\n                        <th>Image</th>\r\n                        <th pSortableColumn=\"price\">Price <p-sortIcon field=\"price\"></p-sortIcon></th>\r\n                        <th pSortableColumn=\"category\">Category <p-sortIcon field=\"category\"></p-sortIcon></th>\r\n                        <th pSortableColumn=\"rating\">Reviews <p-sortIcon field=\"rating\"></p-sortIcon></th>\r\n                        <th pSortableColumn=\"inventoryStatus\">Status <p-sortIcon field=\"inventoryStatus\"></p-sortIcon></th>\r\n                        <th></th>\r\n                    </tr>\r\n                </ng-template>\r\n                <ng-template pTemplate=\"body\" let-product>\r\n                    <tr>\r\n                        <td>\r\n                            <p-tableCheckbox [value]=\"product\"></p-tableCheckbox>\r\n                        </td>\r\n                        <td style=\"width:14%; min-width:10rem;\"><span class=\"p-column-title\">Code</span>\r\n                            {{product.code || product.id}}\r\n                        </td>\r\n                        <td style=\"width:14%; min-width:10rem;\">\r\n                            <span class=\"p-column-title\">Name</span>\r\n                            {{product.name}}\r\n                        </td>\r\n                        <td style=\"width:14%; min-width:10rem;\"><span class=\"p-column-title\">Image</span>\r\n                            <img [src]=\"'assets/demo/images/product/' + product.image\" [alt]=\"product.name\" width=\"100\" class=\"shadow-4\" />\r\n                        </td>\r\n                        <td style=\"width:14%; min-width:8rem;\">\r\n                            <span class=\"p-column-title\">Price</span>\r\n                            {{product.price | currency:'USD'}}\r\n                        </td>\r\n                        <td style=\"width:14%; min-width:10rem;\">\r\n                            <span class=\"p-column-title\">Category</span>\r\n                            {{product.category}}\r\n                        </td>\r\n                        <td style=\"width:14%; min-width: 10rem;\"><span class=\"p-column-title\">Reviews</span>\r\n                            <p-rating [ngModel]=\"product.rating\" [readonly]=\"true\" [cancel]=\"false\"></p-rating>\r\n                        </td>\r\n                        <td style=\"width:14%; min-width: 10rem;\"><span class=\"p-column-title\">Status</span>\r\n                            <span [class]=\"'product-badge status-' + (product.inventoryStatus ? product.inventoryStatus.toLowerCase() : '')\">{{product.inventoryStatus}}</span>\r\n                        </td>\r\n                        <td>\r\n                            <button pButton pRipple icon=\"pi pi-pencil\" class=\"p-button-rounded p-button-success mr-2\" (click)=\"editProduct(product)\"></button>\r\n                            <button pButton pRipple icon=\"pi pi-trash\" class=\"p-button-rounded p-button-warning mt-2\" (click)=\"deleteProduct(product)\"></button>\r\n                        </td>\r\n                    </tr>\r\n                </ng-template>\r\n            </p-table>\r\n        </div>\r\n\r\n        <p-dialog [(visible)]=\"productDialog\" [style]=\"{width: '450px'}\" header=\"Product Details\" [modal]=\"true\" class=\"p-fluid\">\r\n            <ng-template pTemplate=\"content\">\r\n                <img [src]=\"'assets/demo/images/product/' + product.image\" [alt]=\"product.image\" width=\"150\" class=\"mt-0 mx-auto mb-5 block shadow-2\" *ngIf=\"product.image\">\r\n                <div class=\"field\">\r\n                    <label for=\"name\">Name</label>\r\n                    <input type=\"text\" pInputText id=\"name\" [(ngModel)]=\"product.name\" required autofocus [ngClass]=\"{'ng-invalid ng-dirty' : submitted && !product.name}\"/>\r\n                    <small class=\"ng-dirty ng-invalid\" *ngIf=\"submitted && !product.name\">Name is required.</small>\r\n                </div>\r\n                <div class=\"field\">\r\n                    <label for=\"description\">Description</label>\r\n                    <textarea id=\"description\" pInputTextarea [(ngModel)]=\"product.description\" required rows=\"3\" cols=\"20\"></textarea>\r\n                </div>\r\n\r\n                <div class=\"field\">\r\n                    <label for=\"status\">Inventory Status</label>\r\n                    <p-dropdown id=\"status\" [options]=\"statuses\" optionLabel=\"label\" [(ngModel)]=\"product.inventoryStatus\" placeholder=\"Select a Status\">\r\n                        <ng-template pTemplate=\"selectedItem\">\r\n                            <span *ngIf=\"product && product.inventoryStatus\" [class]=\"'product-badge status-' + product.inventoryStatus.value\">{{product.inventoryStatus.label}}</span>\r\n                        </ng-template>\r\n                        <ng-template let-status pTemplate=\"status\">\r\n                            <span [class]=\"'product-badge status-' + status.value.toLowerCase()\">{{status.label}}</span>\r\n                        </ng-template>\r\n                    </p-dropdown>\r\n                </div>\r\n\r\n                <div class=\"field\">\r\n                    <label class=\"mb-3\">Category</label>\r\n                    <div class=\"formgrid grid\">\r\n                        <div class=\"field-radiobutton col-6\">\r\n                            <p-radioButton id=\"category1\" name=\"category\" value=\"Accessories\" [(ngModel)]=\"product.category\"></p-radioButton>\r\n                            <label for=\"category1\">Accessories</label>\r\n                        </div>\r\n                        <div class=\"field-radiobutton col-6\">\r\n                            <p-radioButton id=\"category2\" name=\"category\" value=\"Clothing\" [(ngModel)]=\"product.category\"></p-radioButton>\r\n                            <label for=\"category2\">Clothing</label>\r\n                        </div>\r\n                        <div class=\"field-radiobutton col-6\">\r\n                            <p-radioButton id=\"category3\" name=\"category\" value=\"Electronics\" [(ngModel)]=\"product.category\"></p-radioButton>\r\n                            <label for=\"category3\">Electronics</label>\r\n                        </div>\r\n                        <div class=\"field-radiobutton col-6\">\r\n                            <p-radioButton id=\"category4\" name=\"category\" value=\"Fitness\" [(ngModel)]=\"product.category\"></p-radioButton>\r\n                            <label for=\"category4\">Fitness</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"formgrid grid\">\r\n                    <div class=\"field col\">\r\n                        <label for=\"price\">Price</label>\r\n                        <p-inputNumber id=\"price\" [(ngModel)]=\"product.price\" mode=\"currency\" currency=\"USD\" locale=\"en-US\"></p-inputNumber>\r\n                    </div>\r\n                    <div class=\"field col\">\r\n                        <label for=\"quantity\">Quantity</label>\r\n                        <p-inputNumber id=\"quantity\" [(ngModel)]=\"product.quantity\"></p-inputNumber>\r\n                    </div>\r\n                </div>\r\n            </ng-template>\r\n\r\n            <ng-template pTemplate=\"footer\">\r\n                <button pButton pRipple label=\"Cancel\" icon=\"pi pi-times\" class=\"p-button-text\" (click)=\"hideDialog()\"></button>\r\n                <button pButton pRipple label=\"Save\" icon=\"pi pi-check\" class=\"p-button-text\" (click)=\"saveProduct()\"></button>\r\n            </ng-template>\r\n        </p-dialog>\r\n\r\n        <p-dialog [(visible)]=\"deleteProductDialog\" header=\"Confirm\" [modal]=\"true\" [style]=\"{width:'450px'}\">\r\n            <div class=\"flex align-items-center justify-content-center\">\r\n                <i class=\"pi pi-exclamation-triangle mr-3\" style=\"font-size: 2rem\"></i>\r\n                <span *ngIf=\"product\">Are you sure you want to delete <b>{{product.name}}</b>?</span>\r\n            </div>\r\n            <ng-template pTemplate=\"footer\">\r\n                <button pButton pRipple icon=\"pi pi-times\" class=\"p-button-text\" label=\"No\" (click)=\"deleteProductDialog = false\"></button>\r\n                <button pButton pRipple icon=\"pi pi-check\" class=\"p-button-text\" label=\"Yes\" (click)=\"confirmDelete()\"></button>\r\n            </ng-template>\r\n        </p-dialog>\r\n\r\n        <p-dialog [(visible)]=\"deleteProductsDialog\" header=\"Confirm\" [modal]=\"true\" [style]=\"{width:'450px'}\">\r\n            <div class=\"flex align-items-center justify-content-center\">\r\n                <i class=\"pi pi-exclamation-triangle mr-3\" style=\"font-size: 2rem\"></i>\r\n                <span>Are you sure you want to delete selected products?</span>\r\n            </div>\r\n            <ng-template pTemplate=\"footer\">\r\n                <button pButton pRipple icon=\"pi pi-times\" class=\"p-button-text\" label=\"No\" (click)=\"deleteProductsDialog = false\"></button>\r\n                <button pButton pRipple icon=\"pi pi-check\" class=\"p-button-text\" label=\"Yes\" (click)=\"confirmDeleteSelected()\"></button>\r\n            </ng-template>\r\n        </p-dialog>\r\n    </div>\r\n</div>\r\n"
        },
        {
            "name": "DashboardComponent",
            "id": "component-DashboardComponent-7077bff6e13dd8161f4ed7be9b97388a47336fab1e7cd2368357378f6433077bf40fd804d8f57fbe6f11f6155c907e34848008b6e2584e97cff36a9da657ce03",
            "file": "src/app/core/dashboard/dashboard.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-dashboard",
            "styleUrls": [
                "./dashboard.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./dashboard.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./dashboard.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"grid\">\r\n    <div class=\"col-12\">\r\n        tes\r\n    </div>\r\n</div>\r\n"
        },
        {
            "name": "DashboardComponent",
            "id": "component-DashboardComponent-12af1a4938a81dda35e9892388faba859be3c856976480109137bac9c4f2efed64763dd4529a69a6f8860ad2c3ff18cb9f6a0639fe4afd5702f1347baaa71918-1",
            "file": "src/app/showcase/components/dashboard/dashboard.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./dashboard.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "chartData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "items",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem[]",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "products",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Product[]",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { MenuItem } from 'primeng/api';\r\nimport { Product } from '../../api/product';\r\nimport { ProductService } from '../../service/productservice';\r\n \r\n@Component({\r\n    templateUrl: './dashboard.component.html',\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n    items: MenuItem[];\r\n\r\n    products: Product[];\r\n\r\n    chartData:any;\r\n\r\n    constructor(private productService: ProductService) {}\r\n\r\n    ngOnInit() {\r\n        this.productService.getProductsSmall().then(data => this.products = data);\r\n          \r\n        this.items = [\r\n            {label: 'Add New', icon: 'pi pi-fw pi-plus'},\r\n            {label: 'Remove', icon: 'pi pi-fw pi-minus'}\r\n        ];\r\n\r\n        this.chartData = {\r\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n            datasets: [\r\n                {\r\n                    label: 'First Dataset',\r\n                    data: [65, 59, 80, 81, 56, 55, 40],\r\n                    fill: false,\r\n                    backgroundColor: '#2f4860',\r\n                    borderColor: '#2f4860',\r\n                    tension: .4\r\n                },\r\n                {\r\n                    label: 'Second Dataset',\r\n                    data: [28, 48, 40, 19, 86, 27, 90],\r\n                    fill: false,\r\n                    backgroundColor: '#00bb7e',\r\n                    borderColor: '#00bb7e',\r\n                    tension: .4\r\n                }\r\n            ]\r\n        };\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "productService",
                        "type": "ProductService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "productService",
                        "type": "ProductService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "DashboardComponent-1",
            "templateData": "    <div class=\"grid\">\r\n        <div class=\"col-12 lg:col-6 xl:col-3\">\r\n            <div class=\"card mb-0\">\r\n                <div class=\"flex justify-content-between mb-3\">\r\n                    <div>\r\n                        <span class=\"block text-500 font-medium mb-3\">Orders</span>\r\n                        <div class=\"text-900 font-medium text-xl\">152</div>\r\n                    </div>\r\n                    <div class=\"flex align-items-center justify-content-center bg-blue-100 border-round\" [ngStyle]=\"{width: '2.5rem', height: '2.5rem'}\">\r\n                        <i class=\"pi pi-shopping-cart text-blue-500 text-xl\"></i>\r\n                    </div>\r\n                </div>\r\n                <span class=\"text-green-500 font-medium\">24 new </span>\r\n                <span class=\"text-500\">since last visit</span>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-12 lg:col-6 xl:col-3\">\r\n            <div class=\"card mb-0\">\r\n                <div class=\"flex justify-content-between mb-3\">\r\n                    <div>\r\n                        <span class=\"block text-500 font-medium mb-3\">Revenue</span>\r\n                        <div class=\"text-900 font-medium text-xl\">$2.100</div>\r\n                    </div>\r\n                    <div class=\"flex align-items-center justify-content-center bg-orange-100 border-round\" [ngStyle]=\"{width: '2.5rem', height: '2.5rem'}\">\r\n                        <i class=\"pi pi-map-marker text-orange-500 text-xl\"></i>\r\n                    </div>\r\n                </div>\r\n                <span class=\"text-green-500 font-medium\">%52+ </span>\r\n                <span class=\"text-500\">since last week</span>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-12 lg:col-6 xl:col-3\">\r\n            <div class=\"card mb-0\">\r\n                <div class=\"flex justify-content-between mb-3\">\r\n                    <div>\r\n                        <span class=\"block text-500 font-medium mb-3\">Customers</span>\r\n                        <div class=\"text-900 font-medium text-xl\">28441</div>\r\n                    </div>\r\n                    <div class=\"flex align-items-center justify-content-center bg-cyan-100 border-round\" [ngStyle]=\"{width: '2.5rem', height: '2.5rem'}\">\r\n                        <i class=\"pi pi-inbox text-cyan-500 text-xl\"></i>\r\n                    </div>\r\n                </div>\r\n                <span class=\"text-green-500 font-medium\">520  </span>\r\n                <span class=\"text-500\">newly registered</span>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-12 lg:col-6 xl:col-3\">\r\n            <div class=\"card mb-0\">\r\n                <div class=\"flex justify-content-between mb-3\">\r\n                    <div>\r\n                        <span class=\"block text-500 font-medium mb-3\">Comments</span>\r\n                        <div class=\"text-900 font-medium text-xl\">152 Unread</div>\r\n                    </div>\r\n                    <div class=\"flex align-items-center justify-content-center bg-purple-100 border-round\" [ngStyle]=\"{width: '2.5rem', height: '2.5rem'}\">\r\n                        <i class=\"pi pi-comment text-purple-500 text-xl\"></i>\r\n                    </div>\r\n                </div>\r\n                <span class=\"text-green-500 font-medium\">85 </span>\r\n                <span class=\"text-500\">responded</span>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"col-12 xl:col-6\">\r\n            <div class=\"card\">\r\n                <h5>Recent Sales</h5>\r\n                <p-table [value]=\"products\" [paginator]=\"true\" pageLinks=\"3\" [rows]=\"5\" responsiveLayout=\"scroll\">\r\n                    <ng-template pTemplate=\"header\">\r\n                        <tr>\r\n                            <th>Image</th>\r\n                            <th pSortableColumn=\"name\">Name <p-sortIcon field=\"name\"></p-sortIcon></th>\r\n                            <th pSortableColumn=\"price\">Price <p-sortIcon field=\"price\"></p-sortIcon></th>\r\n                            <th>View</th>\r\n                        </tr>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"body\" let-product>\r\n                        <tr>\r\n                            <td style=\"width: 15%; min-width: 5rem;\">\r\n                                <img src=\"assets/demo/images/product/{{product.image}}\" class=\"shadow-4\" alt=\"{{product.name}}\" width=\"50\">\r\n                            </td>\r\n                            <td style=\"width: 35%; min-width: 7rem;\">{{product.name}}</td>\r\n                            <td style=\"width: 35%; min-width: 8rem;\">{{product.price | currency:'USD'}}</td>\r\n                            <td style=\"width: 15%;\">\r\n                                <button pButton pRipple type=\"button\" icon=\"pi pi-search\" class=\"p-button p-component p-button-text p-button-icon-only\"></button>\r\n                            </td>\r\n                        </tr>\r\n                    </ng-template>\r\n                </p-table>\r\n            </div>\r\n            <div class=\"card\">\r\n                <div class=\"flex justify-content-between align-items-center mb-5\">\r\n                    <h5>Best Selling Products</h5>\r\n                    <div>\r\n                        <button pButton type=\"button\" icon=\"pi pi-ellipsis-v\" class=\"p-button-rounded p-button-text p-button-plain\" (click)=\"menu.toggle($event)\"></button>\r\n                        <p-menu #menu [popup]=\"true\" [model]=\"items\"></p-menu>\r\n                    </div>\r\n                </div>\r\n                <ul class=\"list-none p-0 m-0\">\r\n                    <li class=\"flex flex-column md:flex-row md:align-items-center md:justify-content-between mb-4\">\r\n                        <div>\r\n                            <span class=\"text-900 font-medium mr-2 mb-1 md:mb-0\">Space T-Shirt</span>\r\n                            <div class=\"mt-1 text-600\">Clothing</div>\r\n                        </div>\r\n                        <div class=\"mt-2 md:mt-0 flex align-items-center\">\r\n                            <div class=\"surface-300 border-round overflow-hidden w-10rem lg:w-6rem\" [ngStyle]=\"{height: '8px'}\">\r\n                                <div class=\"bg-orange-500 h-full\" [ngStyle]=\"{width: '50%'}\"></div>\r\n                            </div>\r\n                            <span class=\"text-orange-500 ml-3 font-medium\">%50</span>\r\n                        </div>\r\n                    </li>\r\n                    <li class=\"flex flex-column md:flex-row md:align-items-center md:justify-content-between mb-4\">\r\n                        <div>\r\n                            <span class=\"text-900 font-medium mr-2 mb-1 md:mb-0\">Portal Sticker</span>\r\n                            <div class=\"mt-1 text-600\">Accessories</div>\r\n                        </div>\r\n                        <div class=\"mt-2 md:mt-0 ml-0 md:ml-8 flex align-items-center\">\r\n                            <div class=\"surface-300 border-round overflow-hidden w-10rem lg:w-6rem\" [ngStyle]=\"{height: '8px'}\">\r\n                                <div class=\"bg-cyan-500 h-full\" [ngStyle]=\"{width: '16%'}\"></div>\r\n                            </div>\r\n                            <span class=\"text-cyan-500 ml-3 font-medium\">%16</span>\r\n                        </div>\r\n                    </li>\r\n                    <li class=\"flex flex-column md:flex-row md:align-items-center md:justify-content-between mb-4\">\r\n                        <div>\r\n                            <span class=\"text-900 font-medium mr-2 mb-1 md:mb-0\">Supernova Sticker</span>\r\n                            <div class=\"mt-1 text-600\">Accessories</div>\r\n                        </div>\r\n                        <div class=\"mt-2 md:mt-0 ml-0 md:ml-8 flex align-items-center\">\r\n                            <div class=\"surface-300 border-round overflow-hidden w-10rem lg:w-6rem\" [ngStyle]=\"{height: '8px'}\">\r\n                                <div class=\"bg-pink-500 h-full\" [ngStyle]=\"{width: '67%'}\"></div>\r\n                            </div>\r\n                            <span class=\"text-pink-500 ml-3 font-medium\">%67</span>\r\n                        </div>\r\n                    </li>\r\n                    <li class=\"flex flex-column md:flex-row md:align-items-center md:justify-content-between mb-4\">\r\n                        <div>\r\n                            <span class=\"text-900 font-medium mr-2 mb-1 md:mb-0\">Wonders Notebook</span>\r\n                            <div class=\"mt-1 text-600\">Office</div>\r\n                        </div>\r\n                        <div class=\"mt-2 md:mt-0 ml-0 md:ml-8 flex align-items-center\">\r\n                            <div class=\"surface-300 border-round overflow-hidden w-10rem lg:w-6rem\" [ngStyle]=\"{height: '8px'}\">\r\n                                <div class=\"bg-green-500 h-full\" [ngStyle]=\"{width: '35%'}\"></div>\r\n                            </div>\r\n                            <span class=\"text-green-500 ml-3 font-medium\">%35</span>\r\n                        </div>\r\n                    </li>\r\n                    <li class=\"flex flex-column md:flex-row md:align-items-center md:justify-content-between mb-4\">\r\n                        <div>\r\n                            <span class=\"text-900 font-medium mr-2 mb-1 md:mb-0\">Mat Black Case</span>\r\n                            <div class=\"mt-1 text-600\">Accessories</div>\r\n                        </div>\r\n                        <div class=\"mt-2 md:mt-0 ml-0 md:ml-8 flex align-items-center\">\r\n                            <div class=\"surface-300 border-round overflow-hidden w-10rem lg:w-6rem\" [ngStyle]=\"{height: '8px'}\">\r\n                                <div class=\"bg-purple-500 h-full\" [ngStyle]=\"{width: '75%'}\"></div>\r\n                            </div>\r\n                            <span class=\"text-purple-500 ml-3 font-medium\">%75</span>\r\n                        </div>\r\n                    </li>\r\n                    <li class=\"flex flex-column md:flex-row md:align-items-center md:justify-content-between mb-4\">\r\n                        <div>\r\n                            <span class=\"text-900 font-medium mr-2 mb-1 md:mb-0\">Robots T-Shirt</span>\r\n                            <div class=\"mt-1 text-600\">Clothing</div>\r\n                        </div>\r\n                        <div class=\"mt-2 md:mt-0 ml-0 md:ml-8 flex align-items-center\">\r\n                            <div class=\"surface-300 border-round overflow-hidden w-10rem lg:w-6rem\" [ngStyle]=\"{height: '8px'}\">\r\n                                <div class=\"bg-teal-500 h-full\" [ngStyle]=\"{width: '40%'}\"></div>\r\n                            </div>\r\n                            <span class=\"text-teal-500 ml-3 font-medium\">%40</span>\r\n                        </div>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"col-12 xl:col-6\">\r\n            <div class=\"card\">\r\n                <h5>Sales Overview</h5>\r\n                <p-chart type=\"line\" [data]=\"chartData\"></p-chart>\r\n            </div>\r\n\r\n            <div class=\"card\">\r\n                <div class=\"flex align-items-center justify-content-between mb-4\">\r\n                    <h5>Notifications</h5>\r\n                    <div>\r\n                        <button pButton type=\"button\" icon=\"pi pi-ellipsis-v\" class=\"p-button-rounded p-button-text p-button-plain\" (click)=\"menu.toggle($event)\"></button>\r\n                        <p-menu #menu [popup]=\"true\" [model]=\"items\"></p-menu>\r\n                    </div>\r\n                </div>\r\n\r\n                <span class=\"block text-600 font-medium mb-3\">TODAY</span>\r\n                <ul class=\"p-0 mx-0 mt-0 mb-4 list-none\">\r\n                    <li class=\"flex align-items-center py-2 border-bottom-1 surface-border\">\r\n                        <div class=\"w-3rem h-3rem flex align-items-center justify-content-center bg-blue-100 border-circle mr-3 flex-shrink-0\">\r\n                            <i class=\"pi pi-dollar text-xl text-blue-500\"></i>\r\n                        </div>\r\n                        <span class=\"text-900 line-height-3\">Richard Jones\r\n                    <span class=\"text-700\"> has purchased a blue t-shirt for <span class=\"text-blue-500\">79$</span></span>\r\n                </span>\r\n                    </li>\r\n                    <li class=\"flex align-items-center py-2\">\r\n                        <div class=\"w-3rem h-3rem flex align-items-center justify-content-center bg-orange-100 border-circle mr-3 flex-shrink-0\">\r\n                            <i class=\"pi pi-download text-xl text-orange-500\"></i>\r\n                        </div>\r\n                        <span class=\"text-700 line-height-3\">Your request for withdrawal of <span class=\"text-blue-500 font-medium\">2500$</span> has been initiated.</span>\r\n                    </li>\r\n                </ul>\r\n\r\n                <span class=\"block text-600 font-medium mb-3\">YESTERDAY</span>\r\n                <ul class=\"p-0 m-0 list-none\">\r\n                    <li class=\"flex align-items-center py-2 border-bottom-1 surface-border\">\r\n                        <div class=\"w-3rem h-3rem flex align-items-center justify-content-center bg-blue-100 border-circle mr-3 flex-shrink-0\">\r\n                            <i class=\"pi pi-dollar text-xl text-blue-500\"></i>\r\n                        </div>\r\n                        <span class=\"text-900 line-height-3\">Keyser Wick\r\n                    <span class=\"text-700\"> has purchased a black jacket for <span class=\"text-blue-500\">59$</span></span>\r\n                </span>\r\n                    </li>\r\n                    <li class=\"flex align-items-center py-2 border-bottom-1 surface-border\">\r\n                        <div class=\"w-3rem h-3rem flex align-items-center justify-content-center bg-pink-100 border-circle mr-3 flex-shrink-0\">\r\n                            <i class=\"pi pi-question text-xl text-pink-500\"></i>\r\n                        </div>\r\n                        <span class=\"text-900 line-height-3\">Jane Davis\r\n                    <span class=\"text-700\"> has posted a new questions about your product.</span>\r\n                </span>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n\r\n            <div class=\"px-4 py-5 shadow-2 flex flex-column md:flex-row md:align-items-center justify-content-between mb-3\"\r\n            [ngStyle]=\"{borderRadius: '1rem', background: 'linear-gradient(0deg, rgba(0, 123, 255, 0.5), rgba(0, 123, 255, 0.5)), linear-gradient(92.54deg, #1C80CF 47.88%, #FFFFFF 100.01%)'}\">\r\n           <div>\r\n               <div class=\"text-blue-100 font-medium text-xl mt-2 mb-3\">TAKE THE NEXT STEP</div>\r\n               <div class=\"text-white font-medium text-5xl\">Try PrimeBlocks</div>\r\n           </div>\r\n           <div class=\"mt-4 mr-auto md:mt-0 md:mr-0\">\r\n               <a target=\"_blank\" href=\"https://www.primefaces.org/primeblocks-ng\" class=\"p-button font-bold px-5 py-3 p-button-warning p-button-rounded p-button-raised\">\r\n                   Get Started\r\n               </a>\r\n           </div>\r\n       </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n"
        },
        {
            "name": "DeleteDialogComponent",
            "id": "component-DeleteDialogComponent-a9c7496120a499d3122f93c7480c1fe84b8c60e7dca135bf09015ebb8cebab08e40a49255b0e73497572fc54376288898891e26739c0c71949e0d1b7a3ab4d5a",
            "file": "src/stories/primeng/confirm-dialogs/delete-dialog/delete-dialog.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "BrowserAnimationsModule",
                    "type": "module"
                }
            ],
            "selector": "delete-dialog",
            "styleUrls": [
                "./delete-dialog.component.css"
            ],
            "styles": [],
            "template": "<button pButton label=\"Show\" (click)=\"showDialog()\"></button>\n<p-dialog [(visible)]=\"display\" [baseZIndex]=\"10000\" [modal]=\"true\" [draggable]=\"false\">\n    <ng-template pTemplate=\"header\">\n        <div class=\"dialog-header\">\n            <div>\n            <svg width=\"24\" height=\"24\" viewBox=\"0 0 18 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M10.2602 3.3999H5.63146C5.54102 3.04515 5.53245 2.67433 5.60642 2.31575C5.68039 1.95717 5.83494 1.62031 6.05828 1.33089C6.28161 1.04146 6.56782 0.807133 6.89505 0.645784C7.22229 0.484435 7.58189 0.400334 7.94642 0.399902C8.31084 0.400516 8.67031 0.484751 8.99739 0.646179C9.32448 0.807606 9.61053 1.04196 9.83373 1.33136C10.0569 1.62076 10.2114 1.95755 10.2853 2.31604C10.3592 2.67454 10.3506 3.04525 10.2602 3.3999Z\" fill=\"#D85454\"/>\n            <path d=\"M1.37615 4.59971C1.05934 4.59971 0.755517 4.47328 0.531504 4.24823C0.30749 4.02319 0.181641 3.71797 0.181641 3.39971C0.181641 3.08145 0.30749 2.77622 0.531504 2.55118C0.755517 2.32614 1.05934 2.19971 1.37615 2.19971H14.5157C14.8325 2.19971 15.1364 2.32614 15.3604 2.55118C15.5844 2.77622 15.7102 3.08145 15.7102 3.39971C15.7102 3.71797 15.5844 4.02319 15.3604 4.24823C15.1364 4.47328 14.8325 4.59971 14.5157 4.59971H1.37615Z\" fill=\"#D85454\"/>\n            <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M13.322 20.1997C13.6388 20.1997 13.9427 20.0733 14.1667 19.8482C14.3907 19.6232 14.5165 19.318 14.5165 18.9997V6.39971C14.5165 6.08145 14.3907 5.77622 14.1667 5.55118C13.9427 5.32614 13.6388 5.19971 13.322 5.19971H2.57146C2.25466 5.19971 1.95083 5.32614 1.72682 5.55118C1.5028 5.77622 1.37695 6.08145 1.37695 6.39971V18.9997C1.37695 19.318 1.5028 19.6232 1.72682 19.8482C1.95083 20.0733 2.25466 20.1997 2.57146 20.1997H13.322ZM10.933 8.19971C10.933 8.04058 10.9959 7.88796 11.1079 7.77544C11.2199 7.66292 11.3719 7.59971 11.5303 7.59971C11.6887 7.59971 11.8406 7.66292 11.9526 7.77544C12.0646 7.88796 12.1275 8.04058 12.1275 8.19971V16.5997C12.1275 16.7588 12.0646 16.9115 11.9526 17.024C11.8406 17.1365 11.6887 17.1997 11.5303 17.1997C11.3719 17.1997 11.2199 17.1365 11.1079 17.024C10.9959 16.9115 10.933 16.7588 10.933 16.5997V8.19971ZM7.94674 7.59971C7.78834 7.59971 7.63643 7.66292 7.52442 7.77544C7.41241 7.88796 7.34949 8.04058 7.34949 8.19971V16.5997C7.34949 16.7588 7.41241 16.9115 7.52442 17.024C7.63643 17.1365 7.78834 17.1997 7.94674 17.1997C8.10514 17.1997 8.25706 17.1365 8.36906 17.024C8.48107 16.9115 8.544 16.7588 8.544 16.5997V8.19971C8.544 8.04058 8.48107 7.88796 8.36906 7.77544C8.25706 7.66292 8.10514 7.59971 7.94674 7.59971ZM3.76597 8.19971C3.76597 8.04058 3.82889 7.88796 3.9409 7.77544C4.05291 7.66292 4.20482 7.59971 4.36322 7.59971C4.52162 7.59971 4.67354 7.66292 4.78554 7.77544C4.89755 7.88796 4.96047 8.04058 4.96047 8.19971V16.5997C4.96047 16.7588 4.89755 16.9115 4.78554 17.024C4.67354 17.1365 4.52162 17.1997 4.36322 17.1997C4.20482 17.1997 4.05291 17.1365 3.9409 17.024C3.82889 16.9115 3.76597 16.7588 3.76597 16.5997V8.19971Z\" fill=\"#D85454\"/>\n            </svg>\n            </div>\n            <div>\n                <span>Delete Data</span>\n            </div>\n        </div>\n    </ng-template>\n    <ng-template pTemplate=\"content\">\n        <span>\n            {{message}}\n        </span>\n    </ng-template>\n    <ng-template pTemplate=\"footer\">\n        <button pButton ngClass=\"primary\" label=\"Yes\" (click)=\"onAccept()\"></button>\n        <button pButton ngClass=\"secondary\" label=\"No\" (click)=\"onReject()\"></button>\n    </ng-template>\n</p-dialog>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "message",
                    "defaultValue": "\"Are you sure to delete this data?\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "accept",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "display",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 41
                }
            ],
            "methodsClass": [
                {
                    "name": "onAccept",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onReject",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "showDialog",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\n\r\n@Component({\r\n    selector: 'delete-dialog',\r\n    template: `\r\n    <button pButton label=\"Show\" (click)=\"showDialog()\"></button>\r\n    <p-dialog [(visible)]=\"display\" [baseZIndex]=\"10000\" [modal]=\"true\" [draggable]=\"false\">\r\n        <ng-template pTemplate=\"header\">\r\n            <div class=\"dialog-header\">\r\n                <div>\r\n                <svg width=\"24\" height=\"24\" viewBox=\"0 0 18 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path d=\"M10.2602 3.3999H5.63146C5.54102 3.04515 5.53245 2.67433 5.60642 2.31575C5.68039 1.95717 5.83494 1.62031 6.05828 1.33089C6.28161 1.04146 6.56782 0.807133 6.89505 0.645784C7.22229 0.484435 7.58189 0.400334 7.94642 0.399902C8.31084 0.400516 8.67031 0.484751 8.99739 0.646179C9.32448 0.807606 9.61053 1.04196 9.83373 1.33136C10.0569 1.62076 10.2114 1.95755 10.2853 2.31604C10.3592 2.67454 10.3506 3.04525 10.2602 3.3999Z\" fill=\"#D85454\"/>\r\n                <path d=\"M1.37615 4.59971C1.05934 4.59971 0.755517 4.47328 0.531504 4.24823C0.30749 4.02319 0.181641 3.71797 0.181641 3.39971C0.181641 3.08145 0.30749 2.77622 0.531504 2.55118C0.755517 2.32614 1.05934 2.19971 1.37615 2.19971H14.5157C14.8325 2.19971 15.1364 2.32614 15.3604 2.55118C15.5844 2.77622 15.7102 3.08145 15.7102 3.39971C15.7102 3.71797 15.5844 4.02319 15.3604 4.24823C15.1364 4.47328 14.8325 4.59971 14.5157 4.59971H1.37615Z\" fill=\"#D85454\"/>\r\n                <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M13.322 20.1997C13.6388 20.1997 13.9427 20.0733 14.1667 19.8482C14.3907 19.6232 14.5165 19.318 14.5165 18.9997V6.39971C14.5165 6.08145 14.3907 5.77622 14.1667 5.55118C13.9427 5.32614 13.6388 5.19971 13.322 5.19971H2.57146C2.25466 5.19971 1.95083 5.32614 1.72682 5.55118C1.5028 5.77622 1.37695 6.08145 1.37695 6.39971V18.9997C1.37695 19.318 1.5028 19.6232 1.72682 19.8482C1.95083 20.0733 2.25466 20.1997 2.57146 20.1997H13.322ZM10.933 8.19971C10.933 8.04058 10.9959 7.88796 11.1079 7.77544C11.2199 7.66292 11.3719 7.59971 11.5303 7.59971C11.6887 7.59971 11.8406 7.66292 11.9526 7.77544C12.0646 7.88796 12.1275 8.04058 12.1275 8.19971V16.5997C12.1275 16.7588 12.0646 16.9115 11.9526 17.024C11.8406 17.1365 11.6887 17.1997 11.5303 17.1997C11.3719 17.1997 11.2199 17.1365 11.1079 17.024C10.9959 16.9115 10.933 16.7588 10.933 16.5997V8.19971ZM7.94674 7.59971C7.78834 7.59971 7.63643 7.66292 7.52442 7.77544C7.41241 7.88796 7.34949 8.04058 7.34949 8.19971V16.5997C7.34949 16.7588 7.41241 16.9115 7.52442 17.024C7.63643 17.1365 7.78834 17.1997 7.94674 17.1997C8.10514 17.1997 8.25706 17.1365 8.36906 17.024C8.48107 16.9115 8.544 16.7588 8.544 16.5997V8.19971C8.544 8.04058 8.48107 7.88796 8.36906 7.77544C8.25706 7.66292 8.10514 7.59971 7.94674 7.59971ZM3.76597 8.19971C3.76597 8.04058 3.82889 7.88796 3.9409 7.77544C4.05291 7.66292 4.20482 7.59971 4.36322 7.59971C4.52162 7.59971 4.67354 7.66292 4.78554 7.77544C4.89755 7.88796 4.96047 8.04058 4.96047 8.19971V16.5997C4.96047 16.7588 4.89755 16.9115 4.78554 17.024C4.67354 17.1365 4.52162 17.1997 4.36322 17.1997C4.20482 17.1997 4.05291 17.1365 3.9409 17.024C3.82889 16.9115 3.76597 16.7588 3.76597 16.5997V8.19971Z\" fill=\"#D85454\"/>\r\n                </svg>\r\n                </div>\r\n                <div>\r\n                    <span>Delete Data</span>\r\n                </div>\r\n            </div>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"content\">\r\n            <span>\r\n                {{message}}\r\n            </span>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"footer\">\r\n            <button pButton ngClass=\"primary\" label=\"Yes\" (click)=\"onAccept()\"></button>\r\n            <button pButton ngClass=\"secondary\" label=\"No\" (click)=\"onReject()\"></button>\r\n        </ng-template>\r\n    </p-dialog>\r\n    `,\r\n    styleUrls: ['./delete-dialog.component.css'],\r\n    providers: [BrowserAnimationsModule]\r\n})\r\n\r\nexport class DeleteDialogComponent {\r\n    @Input() message: string = \"Are you sure to delete this data?\";\r\n    @Output() accept = new EventEmitter<any>();\r\n    display: boolean = false;\r\n\r\n    showDialog() {\r\n        this.display = true;\r\n    }\r\n\r\n    onAccept() {\r\n        this.accept.emit(true);\r\n        this.display = false;\r\n    }\r\n\r\n    onReject() {\r\n        this.display = false;\r\n    }\r\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "div.dialog-header{\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n}\r\n\r\n:host ::ng-deep .p-dialog.p-component{\r\n    min-height: 196px;\r\n    min-width: 495px;\r\n}\r\n\r\n:host ::ng-deep .p-dialog-header{\r\n    padding: 3rem 3rem 1rem 3rem;\r\n    border-bottom: 1px solid #EEEEEE;\r\n}\r\n\r\n:host ::ng-deep .p-dialog-content{\r\n    padding-left: 3rem;\r\n    padding-right: 3rem;\r\n}\r\n\r\n:host ::ng-deep .p-dialog-footer{\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: end;\r\n    padding: 1rem 3rem 3rem 3rem;\r\n    border-top: 1px solid #EEEEEE;\r\n}\r\n\r\n:host ::ng-deep .p-dialog-header div div span{\r\n    font-size: 20px;\r\n    font-weight: 700;\r\n}\r\n\r\ndiv.dialog-header div svg{\r\n    margin-right: 1rem;\r\n}\r\n\r\n:host ::ng-deep .p-dialog-content span{\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n}\r\n\r\n:host ::ng-deep .p-element.secondary.p-button.p-component{\r\n    width: 128px;\r\n    height: 35px;\r\n    font-size: 14px;\r\n    font-weight: 700;\r\n    background-color: #E8F2FF;\r\n    color: #0E8EC5;\r\n    border: none;\r\n}\r\n\r\n:host ::ng-deep .p-element.primary.p-button.p-component{\r\n    width: 128px;\r\n    height: 35px;\r\n    font-size: 14px;\r\n    font-weight: 700;\r\n    background-color: #0E8EC5;\r\n    color: #FFFFFF;\r\n    border: none;\r\n}",
                    "styleUrl": "./delete-dialog.component.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "DocumentationComponent",
            "id": "component-DocumentationComponent-803b4f94778f4159a198c691ea8cc59142b78cb1d5f23d1cd9f127615f2cdc3bbbf94ce1db6465765e25c7e552875c94cdd6a69059d04f8dba91a1b5ae3d52cc",
            "file": "src/app/showcase/components/documentation/documentation.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./documentation.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    templateUrl: './documentation.component.html'\r\n})\r\nexport class DocumentationComponent {}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div class=\"grid\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card docs\">\r\n            <h3>Current Version</h3>\r\n            <p>Angular 13 and PrimeNG 13</p>\r\n\r\n            <h4>Getting Started</h4>\r\n            <p>Sakai is an application template for Angular and is distributed as a CLI project. In case CLI is not installed already, use\r\n                the command below to set it up.\r\n            </p>\r\n\r\n<app-code  ngPreserveWhitespaces ngNonBindable lang=\"markup\">\r\nnpm install -g @angular/cli\r\n</app-code>\r\n\r\n            <p>Once CLI is ready in your system, clone the github repository, cd to the directory,\r\n            install the libraries from npm and then execute \"ng serve\" to run the application in your local environment.</p>\r\n\r\n<app-code ngPreserveWhitespaces ngNonBindable lang=\"markup\">\r\ngit clone https://github.com/primefaces/sakai-ng.git\r\ncd sakai-ng\r\nnpm install\r\nng serve\r\n</app-code>\r\n\r\n            <p>The application should run at <i>http://localhost:4200/</i>, you may now start with the development of your application.</p>\r\n\r\n            <h5>Important CLI Commands</h5>\r\n            <p>Following commands are derived from CLI.</p>\r\n<app-code ngPreserveWhitespaces ngNonBindable lang=\"markup\">\r\nRun 'ng serve' for a dev server. Navigate to `http://localhost:4200/`. The app will automatically reload if you change any of the source files.\r\n\r\nRun 'ng generate component component-name' to generate a new component. You can also use `ng generate directive/pipe/service/class/module`.\r\n\r\nRun 'ng build' to build the project. The build artifacts will be stored in the `dist/` directory. Use the `-prod` flag for a production build.\r\n\r\nRun 'ng test' to execute the unit tests via [Karma](https://karma-runner.github.io).\r\n\r\nRun 'ng e2e' to execute the end-to-end tests via [Protractor](http://www.protractortest.org/).\r\n\r\nRun 'ng help' for more options.\r\n</app-code>\r\n\r\n            <h5>Dependencies</h5>\r\n            <p>Sakai has no direct dependency other than PrimeNG. More information about dependencies of PrimeNG templates is available at <a href=\"https://www.primefaces.org/why-primeng-templates/\">Why PrimeNG Templates</a> article.</p>\r\n\r\n            <h4>Structure</h4>\r\n            <p>Sakai consists of 2 main parts; the application layout, layout resources. <i>app.component.html</i> inside app folder is the html template for the base layout,\r\n                required resources for the layout are placed inside the <i>src/assets/layout</i> folder and similarly theme resources are inside <i>src/assets/theme</i> folder.\r\n            </p>\r\n\r\n            <h5>Application Template</h5>\r\n            <p>Main layout is the html template of the app.main.component.ts, it is divided into a couple of sections such as topbar, sidebar, right panel and footer. Here is the code for\r\n                the main template. The component class app.main.component.ts implements the logic such as opening menus and managing layout modes.\r\n            </p>\r\n\r\n            <h5>Menu</h5>\r\n            <p>Menu is a separate component defined in app.menu.component.ts file based on PrimeNG MenuModel API. In order to define the menuitems,\r\n            navigate to this file and define your own model as a nested structure. Here is the menu component from the sample application.</p>\r\n\r\n            <h5>Theme</h5>\r\n            <p>Sakai layout derives the color scheme from the PrimeNG theme being used so that it can be combined any theme such as PrimeOne, Material, Bootstrap and others with dark mode alternatives.</p>\r\n\r\n            <h5>SASS Variables</h5>\r\n            <p>In case you'd like to customize the layout variables, open <i>_variables.scss</i> file under src/assets/sass/layout folder. Saving the changes\r\n                will be reflected instantly at your browser.</p>\r\n        </div>\r\n    </div>\r\n</div>"
        },
        {
            "name": "EmployeeInfoDashboardComponent",
            "id": "component-EmployeeInfoDashboardComponent-e66a10dbb43d6bec6eee92f75ff6141a431c0e97d1c5d3e414d0524f46eb63818300bae512e3c110ba79da55bf46b7b0a154479e1f0202e01d3fcdc2d5a6fe0c",
            "file": "src/app/core/dashboard/component/employee-info-dashboard/employee-info-dashboard.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-employee-info-dashboard",
            "styleUrls": [
                "./employee-info-dashboard.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./employee-info-dashboard.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "year",
                    "defaultValue": "new Date().getFullYear()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { DashboardService } from '../../service/dashboard.service';\r\n\r\n@Component({\r\n  selector: 'app-employee-info-dashboard',\r\n  templateUrl: './employee-info-dashboard.component.html',\r\n  styleUrls: ['./employee-info-dashboard.component.scss']\r\n})\r\nexport class EmployeeInfoDashboardComponent implements OnInit {\r\n\r\n  constructor(private api:DashboardService) { }\r\n  year=new Date().getFullYear();\r\n  data;\r\n  ngOnInit(): void {\r\n    this.api.getTotalEmp().toPromise().then(res=>{\r\n      this.data=res;\r\n    })\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".border-right-custom {\r\n    border-right-width: 1px !important;\r\n    border-right-style: solid;\r\n    border-color: #F2F2F2;\r\n  }\r\n\r\n.title-font{\r\n    font-family: SF Pro Text;\r\n    font-style: normal;\r\n    font-weight: 500;\r\n    line-height: 15px;\r\n    color: #232859;\r\n}\r\n\r\n.icon-style{\r\n    font-size: 10px;\r\n}\r\n\r\n.content-font{\r\n    font-family: SF Pro Text;\r\n    font-style: normal;\r\n    font-weight: 500;\r\n    line-height: 27px;\r\n    color: #232859;\r\n}\r\n.link-font{\r\n    font-family: SF Pro Text;\r\n    font-style: normal;\r\n    font-weight: 500;\r\n    line-height: 15px;\r\n    color: #14B8A6;\r\n}\r\n@media (min-width: 768px) {\r\n    .border-right-custom-large{\r\n        border-right-width: 1px !important;\r\n        border-right-style: solid;\r\n        border-color: #F2F2F2;\r\n    }\r\n}\r\n\r\n",
                    "styleUrl": "./employee-info-dashboard.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "api",
                        "type": "DashboardService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "api",
                        "type": "DashboardService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"grid\">\r\n    <div class=\"border-right-custom col-6 md:col-3 lg:col-3\">\r\n        <div class=\"col-12\">\r\n            <label class=\"title-font cus-text-base\"> <i class=\"bi bi-people icon-style p-0 m-0\"></i> Jumlah Pegawai</label>\r\n        </div>\r\n        <div class=\"col-12\">\r\n            <label class=\"content-font cus-text-2xl\">{{data?.totalEmp || '-' }} Pegawai</label>\r\n        </div>\r\n        <div class=\"col-12\">\r\n            <label class=\"link-font cus-text-xs\">Periode {{year}}</label>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-6 md:col-3 lg:col-3 border-right-custom-large\">\r\n        <div class=\"col-12\">\r\n            <label class=\"title-font cus-text-base\"> <i class=\"bi bi-gender-male icon-style p-0 m-0\"></i> Laki-laki</label>\r\n        </div>\r\n        <div class=\"col-12\">\r\n            <label class=\"content-font cus-text-2xl\">{{data?.men || '-' }} Laki-laki </label>\r\n        </div>\r\n        <div class=\"col-12\">\r\n            <label class=\"link-font cus-text-xs\">Periode {{year}}</label>\r\n        </div>\r\n    </div>\r\n    <div class=\"border-right-custom col-6 md:col-3 lg:col-3\">\r\n        <div class=\"col-12\">\r\n            <label class=\"title-font cus-text-base\"> <i class=\"bi bi-gender-female icon-style p-0 m-0\"></i> Perempuan</label>\r\n        </div>\r\n        <div class=\"col-12\">\r\n            <label class=\"content-font cus-text-2xl\">{{data?.women || '-' }} Perempuan </label>\r\n        </div>\r\n        <div class=\"col-12\">\r\n            <label class=\"link-font cus-text-xs\">Periode {{year}}</label>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-6 md:col-3 lg:col-3\">\r\n        <div class=\"col-12\">\r\n            <label class=\"title-font cus-text-base\"> <i class=\"bi bi-person-check icon-style p-0 m-0\"></i> Rata-rata Umur</label>\r\n        </div>\r\n        <div class=\"col-12\">\r\n            <label class=\"content-font cus-text-2xl\">{{data?.avgAge || '-' }} Tahun </label>\r\n            <small *ngIf=\"data?.minAge\">({{data?.minAge}}-{{data?.maxAge}})</small>\r\n        </div>\r\n        <div class=\"col-12\">\r\n            <label class=\"link-font cus-text-xs\">Periode {{year}}</label>\r\n        </div>\r\n    </div>\r\n</div>\r\n"
        },
        {
            "name": "EmptyComponent",
            "id": "component-EmptyComponent-35720550dcd23e3ebbf95f3ce6ea22a35453ee973371c023bf7a4abeaff4a905a7f03d51bdd5ba2090f103ff2aebecaba0d14ce4eba000bf3325ed4b1155579b",
            "file": "src/app/showcase/components/empty/empty.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./empty.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    templateUrl: './empty.component.html'\r\n})\r\nexport class EmptyComponent {}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div class=\"grid\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <h4>Empty Page</h4>\r\n            <p>This is your empty page template to start building beautiful applications.</p>\r\n        </div>\r\n    </div>\r\n</div>\r\n"
        },
        {
            "name": "ErrorFieldHelperComponent",
            "id": "component-ErrorFieldHelperComponent-f8f82ede07b9691a20355878e5cd828a289a408786e85a171a44ff6bcb2598663538cf32ee63eb565b362bdcbc0286937845860fbf9d6d5f8cec66344f15a1de",
            "file": "src/app/core/shared-component/error-field-helper/error-field-helper.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-error-field-helper",
            "styleUrls": [
                "./error-field-helper.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./error-field-helper.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "formControlKey",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-error-field-helper',\r\n  templateUrl: './error-field-helper.component.html',\r\n  styleUrls: ['./error-field-helper.component.scss']\r\n})\r\nexport class ErrorFieldHelperComponent implements OnInit {\r\n  @Input() formControlKey;\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./error-field-helper.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"text-left\" *ngIf=\"(formControlKey.touched || formControlKey.dirty )\">\r\n    <small *ngIf=\"formControlKey.errors?.required\" class=\"p-error-empty text-left\"></small>\r\n    <small *ngIf=\"formControlKey.errors?.email\" class=\"p-error-email text-left\"></small>\r\n    <small *ngIf=\"formControlKey.errors?.max\" class=\"p-error text-left\">tidak boleh melebihi {{formControlKey.errors.max.max}}</small>\r\n    <small *ngIf=\"formControlKey.errors?.min\" class=\"p-error text-left\"> tidak boleh lebih kecil dari {{formControlKey.errors.min.min}}</small>\r\n    \r\n</div>"
        },
        {
            "name": "FileComponent",
            "id": "component-FileComponent-01c71d304b918d80e62f41bd317b00f6a02f4e76582103396e93686ef43f9121304da08b8bd843d43c60f2e837ec314e900adc27919e8424430be914630bf1f7",
            "file": "src/app/showcase/components/file/file.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "MessageService",
                    "type": "injectable"
                }
            ],
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./file.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "uploadedFiles",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [
                {
                    "name": "onUpload",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { MessageService } from 'primeng/api';\r\n\r\n@Component({\r\n    templateUrl: './file.component.html',\r\n    providers: [MessageService]\r\n})\r\nexport class FileComponent {\r\n\r\n    uploadedFiles: any[] = [];\r\n\r\n    constructor(private messageService: MessageService) {}\r\n\r\n    onUpload(event) {\r\n        for (const file of event.files) {\r\n            this.uploadedFiles.push(file);\r\n        }\r\n\r\n        this.messageService.add({severity: 'info', summary: 'Success', detail: 'File Uploaded'});\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "messageService",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "messageService",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"grid\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <h5>Advanced</h5>\r\n            <p-fileUpload name=\"demo[]\" url=\"./upload.php\" (onUpload)=\"onUpload($event)\"\r\n                          multiple=\"multiple\" accept=\"image/*\" maxFileSize=\"1000000\">\r\n                <ng-template pTemplate=\"content\">\r\n                    <ul *ngIf=\"uploadedFiles.length\">\r\n                        <li *ngFor=\"let file of uploadedFiles\">{{file.name}} - {{file.size}} bytes</li>\r\n                    </ul>\r\n                </ng-template>\r\n            </p-fileUpload>\r\n\r\n            <h5>Basic</h5>\r\n            <p-fileUpload mode=\"basic\" name=\"demo[]\" url=\"./upload.php\" accept=\"image/*\" maxFileSize=\"1000000\" (onUpload)=\"onUpload($event)\" chooseLabel=\"Browse\"></p-fileUpload>\r\n        </div>\r\n    </div>\r\n</div>\r\n"
        },
        {
            "name": "FloatLabelComponent",
            "id": "component-FloatLabelComponent-1eefa3ef64f5a9b06e0c8e78deaa3f42fab7010e6ac3286309740607a487fe778de30e3966533e5e1216252de1042fd798b155c006dc0278712722a70ef676e1",
            "file": "src/app/showcase/components/floatlabel/floatlabel.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./floatlabel.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "cities",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "countries",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "filteredCountries",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "value1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "value10",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "value11",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "value12",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "value2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "value3",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "value4",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "value5",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "value6",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "value7",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "value8",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "value9",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 31
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "searchCountry",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { CountryService } from '../../service/countryservice';\r\n\r\n@Component({\r\n    templateUrl: './floatlabel.component.html',\r\n})\r\nexport class FloatLabelComponent implements OnInit {\r\n\r\n    countries: any[];\r\n\r\n    cities: any[];\r\n\r\n    filteredCountries: any[];\r\n\r\n    value1: any;\r\n\r\n    value2: any;\r\n\r\n    value3: any;\r\n\r\n    value4: any;\r\n\r\n    value5: any;\r\n\r\n    value6: any;\r\n\r\n    value7: any;\r\n\r\n    value8: any;\r\n\r\n    value9: any;\r\n\r\n    value10: any;\r\n\r\n    value11: any;\r\n\r\n    value12: any;\r\n\r\n    constructor(private countryService: CountryService) {\r\n        this.cities = [\r\n            {name: 'New York', code: 'NY'},\r\n            {name: 'Rome', code: 'RM'},\r\n            {name: 'London', code: 'LDN'},\r\n            {name: 'Istanbul', code: 'IST'},\r\n            {name: 'Paris', code: 'PRS'}\r\n        ];\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.countryService.getCountries().then(countries => {\r\n            this.countries = countries;\r\n        });\r\n    }\r\n\r\n    searchCountry(event) {\r\n        // in a real application, make a request to a remote url with the query and\r\n        // return filtered results, for demo we filter at client side\r\n        const filtered: any[] = [];\r\n        const query = event.query;\r\n        for (let i = 0; i < this.countries.length; i++) {\r\n            const country = this.countries[i];\r\n            if (country.name.toLowerCase().indexOf(query.toLowerCase()) == 0) {\r\n                filtered.push(country);\r\n            }\r\n        }\r\n\r\n        this.filteredCountries = filtered;\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "countryService",
                        "type": "CountryService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 37,
                "jsdoctags": [
                    {
                        "name": "countryService",
                        "type": "CountryService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"card\">\r\n    <h5>Float Label</h5>\r\n    <div class=\"grid p-fluid mt-3\">\r\n        <div class=\"field col-12 md:col-4\">\r\n            <span class=\"p-float-label\">\r\n                <input type=\"text\" id=\"inputtext\" pInputText [(ngModel)]=\"value1\">\r\n                <label for=\"inputtext\">InputText</label>\r\n            </span>\r\n        </div>\r\n        <div class=\"field col-12 md:col-4\">\r\n            <span class=\"p-float-label\">\r\n                <p-autoComplete inputId=\"autocomplete\" [(ngModel)]=\"value2\" [suggestions]=\"filteredCountries\"\r\n                (completeMethod)=\"searchCountry($event)\" field=\"name\"></p-autoComplete>\r\n                <label for=\"autocomplete\">AutoComplete</label>\r\n            </span>\r\n        </div>\r\n        <div class=\"field col-12 md:col-4\">\r\n            <span class=\"p-float-label\">\r\n                <p-calendar inputId=\"calendar\" [(ngModel)]=\"value3\"></p-calendar>\r\n                <label for=\"calendar\">Calendar</label>\r\n            </span>\r\n        </div>\r\n        <div class=\"field col-12 md:col-4\">\r\n            <span class=\"p-float-label\">\r\n                <p-chips inputId=\"chips\" [(ngModel)]=\"value4\"></p-chips>\r\n                <label for=\"chips\">Chips</label>\r\n            </span>\r\n        </div>\r\n        <div class=\"field col-12 md:col-4\">\r\n            <span class=\"p-float-label\">\r\n                <p-inputMask inputId=\"inputmask\" mask=\"99/99/9999\" [(ngModel)]=\"value5\"></p-inputMask>\r\n                <label for=\"inputmask\">InputMask</label>\r\n            </span>\r\n        </div>\r\n        <div class=\"field col-12 md:col-4\">\r\n            <span class=\"p-float-label\">\r\n                <p-inputNumber inputId=\"inputnumber\" [(ngModel)]=\"value6\"></p-inputNumber>\r\n                <label for=\"inputnumber\">InputNumber</label>\r\n            </span>\r\n        </div>\r\n        <div class=\"field col-12 md:col-4\">\r\n            <div class=\"p-inputgroup\">\r\n                <span class=\"p-inputgroup-addon\">\r\n                    <i class=\"pi pi-user\"></i>\r\n                </span>\r\n                <span class=\"p-float-label\">\r\n                    <input type=\"text\" inputId=\"inputgroup\" pInputText [(ngModel)]=\"value7\"> \r\n                    <label for=\"inputgroup\">InputGroup</label>\r\n                </span>\r\n            </div>\r\n        </div>\r\n        <div class=\"field col-12 md:col-4\">\r\n            <span class=\"p-float-label\">\r\n                <p-dropdown inputId=\"dropdown\" [autoDisplayFirst]=\"false\" [options]=\"cities\" [(ngModel)]=\"value8\" optionLabel=\"name\"></p-dropdown>\r\n                <label for=\"dropdown\">Dropdown</label>\r\n            </span>\r\n        </div>\r\n        <div class=\"field col-12 md:col-4\">\r\n            <span class=\"p-float-label\">\r\n                <p-multiSelect inputId=\"multiselect\" [options]=\"cities\" [(ngModel)]=\"value9\" optionLabel=\"name\" [filter]=\"false\"></p-multiSelect>\r\n                <label for=\"multiselect\">MultiSelect</label>\r\n            </span>\r\n        </div>\r\n        <div class=\"field col-12 md:col-4\">\r\n            <span class=\"p-float-label\">\r\n                <textarea inputId=\"textarea\" rows=\"3\" cols=\"30\" [(ngModel)]=\"value10\" pInputTextarea></textarea>\r\n                <label for=\"textarea\">Textarea</label>\r\n            </span>\r\n        </div>\r\n    </div>\r\n</div>"
        },
        {
            "name": "FormLayoutComponent",
            "id": "component-FormLayoutComponent-7d960afdd82af2fa984d9284033fa7cfa9053872771552e005d1d00c30f5ccd3ffbf5f614e7e15baf5809a79eaf27bfd4c197ab7ec4cc8b93989122e4269645c",
            "file": "src/app/showcase/components/formlayout/formlayout.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./formlayout.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dropdownItems",
                    "defaultValue": "[\r\n        { name: 'Option 1', code: 'Option 1' },\r\n        { name: 'Option 2', code: 'Option 2' },\r\n        { name: 'Option 3', code: 'Option 3' }\r\n    ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "selectedState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    templateUrl: './formlayout.component.html'\r\n})\r\nexport class FormLayoutComponent {\r\n\r\n    selectedState:any;\r\n    \r\n    dropdownItems = [\r\n        { name: 'Option 1', code: 'Option 1' },\r\n        { name: 'Option 2', code: 'Option 2' },\r\n        { name: 'Option 3', code: 'Option 3' }\r\n    ];\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div class=\"grid\">\r\n\t<div class=\"col-12 md:col-6\">\r\n\t\t<div class=\"card p-fluid\">\r\n\t\t\t<h5>Vertical</h5>\r\n\t\t\t<div class=\"field\">\r\n\t\t\t\t<label htmlFor=\"name1\">Name</label>\r\n\t\t\t\t<input pInputText id=\"name1\" type=\"text\" />\r\n\t\t\t</div>\r\n\t\t\t<div class=\"field\">\r\n\t\t\t\t<label htmlFor=\"email1\">Email</label>\r\n\t\t\t\t<input pInputText id=\"email1\" type=\"text\" />\r\n\t\t\t</div>\r\n\t\t\t<div class=\"field\">\r\n\t\t\t\t<label htmlFor=\"age1\">Age</label>\r\n\t\t\t\t<input pInputText id=\"age1\" type=\"text\" />\r\n\t\t\t</div>\r\n\r\n\t\t</div>\r\n\t\t\r\n\t\t<div class=\"card p-fluid\">\r\n\t\t\t<h5>Vertical Grid</h5>\r\n\t\t\t<div class=\"p-formgrid grid\">\r\n\t\t\t\t<div class=\"field col\">\r\n\t\t\t\t\t<label htmlFor=\"name2\">Name</label>\r\n\t\t\t\t\t<input pInputText id=\"name2\" type=\"text\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"field col\">\r\n\t\t\t\t\t<label htmlFor=\"email2\">Email</label>\r\n\t\t\t\t\t<input pInputText id=\"email2\" type=\"text\" />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n\r\n\t<div class=\"col-12 md:col-6\">\r\n\t\t<div class=\"card p-fluid\">\r\n\t\t\t<h5>Horizontal</h5>\r\n\t\t\t<div class=\"field grid\">\r\n\t\t\t\t<label htmlFor=\"name3\" class=\"col-12 mb-2 md:col-2 md:mb-0\">Name</label>\r\n\t\t\t\t<div class=\"col-12 md:col-10\">\r\n\t\t\t\t\t<input pInputText id=\"name3\" type=\"text\" />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"field grid\">\r\n\t\t\t\t<label htmlFor=\"email3\" class=\"col-12 mb-2 md:col-2 md:mb-0\">Email</label>\r\n\t\t\t\t<div class=\"col-12 md:col-10\">\r\n\t\t\t\t\t<input pInputText id=\"email3\" type=\"text\" />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"card\">\r\n\t\t\t<h5>Inline</h5>\r\n\t\t\t<div class=\"formgroup-inline\">\r\n\t\t\t\t<div class=\"field\">\r\n\t\t\t\t\t<label htmlFor=\"firstname1\" class=\"p-sr-only\">Firstname</label>\r\n\t\t\t\t\t<input pInputText id=\"firstname1\" type=\"text\" placeholder=\"Firstname\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"field\">\r\n\t\t\t\t\t<label htmlFor=\"lastname1\" class=\"p-sr-only\">Lastname</label>\r\n\t\t\t\t\t<input pInputText id=\"lastname1\" type=\"text\" placeholder=\"Lastname\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<button pButton label=\"Submit\"></button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"card\">\r\n\t\t\t<h5>Help Text</h5>\r\n\t\t\t<div class=\"field p-fluid\">\r\n\t\t\t\t<label htmlFor=\"username\">Username</label>\r\n\t\t\t\t<input pInputText id=\"username\" type=\"text\" />\r\n\t\t\t\t<small>Enter your username to reset your password.</small>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n\r\n\t<div class=\"col-12\">\r\n\t\t<div class=\"card\">\r\n\t\t\t<h5>Advanced</h5>\r\n\t\t\t<div class=\"p-fluid p-formgrid grid\">\r\n\t\t\t\t<div class=\"field col-12 md:col-6\">\r\n\t\t\t\t\t<label htmlFor=\"firstname2\">Firstname</label>\r\n\t\t\t\t\t<input pInputText id=\"firstname2\" type=\"text\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"field col-12 md:col-6\">\r\n\t\t\t\t\t<label htmlFor=\"lastname2\">Lastname</label>\r\n\t\t\t\t\t<input pInputText id=\"lastname2\" type=\"text\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"field col-12\">\r\n\t\t\t\t\t<label htmlFor=\"address\">Address</label>\r\n\t\t\t\t\t<input pInputTextarea id=\"address\" rows=\"4\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"field col-12 md:col-6\">\r\n\t\t\t\t\t<label htmlFor=\"city\">City</label>\r\n\t\t\t\t\t<input pInputText id=\"city\" type=\"text\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"field col-12 md:col-3\">\r\n\t\t\t\t\t<label htmlFor=\"state\">State</label>\r\n\t\t\t\t\t<p-dropdown [options]=\"dropdownItems\" optionLabel=\"name\" [(ngModel)]=\"selectedState\"></p-dropdown>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"field col-12 md:col-3\">\r\n\t\t\t\t\t<label htmlFor=\"zip\">Zip</label>\r\n\t\t\t\t\t<input pInputText id=\"zip\" type=\"text\" />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n"
        },
        {
            "name": "GhostButton",
            "id": "component-GhostButton-da04b9832c82de5d6fba6a05f9f979b511f4a4326b128a9c23f57c90037adda405d66818c0d6f641ff44cf72d543a27a202c34d64b49d3a16f27ea1c4292b6ff",
            "file": "src/stories/primeng/buttons/ghost-button/ghost-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ghost-button",
            "styleUrls": [
                "./ghost-button.css"
            ],
            "styles": [],
            "template": "<button\ntype=\"button\"\n[ngClass]=\"classess\"\n[disabled]=\"disabled\"\n[ngStyle]=\"{'border-color' : borderColor, 'color' : borderColor}\">\n<i *ngIf=\"icon\" [class]=\"icon\"></i>\n{{label}}\n</button>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "borderColor",
                    "defaultValue": "\"#0E8EC5\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "classess",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "click",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from \"@angular/common\";\r\nimport { Component, Input, Output, EventEmitter } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: 'ghost-button',\r\n  template: `\r\n    <button \r\n    type=\"button\" \r\n    [ngClass]=\"classess\" \r\n    [disabled]=\"disabled\"\r\n    [ngStyle]=\"{'border-color' : borderColor, 'color' : borderColor}\">\r\n    <i *ngIf=\"icon\" [class]=\"icon\"></i>\r\n    {{label}}\r\n    </button>\r\n    `,\r\n  styleUrls: ['./ghost-button.css']\r\n})\r\n\r\nexport default class GhostButton {\r\n  @Input() label: string = 'Button';\r\n  @Input() disabled: boolean = false;\r\n  @Input() borderColor?: string = \"#0E8EC5\";\r\n  @Input() classess?: string;\r\n  @Input() icon? : string;\r\n  @Output() click = new EventEmitter<any>();\r\n\r\n  onClick(event : any){\r\n    this.click.emit(event);\r\n  }\r\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "button{\r\n    width: 128px;\r\n    height: 35px;\r\n    border-radius: 4px;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    background-color: #FFFFFF;\r\n    border-style: solid;\r\n}\r\n\r\nbutton:hover{\r\n    cursor: pointer;\r\n}\r\n\r\nbutton:active{\r\n    border-style: solid;\r\n}\r\n\r\nbutton i{\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n}",
                    "styleUrl": "./ghost-button.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-3d494fd89671305c6be07de00e019efdf08f2e36c2169e5fb75a5acdb2841da927e3ef3cbd21cc18f478373a784b1fb90e8b63b9df4b3498a75b652bd9c37b38",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"storybook-header\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            primary\n            size=\"small\"\n            primary=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 74,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 68,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 71,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport type { User } from './User';\n\n@Component({\n  selector: 'storybook-header',\n  template: `<header>\n    <div class=\"storybook-header\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            primary\n            size=\"small\"\n            primary=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>`,\n  styleUrls: ['./header.css'],\n})\nexport default class HeaderComponent {\n  @Input()\n  user: User | null = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-header {\n  font-family: 'SF Pro Text Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\n.storybook-header svg {\n  display: inline-block;\n  vertical-align: top;\n}\n\n.storybook-header h1 {\n  font-weight: 700;\n  font-size: 20px;\n  line-height: 1;\n  margin: 6px 0 6px 10px;\n  display: inline-block;\n  vertical-align: top;\n}\n\n.storybook-header button + button {\n  margin-left: 10px;\n}\n\n.storybook-header .welcome {\n  color: #333;\n  font-size: 14px;\n  margin-right: 10px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "IconsComponent",
            "id": "component-IconsComponent-b6abea30a2b7fec4bb4421da0fad91a1c1fa1f4f11b11016ac1e5a7aefb5ff7595fb13ffab4a1d4294f19291d72e32cb3c867fc9ca548032dbca8e7cda5f9346",
            "file": "src/app/showcase/components/icons/icons.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-iconsdemo",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./icons.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "filteredIcons",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "icons",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "selectedIcon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onFilter",
                    "args": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { IconService } from '../../service/iconservice';\r\n\r\n@Component({\r\n  selector: 'app-iconsdemo',\r\n  templateUrl: './icons.component.html'\r\n})\r\nexport class IconsComponent implements OnInit {\r\n\r\n  icons: any[];\r\n\r\n  filteredIcons: any[];\r\n\r\n  selectedIcon: any;\r\n\r\n  constructor(private iconService : IconService) { }\r\n\r\n  ngOnInit() {\r\n    this.iconService.getIcons().subscribe(data => {\r\n      data = data.filter(value => {\r\n        return value.icon.tags.indexOf('deprecate') === -1;\r\n      });\r\n\r\n      let icons = data;\r\n      icons.sort((icon1, icon2) => {\r\n        if(icon1.properties.name < icon2.properties.name)\r\n            return -1;\r\n        else if(icon1.properties.name < icon2.properties.name)\r\n            return 1;\r\n        else\r\n            return 0;\r\n      });\r\n\r\n      this.icons = icons;\r\n      this.filteredIcons = data;\r\n    });\r\n  }\r\n\r\n  onFilter(event: KeyboardEvent): void {\r\n    const searchText = (event.target as HTMLInputElement).value;\r\n\r\n    if (!searchText) {\r\n        this.filteredIcons = this.icons;\r\n    }\r\n    else {\r\n        this.filteredIcons = this.icons.filter( it => {\r\n            return it.icon.tags[0].includes(searchText);\r\n        });\r\n    }\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "iconService",
                        "type": "IconService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "iconService",
                        "type": "IconService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"card\">\r\n\t<h4>Icons</h4>\r\n\r\n\t<h5>Download</h5>\r\n<app-code lang=\"markup\" ngPreserveWhitespaces ngNonBindable>\r\nnpm install primeicons --save\r\n</app-code>\r\n\r\n\t<h5>Getting Started</h5>\r\n\t<p>PrimeIcons use the <strong>pi pi-&#123;icon&#125;</strong> syntax such as <strong>pi pi-check</strong>.\r\n\t\tA standalone icon can be displayed using an element such as <i>i</i> or <i>span</i></p>\r\n\r\n<app-code lang=\"markup\"  ngPreserveWhitespaces ngNonBindable>\r\n&lt;i class=\"pi pi-check\"&gt;&lt;/i&gt;\r\n&lt;i class=\"pi pi-times\"&gt;&lt;/i&gt;\r\n</app-code>\r\n\r\n\t<i class=\"pi pi-check\" style=\"margin-right: .5rem\"></i>\r\n\t<i class=\"pi pi-times\"></i>\r\n\r\n\t<h5>Size</h5>\r\n\t<p>Size of the icons can easily be changed using font-size property.</p>\r\n\r\n<app-code lang=\"markup\"  ngPreserveWhitespaces ngNonBindable>\r\n&lt;i class=\"pi pi-check\"&gt;&lt;/i&gt;\r\n</app-code>\r\n\r\n\t<i class=\"pi pi-check\"></i>\r\n\r\n<app-code lang=\"markup\"  ngPreserveWhitespaces ngNonBindable>\r\n&lt;i class=\"pi pi-check\" style=\"font-size: 2rem\"&gt;&lt;/i&gt;\r\n</app-code>\r\n\r\n\t<i class=\"pi pi-check\" style=\"font-size: 2rem\"></i>\r\n\r\n\t<h5>Spinning Animation</h5>\r\n\t<p>Special pi-spin class applies infinite rotate to an icon.</p>\r\n\r\n<app-code lang=\"markup\"  ngPreserveWhitespaces ngNonBindable>\r\n&lt;i class=\"pi pi-spin pi-spinner\" style=\"font-size: 2rem\"&gt;&lt;/i&gt;\r\n</app-code>\r\n\r\n\t<i class=\"pi pi-spin pi-spinner\" style=\"font-size: 2rem\"></i>\r\n\r\n\t<h5>List of Icons</h5>\r\n\t<p>Here is the current list of PrimeIcons, more icons will be added periodically. You may also <a href=\"https://github.com/primefaces/primeicons/issues\">request new icons</a> at the issue tracker.</p>\r\n\t<div>\r\n\t\t<input class=\"icon-filter\" (input)=\"onFilter($event)\" pInputText placeholder=\"Search an icon\" class=\"w-full p-3 mt-3 mb-5 w-full p-3 mt-3 mb-5\">\r\n\t</div>\r\n\r\n\t<div class=\"grid text-center\">\r\n\t\t<div class=\"col-6 sm:col-4 lg:col-3 xl:col-2 pb-5\" *ngFor=\"let icon of filteredIcons\">\r\n\t\t\t<i class=\"text-2xl pi pi-{{icon.properties.name}}\"></i>\r\n\t\t\t<div>pi-{{icon.properties.name}}</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n"
        },
        {
            "name": "InformationViewComponent",
            "id": "component-InformationViewComponent-75f587da7fda8bc940b9cd0f9c626b34b19b874767cab47893ca0d2a36d65f41de20c4ae70919478cf08f9df6584e2446acae6760992f9cde65a205089275562",
            "file": "src/app/core/shared-component/information-view/information-view.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-information-view",
            "styleUrls": [
                "./information-view.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./information-view.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-information-view',\n  templateUrl: './information-view.component.html',\n  styleUrls: ['./information-view.component.scss']\n})\nexport class InformationViewComponent {\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./information-view.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<button  class=\"btn-info\">\n    <i class=\"fas fa-info-circle\" ></i>\n</button>\n"
        },
        {
            "name": "InputCalendar",
            "id": "component-InputCalendar-1093409b7701a0be9c4e807c7918deb6cdb8fba2c92267c55c2a3768d592537a4f14fd2fbdc619d8da69206a2d16d490d1a058da08710866aada845bd7298ee0",
            "file": "src/stories/primeng/input-fields/input-calendar/input-calendar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "c-calendar",
            "styleUrls": [],
            "styles": [],
            "template": "<p-calendar        placeholder=\"Select Date\"\n        [showTime]=\"isTime\"\n        [showIcon]=\"isIcon\"\n        [disabled]=\"disabled\"\n    ></p-calendar>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "isIcon",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "isTime",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'c-calendar',\r\n    template: `<p-calendar\r\n        placeholder=\"Select Date\"\r\n        [showTime]=\"isTime\"\r\n        [showIcon]=\"isIcon\"\r\n        [disabled]=\"disabled\"\r\n    ></p-calendar>`,\r\n    styleUrls: [],\r\n})\r\nexport default class InputCalendar {\r\n    @Input() disabled: boolean = false;\r\n    @Input() isIcon: boolean = false;\r\n    @Input() isTime: boolean = false;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "InputComponent",
            "id": "component-InputComponent-411e4b8719401a97eea2c5577a7d0b1328f6dce83839bd1f38dae46349076987cdae355a24ccacd35a62e916596f130b52c9b62946caecd570c2fefceeab1dd2",
            "file": "src/app/showcase/components/input/input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [
                ":host ::ng-deep .p-multiselect {\n\t\tmin-width: 15rem;\n\t}\n\n\t:host ::ng-deep .multiselect-custom-virtual-scroll .p-multiselect {\n\t\tmin-width: 20rem;\n\t}\n\n\t:host ::ng-deep .multiselect-custom .p-multiselect-label,  {\n\t\tpadding-top: 0.75rem;\n\t\tpadding-bottom: 0.75rem;\n\n\t}\n\n\t:host ::ng-deep .multiselect-custom .country-item.country-item-value {\n\t\tpadding: .25rem .5rem;\n\t\tborder-radius: 3px;\n\t\tdisplay: inline-flex;\n\t\tmargin-right: .5rem;\n\t\tbackground-color: var(--primary-color);\n\t\tcolor: var(--primary-color-text);\n\t}\n\n\t:host ::ng-deep .multiselect-custom .country-item.country-item-value img.flag {\n\t\twidth: 17px;\n\t}\n\n\t:host ::ng-deep .multiselect-custom .country-item {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t}\n\n\t:host ::ng-deep .multiselect-custom .country-item img.flag {\n\t\twidth: 18px;\n\t\tmargin-right: .5rem;\n\t}\n\n\t:host ::ng-deep .multiselect-custom .country-placeholder {\n\t\tpadding: 0.25rem;\n\t}\n\n    "
            ],
            "templateUrl": [
                "./input.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "cities",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SelectItem[]",
                    "optional": false,
                    "description": "",
                    "line": 68
                },
                {
                    "name": "countries",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 52
                },
                {
                    "name": "filteredCountries",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 54
                },
                {
                    "name": "paymentOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 82
                },
                {
                    "name": "selectedCountryAdvanced",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 56
                },
                {
                    "name": "selectedDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 90
                },
                {
                    "name": "selectedDrop",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SelectItem",
                    "optional": false,
                    "description": "",
                    "line": 72
                },
                {
                    "name": "selectedList",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SelectItem",
                    "optional": false,
                    "description": "",
                    "line": 70
                },
                {
                    "name": "selectedMulti",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 74
                },
                {
                    "name": "selectedNode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SelectItem",
                    "optional": false,
                    "description": "",
                    "line": 78
                },
                {
                    "name": "treeSelectNodes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 76
                },
                {
                    "name": "valCheck",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 64
                },
                {
                    "name": "valColor",
                    "defaultValue": "'#424242'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 60
                },
                {
                    "name": "valRadio",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 62
                },
                {
                    "name": "valSelect1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 84
                },
                {
                    "name": "valSelect2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 86
                },
                {
                    "name": "valSlider",
                    "defaultValue": "50",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 58
                },
                {
                    "name": "valSwitch",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 66
                },
                {
                    "name": "valToggle",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 80
                },
                {
                    "name": "valueKnob",
                    "defaultValue": "20",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 88
                }
            ],
            "methodsClass": [
                {
                    "name": "filterCountry",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 116,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 94,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { CountryService } from '../../service/countryservice';\r\nimport { NodeService } from '../../service/nodeservice';\r\nimport { SelectItem } from 'primeng/api';\r\n\r\n@Component({\r\n    templateUrl: './input.component.html',\r\n    styles: [`:host ::ng-deep .p-multiselect {\r\n\t\tmin-width: 15rem;\r\n\t}\r\n\r\n\t:host ::ng-deep .multiselect-custom-virtual-scroll .p-multiselect {\r\n\t\tmin-width: 20rem;\r\n\t}\r\n\r\n\t:host ::ng-deep .multiselect-custom .p-multiselect-label,  {\r\n\t\tpadding-top: 0.75rem;\r\n\t\tpadding-bottom: 0.75rem;\r\n\r\n\t}\r\n\r\n\t:host ::ng-deep .multiselect-custom .country-item.country-item-value {\r\n\t\tpadding: .25rem .5rem;\r\n\t\tborder-radius: 3px;\r\n\t\tdisplay: inline-flex;\r\n\t\tmargin-right: .5rem;\r\n\t\tbackground-color: var(--primary-color);\r\n\t\tcolor: var(--primary-color-text);\r\n\t}\r\n\r\n\t:host ::ng-deep .multiselect-custom .country-item.country-item-value img.flag {\r\n\t\twidth: 17px;\r\n\t}\r\n\r\n\t:host ::ng-deep .multiselect-custom .country-item {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t}\r\n\r\n\t:host ::ng-deep .multiselect-custom .country-item img.flag {\r\n\t\twidth: 18px;\r\n\t\tmargin-right: .5rem;\r\n\t}\r\n\r\n\t:host ::ng-deep .multiselect-custom .country-placeholder {\r\n\t\tpadding: 0.25rem;\r\n\t}\r\n\r\n    `]\r\n})\r\nexport class InputComponent implements OnInit{\r\n    countries: any[];\r\n\r\n    filteredCountries: any[];\r\n\r\n    selectedCountryAdvanced: any[];\r\n\r\n    valSlider = 50;\r\n\r\n    valColor = '#424242';\r\n\r\n    valRadio: string;\r\n\r\n    valCheck: string[] = [];\r\n\r\n    valSwitch: boolean;\r\n\r\n    cities: SelectItem[];\r\n\r\n    selectedList: SelectItem;\r\n\r\n    selectedDrop: SelectItem;\r\n\r\n    selectedMulti: string[] = [];\r\n\r\n    treeSelectNodes: any[];\r\n\r\n    selectedNode: SelectItem;\r\n\r\n    valToggle = false;\r\n\r\n    paymentOptions: any[];\r\n\r\n    valSelect1: string;\r\n\r\n    valSelect2: string;\r\n\r\n    valueKnob = 20;\r\n\r\n    selectedDate:any;\r\n\r\n    constructor(private countryService: CountryService, private nodeService: NodeService) {}\r\n\r\n    ngOnInit() {\r\n        this.countryService.getCountries().then(countries => {\r\n            this.countries = countries;\r\n        });\r\n\r\n        this.cities = [\r\n            {label: 'New York', value: {id: 1, name: 'New York', code: 'NY'}},\r\n            {label: 'Rome', value: {id: 2, name: 'Rome', code: 'RM'}},\r\n            {label: 'London', value: {id: 3, name: 'London', code: 'LDN'}},\r\n            {label: 'Istanbul', value: {id: 4, name: 'Istanbul', code: 'IST'}},\r\n            {label: 'Paris', value: {id: 5, name: 'Paris', code: 'PRS'}}\r\n        ];\r\n\r\n        this.paymentOptions = [\r\n            {name: 'Option 1', value: 1},\r\n            {name: 'Option 2', value: 2},\r\n            {name: 'Option 3', value: 3}\r\n        ];\r\n\r\n        this.nodeService.getFiles().then(files => this.treeSelectNodes = files)\r\n    }\r\n\r\n    filterCountry(event) {\r\n        const filtered: any[] = [];\r\n        const query = event.query;\r\n        for (let i = 0; i < this.countries.length; i++) {\r\n            const country = this.countries[i];\r\n            if (country.name.toLowerCase().indexOf(query.toLowerCase()) == 0) {\r\n                filtered.push(country);\r\n            }\r\n        }\r\n\r\n        this.filteredCountries = filtered;\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ":host ::ng-deep .p-multiselect {\n\t\tmin-width: 15rem;\n\t}\n\n\t:host ::ng-deep .multiselect-custom-virtual-scroll .p-multiselect {\n\t\tmin-width: 20rem;\n\t}\n\n\t:host ::ng-deep .multiselect-custom .p-multiselect-label,  {\n\t\tpadding-top: 0.75rem;\n\t\tpadding-bottom: 0.75rem;\n\n\t}\n\n\t:host ::ng-deep .multiselect-custom .country-item.country-item-value {\n\t\tpadding: .25rem .5rem;\n\t\tborder-radius: 3px;\n\t\tdisplay: inline-flex;\n\t\tmargin-right: .5rem;\n\t\tbackground-color: var(--primary-color);\n\t\tcolor: var(--primary-color-text);\n\t}\n\n\t:host ::ng-deep .multiselect-custom .country-item.country-item-value img.flag {\n\t\twidth: 17px;\n\t}\n\n\t:host ::ng-deep .multiselect-custom .country-item {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t}\n\n\t:host ::ng-deep .multiselect-custom .country-item img.flag {\n\t\twidth: 18px;\n\t\tmargin-right: .5rem;\n\t}\n\n\t:host ::ng-deep .multiselect-custom .country-placeholder {\n\t\tpadding: 0.25rem;\n\t}\n\n    \n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "countryService",
                        "type": "CountryService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "nodeService",
                        "type": "NodeService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 90,
                "jsdoctags": [
                    {
                        "name": "countryService",
                        "type": "CountryService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "nodeService",
                        "type": "NodeService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"grid p-fluid\">\r\n\t<div class=\"col-12 md:col-6\">\r\n\t\t<div class=\"card\">\r\n\t\t\t<h5>InputText</h5>\r\n\t\t\t<div class=\"grid formgrid\">\r\n\t\t\t\t<div class=\"col-12 mb-2 lg:col-4 lg:mb-0\">\r\n\t\t\t\t\t<input pInputText type=\"text\" placeholder=\"Default\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col-12 mb-2 lg:col-4 lg:mb-0\">\r\n\t\t\t\t\t<input pInputText type=\"text\" placeholder=\"Disabled\" disabled />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col-12 mb-2 lg:col-4 lg:mb-0\">\r\n\t\t\t\t\t<input pInputText type=\"text\" placeholder=\"Invalid\" class=\"ng-invalid ng-dirty\" />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<h5>Icons</h5>\r\n\t\t\t<div class=\"grid formgrid\">\r\n\t\t\t\t<div class=\"col-12 mb-2 lg:col-4 lg:mb-0\">\r\n\t\t\t\t\t<span class=\"p-input-icon-left\">\r\n\t\t\t\t\t\t<i class=\"pi pi-user\"></i>\r\n\t\t\t\t\t\t<input pInputText type=\"text\" placeholder=\"Username\" />\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col-12 mb-2 lg:col-4 lg:mb-0\">\r\n\t\t\t\t\t<span class=\"p-input-icon-right\">\r\n\t\t\t\t\t\t<input pInputText type=\"text\" placeholder=\"Search\" />\r\n\t\t\t\t\t\t<i class=\"pi pi-search\"></i>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col-12 mb-2 lg:col-4 lg:mb-0\">\r\n\t\t\t\t\t<span class=\"p-input-icon-left p-input-icon-right\">\r\n\t\t\t\t\t\t<i class=\"pi pi-user\"></i>\r\n\t\t\t\t\t\t<input pInputText type=\"text\" placeholder=\"Search\" />\r\n\t\t\t\t\t\t<i class=\"pi pi-search\"></i>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<h5>Float Label</h5>\r\n\t\t\t<span class=\"p-float-label\">\r\n\t\t\t\t<input pInputText id=\"username\" type=\"text\" />\r\n\t\t\t\t<label htmlFor=\"username\">Username</label>\r\n\t\t\t</span>\r\n\r\n\t\t\t<h5>Textarea</h5>\r\n\t\t\t<textarea pInputTextarea placeholder=\"Your Message\" autoResize rows=\"3\" cols=\"30\"></textarea>\r\n\r\n\t\t\t<h5>AutoComplete</h5>\r\n\t\t\t<p-autoComplete placeholder=\"Search\" id=\"dd\" [dropdown]=\"true\" [multiple]=\"true\" [suggestions]=\"filteredCountries\" (completeMethod)=\"filterCountry($event)\" field=\"name\"></p-autoComplete>\r\n\r\n\t\t\t<h5>Calendar</h5>\r\n\t\t\t<p-calendar [showIcon]=\"true\" [showButtonBar]=\"true\" [(ngModel)]=\"selectedDate\"></p-calendar>\r\n\r\n\t\t\t<h5>InputNumber</h5>\r\n\t\t\t<p-inputNumber mode=\"decimal\" [showButtons]=\"true\" [min]=\"0\" [max]=\"100\">\r\n\t\t\t</p-inputNumber>\r\n\r\n\t\t\t<h5>Chips</h5>\r\n\t\t\t<p-chips></p-chips>\r\n\r\n\t\t</div>\r\n\t\t\r\n\t\t<div class=\"card\">\r\n\t\t\t<div class=\"grid\">\r\n\t\t\t\t<div class=\"col-12\">\r\n\t\t\t\t\t<h5>Slider</h5>\r\n\t\t\t\t\t<input type=\"text\" pInputText [(ngModel)]=\"valSlider\" readonly/>\r\n\t\t\t\t\t<p-slider [(ngModel)]=\"valSlider\"></p-slider>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col-12 md:col-6\">\r\n\t\t\t\t\t<h5>Rating</h5>\r\n\t\t\t\t\t<p-rating></p-rating>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col-12 md:col-6\">\r\n\t\t\t\t\t<h5>ColorPicker</h5>\r\n\t\t\t\t\t<p-colorPicker [(ngModel)]=\"valColor\"></p-colorPicker>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col-12\">\r\n\t\t\t\t\t<h5>Knob</h5>\r\n\t\t\t\t\t<p-knob [(ngModel)]=\"valueKnob\" valueTemplate=\"{value}%\" [step]=\"10\" [min]=\"-50\" [max]=\"50\"></p-knob>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n\r\n\t<div class=\"col-12 md:col-6\">\r\n\t\t<div class=\"card\">\r\n\t\t\t<h5>RadioButton</h5>\r\n\t\t\t<div class=\"grid\">\r\n\t\t\t\t<div class=\"col-12 md:col-4\">\r\n\t\t\t\t\t<div class=\"field-radiobutton mb-0\">\r\n\t\t\t\t\t\t<p-radioButton name=\"city\" value=\"Chicago\" [(ngModel)]=\"valRadio\" id=\"city1\"></p-radioButton>\r\n\t\t\t\t\t\t<label for=\"city1\">Chicago</label>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col-12 md:col-4\">\r\n\t\t\t\t\t<div class=\"field-radiobutton\">\r\n\t\t\t\t\t\t<p-radioButton name=\"city\" value=\"Los Angeles\" [(ngModel)]=\"valRadio\"\r\n\t\t\t\t\t\t\t\t\t   id=\"city2\"></p-radioButton>\r\n\t\t\t\t\t\t<label for=\"city2\">Los Angeles</label>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col-12 md:col-4\">\r\n\t\t\t\t\t<div class=\"field-radiobutton\">\r\n\t\t\t\t\t\t<p-radioButton name=\"city\" value=\"New York\" [(ngModel)]=\"valRadio\" id=\"city3\"></p-radioButton>\r\n\t\t\t\t\t\t<label for=\"city3\">New York</label>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<h5>Checkbox</h5>\r\n\t\t\t<div class=\"grid\">\r\n\t\t\t\t<div class=\"col-12 md:col-4\">\r\n\t\t\t\t\t<div class=\"field-checkbox mb-0\">\r\n\t\t\t\t\t\t<p-checkbox name=\"group1\" value=\"Chicago\" [(ngModel)]=\"valCheck\" id=\"ch\"></p-checkbox>\r\n\t\t\t\t\t\t<label for=\"ch\">Chicago</label>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col-12 md:col-4\">\r\n\t\t\t\t\t<div class=\"field-checkbox mb-0\">\r\n\t\t\t\t\t\t<p-checkbox name=\"group1\" value=\"Los Angeles\" [(ngModel)]=\"valCheck\" id=\"la\"></p-checkbox>\r\n\t\t\t\t\t\t<label for=\"la\">Los Angeles</label>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col-12 md:col-4\">\r\n\t\t\t\t\t<div class=\"field-checkbox mb-0\">\r\n\t\t\t\t\t\t<p-checkbox name=\"group1\" value=\"New York\" [(ngModel)]=\"valCheck\" id=\"ny\"></p-checkbox>\r\n\t\t\t\t\t\t<label for=\"ny\">New York</label>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<h5>Input Switch</h5>\r\n\t\t\t<p-inputSwitch [(ngModel)]=\"valSwitch\"></p-inputSwitch>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"card p-fluid\">\r\n\t\t\t<h5>Listbox</h5>\r\n\t\t\t<p-listbox [options]=\"cities\" [(ngModel)]=\"selectedList\" [filter]=\"true\"></p-listbox>\r\n\r\n\t\t\t<h5>Dropdown</h5>\r\n\t\t\t<p-dropdown [options]=\"cities\" [(ngModel)]=\"selectedDrop\" placeholder=\"Select a City\" [showClear]=\"true\"></p-dropdown>\r\n\r\n\t\t\t<h5>MultiSelect</h5>\r\n\t\t\t<p-multiSelect [options]=\"countries\" [(ngModel)]=\"selectedMulti\" defaultLabel=\"Select a Country\" optionLabel=\"name\" class=\"multiselect-custom\">\r\n\t\t\t\t<ng-template let-value pTemplate=\"selectedItems\">\r\n\t\t\t\t\t<div class=\"country-item country-item-value inline-flex align-items-center py-1 px-2 bg-primary text-primary border-round mr-2\" *ngFor=\"let option of selectedMulti\">\r\n\t\t\t\t\t\t<img src=\"assets/demo/flags/flag_placeholder.png\" [class]=\"'flag flag-' + option.code.toLowerCase()\" />\r\n\t\t\t\t\t\t<div>{{option.name}}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div *ngIf=\"!selectedMulti || selectedMulti.length === 0\" class=\"country-placeholder\">\r\n\t\t\t\t\t\tSelect Countries\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</ng-template>\r\n\t\t\t\t<ng-template let-country pTemplate=\"item\">\r\n\t\t\t\t\t<div class=\"flex align-items-center country-item\">\r\n\t\t\t\t\t\t<img src=\"assets/demo/flags/flag_placeholder.png\" [class]=\"'mr-2 flag flag-' + country.code.toLowerCase()\" style=\"width:18px; height:12px;\"/>\r\n\t\t\t\t\t\t<div>{{country.name}}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</ng-template>\r\n\t\t\t</p-multiSelect>\r\n\r\n\t\t\t<h5>TreeSelect</h5>\r\n\t\t\t<p-treeSelect [(ngModel)]=\"selectedNode\" [options]=\"treeSelectNodes\" placeholder=\"Select Item\"></p-treeSelect>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"card\">\r\n\t\t\t<h5>ToggleButton</h5>\r\n\t\t\t<p-toggleButton [(ngModel)]=\"valToggle\" onLabel=\"Yes\" offLabel=\"No\" [style]=\"{width:'10em'}\"></p-toggleButton>\r\n\r\n\t\t\t<h5>SelectButton</h5>\r\n\t\t\t<p-selectButton [options]=\"paymentOptions\" [(ngModel)]=\"valSelect1\" optionLabel=\"name\"></p-selectButton>\r\n\r\n\t\t\t<h5>SelectButton - Multiple</h5>\r\n\t\t\t<p-selectButton [options]=\"paymentOptions\" [(ngModel)]=\"valSelect2\" multiple=\"multiple\" optionLabel=\"name\"></p-selectButton>\r\n\t\t</div>\r\n\t</div>\r\n\r\n\t<div class=\"col-12\">\r\n\t\t<div class=\"card\">\r\n\t\t\t<h5>InputGroup</h5>\r\n\t\t\t<div class=\"grid p-fluid\">\r\n\t\t\t\t<div class=\"col-12 md:col-6\">\r\n\t\t\t\t\t<div class=\"p-inputgroup\">\r\n\t\t\t\t\t\t<span class=\"p-inputgroup-addon\"><i class=\"pi pi-user\"></i></span>\r\n\t\t\t\t\t\t<input type=\"text\" pInputText placeholder=\"Username\">\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<div class=\"col-12 md:col-6\">\r\n\t\t\t\t\t<div class=\"p-inputgroup\">\r\n\t\t\t\t\t\t<span class=\"p-inputgroup-addon\"><i class=\"pi pi-tags\" style=\"line-height: 1.25;\"></i></span>\r\n\t\t\t\t\t\t<span class=\"p-inputgroup-addon\"><i class=\"pi pi-shopping-cart\" style=\"line-height: 1.25;\"></i></span>\r\n\t\t\t\t\t\t<input type=\"text\" pInputText placeholder=\"Price\">\r\n\t\t\t\t\t\t<span class=\"p-inputgroup-addon\">$</span>\r\n\t\t\t\t\t\t<span class=\"p-inputgroup-addon\">.00</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<div class=\"col-12 md:col-6\">\r\n\t\t\t\t\t<div class=\"p-inputgroup\">\r\n\t\t\t\t\t\t<button type=\"button\" pButton pRipple label=\"Search\"></button>\r\n\t\t\t\t\t\t<input type=\"text\" pInputText placeholder=\"Keyword\">\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<div class=\"col-12 md:col-6\">\r\n\t\t\t\t\t<div class=\"p-inputgroup\">\r\n\t\t\t\t\t\t<span class=\"p-inputgroup-addon p-inputgroup-addon-checkbox\">\r\n\t\t\t\t\t\t\t<p-checkbox name=\"group1\" value=\"Confirm\" [(ngModel)]=\"valCheck\" id=\"cf\"></p-checkbox>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<input type=\"text\" pInputText placeholder=\"Confirm\">\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>"
        },
        {
            "name": "InputDropdown",
            "id": "component-InputDropdown-77c272fe6db560db4d1b12a34519876026bb78c7c1e8b87e287cd66279a91c26b81ad143f0ed2ed3a4d669117f46cae35871e9442795a59940cab504427cd7ae",
            "file": "src/stories/primeng/input-fields/input-dropdown/input-dropdown.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "c-dropdown",
            "styleUrls": [],
            "styles": [],
            "template": "<p-dropdown        [options]=\"cities\"\n        [(ngModel)]=\"selectedCity\"\n        optionLabel=\"name\"\n        [disabled]=\"disabled\"\n    ></p-dropdown>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "cities",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "selectedCity",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'c-dropdown',\r\n    template: `<p-dropdown\r\n        [options]=\"cities\"\r\n        [(ngModel)]=\"selectedCity\"\r\n        optionLabel=\"name\"\r\n        [disabled]=\"disabled\"\r\n    ></p-dropdown>`,\r\n    styleUrls: [],\r\n})\r\nexport default class InputDropdown {\r\n    @Input() disabled: boolean = false;\r\n    cities;\r\n    selectedCity;\r\n\r\n    ngOnInit() {\r\n        this.cities = [\r\n            { name: 'New York', code: 'NY' },\r\n            { name: 'Rome', code: 'RM' },\r\n            { name: 'London', code: 'LDN' },\r\n            { name: 'Istanbul', code: 'IST' },\r\n            { name: 'Paris', code: 'PRS' },\r\n        ];\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "InputNumber",
            "id": "component-InputNumber-cfd3c475658c2655b322851fc91d16afd6e6951d9ff91ccd6980c6f4f3b728ed84e112c514e4183d60ea69cfddf761eec5b5632a4e62f09257fac32e44182abf",
            "file": "src/stories/primeng/input-fields/input-number/input-number.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "c-inputNumber",
            "styleUrls": [],
            "styles": [],
            "template": "<p-inputNumber placeholder=\"Input Number\"></p-inputNumber>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'c-inputNumber',\r\n    template: `<p-inputNumber placeholder=\"Input Number\"></p-inputNumber>`,\r\n    styleUrls: [],\r\n})\r\nexport default class InputNumber {}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "InputText",
            "id": "component-InputText-0de95848ad28a173da18630ff7376661f2eed616958a370e60c220d851672747d54956c30e5a02a59715866b270e5797105116ca8779d608069ccd9e64bb5b0c",
            "file": "src/stories/primeng/input-fields/input-text/input-text.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "c-inputText",
            "styleUrls": [],
            "styles": [],
            "template": "<input type=\"text\" pInputText placeholder=\"Input Text\" />",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'c-inputText',\r\n    template: `<input type=\"text\" pInputText placeholder=\"Input Text\" />`,\r\n    styleUrls: [],\r\n})\r\nexport default class InputText {}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "InputTextArea",
            "id": "component-InputTextArea-bacac26a508b210957d71ef312f17b993fd48bee8bbddfc5a036571d3f58f08f8160ce2c8120323182f5bc8b652bbffdf43ad4ca938d04b47621eefc17205610",
            "file": "src/stories/primeng/input-fields/input-text-area/input-text-area.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "c-inputTextArea",
            "styleUrls": [],
            "styles": [],
            "template": "<textarea        rows=\"5\"\n        cols=\"30\"\n        pInputTextarea\n        placeholder=\"Input Text Area\"\n    ></textarea>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'c-inputTextArea',\r\n    template: `<textarea\r\n        rows=\"5\"\r\n        cols=\"30\"\r\n        pInputTextarea\r\n        placeholder=\"Input Text Area\"\r\n    ></textarea>`,\r\n    styleUrls: [],\r\n})\r\nexport default class InputTextArea {}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "InputUpload",
            "id": "component-InputUpload-c0cc1796a382fc6d15ae47845318b8b5d57642133094671376bb5069c99d29e011d6770f4c4659b05d9f3b7e51172a0ce65a2d4c446108919fc66122d5bf5dc5",
            "file": "src/stories/primeng/input-fields/input-file-upload/input-file-upload.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "MessageService",
                    "type": "injectable"
                }
            ],
            "selector": "c-fileUpload",
            "styleUrls": [],
            "styles": [],
            "template": "<p-fileUpload       mode=\"basic\"\n       chooseLabel=\"Choose\"\n       name=\"demo[]\"\n       url=\"https://www.primefaces.org/cdn/api/upload.php\"\n       accept=\"image/*\"\n       [maxFileSize]=\"maxFileSize\"\n       (onUpload)=\"onUpload($event)\"\n   ></p-fileUpload>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "maxFileSize",
                    "defaultValue": "1048576",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onUpload",
                    "args": [
                        {
                            "name": "event",
                            "type": "UploadEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "UploadEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { MessageService } from 'primeng/api';\r\n\r\ninterface UploadEvent {\r\n    originalEvent: Event;\r\n    files: File[];\r\n}\r\n@Component({\r\n    selector: 'c-fileUpload',\r\n    template: ` <p-fileUpload\r\n        mode=\"basic\"\r\n        chooseLabel=\"Choose\"\r\n        name=\"demo[]\"\r\n        url=\"https://www.primefaces.org/cdn/api/upload.php\"\r\n        accept=\"image/*\"\r\n        [maxFileSize]=\"maxFileSize\"\r\n        (onUpload)=\"onUpload($event)\"\r\n    ></p-fileUpload>`,\r\n    styleUrls: [],\r\n    providers: [MessageService],\r\n})\r\nexport default class InputUpload {\r\n    @Input() maxFileSize = 1048576;\r\n\r\n    constructor(private messageService: MessageService) {}\r\n\r\n    onUpload(event: UploadEvent) {\r\n        this.messageService.add({\r\n            severity: 'info',\r\n            summary: 'Success',\r\n            detail: 'File Uploaded with Basic Mode',\r\n        });\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "messageService",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 24,
                "jsdoctags": [
                    {
                        "name": "messageService",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "InvalidStateComponent",
            "id": "component-InvalidStateComponent-07dcf327c1592040b8fd364c269a31987ac63958943126b851349dcad0539241cd34e60cb539cc664a09c8ac500aee7c26a75674f93fd35bb3530950c18eb95f",
            "file": "src/app/showcase/components/invalidstate/invalidstate.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./invalidstate.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "cities",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "countries",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "filteredCountries",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "value1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "value10",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "value2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "value3",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "value4",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "value5",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "value6",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "value7",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "value8",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "value9",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 31
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "searchCountry",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { CountryService } from '../../service/countryservice';\r\n\r\n@Component({\r\n    templateUrl: './invalidstate.component.html'\r\n})\r\nexport class InvalidStateComponent implements OnInit {\r\n\r\n    countries: any[];\r\n\r\n    cities: any[];\r\n\r\n    filteredCountries: any[];\r\n\r\n    value1: any;\r\n\r\n    value2: any;\r\n\r\n    value3: any;\r\n\r\n    value4: any;\r\n\r\n    value5: any;\r\n\r\n    value6: any;\r\n\r\n    value7: any;\r\n\r\n    value8: any;\r\n\r\n    value9: any;\r\n\r\n    value10: any;\r\n\r\n    constructor(private countryService: CountryService) {\r\n        this.cities = [\r\n            {name: 'New York', code: 'NY'},\r\n            {name: 'Rome', code: 'RM'},\r\n            {name: 'London', code: 'LDN'},\r\n            {name: 'Istanbul', code: 'IST'},\r\n            {name: 'Paris', code: 'PRS'}\r\n        ];\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.countryService.getCountries().then(countries => {\r\n            this.countries = countries;\r\n        });\r\n    }\r\n\r\n    searchCountry(event) {\r\n        // in a real application, make a request to a remote url with the query and return filtered results,\r\n        // for demo we filter at client side\r\n        const filtered: any[] = [];\r\n        const query = event.query;\r\n        for (let i = 0; i < this.countries.length; i++) {\r\n            const country = this.countries[i];\r\n            if (country.name.toLowerCase().indexOf(query.toLowerCase()) == 0) {\r\n                filtered.push(country);\r\n            }\r\n        }\r\n\r\n        this.filteredCountries = filtered;\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "countryService",
                        "type": "CountryService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 33,
                "jsdoctags": [
                    {
                        "name": "countryService",
                        "type": "CountryService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"card\">\r\n    <h5>Invalid State</h5>\r\n    <div class=\"grid p-fluid\">\r\n        <div class=\"col-12 md:col-6\">\r\n            <div class=\"field mt-3\">\r\n                <label for=\"inputtext\">InputText</label>\r\n                <input type=\"text\" id=\"inputtext\" pInputText class=\"ng-invalid ng-dirty\">\r\n            </div>\r\n            <div class=\"field\">\r\n                <label for=\"autocomplete\">AutoComplete</label>\r\n                <p-autoComplete inputId=\"autocomplete\" [(ngModel)]=\"value1\" [suggestions]=\"filteredCountries\" (completeMethod)=\"searchCountry($event)\" field=\"name\" class=\"ng-invalid ng-dirty\"></p-autoComplete>\r\n\r\n            </div>\r\n            <div class=\"field\">\r\n                <label for=\"calendar\">Calendar</label>\r\n                <p-calendar inputId=\"calendar\" [(ngModel)]=\"value2\" class=\"ng-invalid ng-dirty\" [showIcon]=\"true\"></p-calendar>\r\n            </div>\r\n            <div class=\"field\">\r\n                <label for=\"chips\">Chips</label>\r\n                <p-chips inputId=\"chips\" [(ngModel)]=\"value3\" class=\"ng-invalid ng-dirty\"></p-chips>\r\n            </div>\r\n            <div class=\"field\">\r\n                <label for=\"password\">Password</label>\r\n                <p-password [(ngModel)]=\"value8\" [toggleMask]=\"true\" class=\"ng-invalid ng-dirty\"></p-password>\r\n            </div>\r\n        </div>\r\n        \r\n        <div class=\"col-12 md:col-6\">                    \r\n            <div class=\"field mt-3\">\r\n                <label for=\"inputmask\">InputMask</label>\r\n                <p-inputMask inputId=\"inputmask\" mask=\"99/99/9999\" [(ngModel)]=\"value5\" class=\"ng-invalid ng-dirty\"></p-inputMask>\r\n            </div>\r\n            <div class=\"field\">\r\n                <label for=\"inputnumber\">InputNumber</label>\r\n                <p-inputNumber inputId=\"inputnumber\" [(ngModel)]=\"value6\" class=\"ng-invalid ng-dirty\"></p-inputNumber>\r\n            </div>\r\n            <div class=\"field\">\r\n                <label for=\"dropdown\">Dropdown</label>\r\n                <p-dropdown inputId=\"dropdown\" [autoDisplayFirst]=\"false\" [options]=\"cities\" [(ngModel)]=\"value9\" optionLabel=\"name\" class=\"ng-invalid ng-dirty\"></p-dropdown>\r\n            </div>\r\n            <div class=\"field\">\r\n                <label for=\"multiselect\">MultiSelect</label>\r\n                <p-multiSelect inputId=\"multiselect\" [options]=\"cities\" [(ngModel)]=\"value10\" optionLabel=\"name\" [filter]=\"false\" class=\"ng-invalid ng-dirty\"></p-multiSelect>\r\n            </div>\r\n            <div class=\"field\">\r\n                <label for=\"textarea\">Textarea</label>\r\n                <textarea inputId=\"textarea\" rows=\"3\" cols=\"30\" [(ngModel)]=\"value4\" pInputTextarea class=\"ng-invalid ng-dirty\"></textarea>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n"
        },
        {
            "name": "LateLoanPaymentDashboardComponent",
            "id": "component-LateLoanPaymentDashboardComponent-3e3e40e69e7695a178f4212cc66aeac03b6333d1f158608767f929d2930bee9e317620fedd66004a132dc411097de08bb40cdd1d5b0b79e18afe351be8241f40",
            "file": "src/app/core/dashboard/component/late-loan-payment-dashboard/late-loan-payment-dashboard.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-late-loan-payment-dashboard",
            "styleUrls": [
                "./late-loan-payment-dashboard.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./late-loan-payment-dashboard.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "list",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { DashboardService } from '../../service/dashboard.service';\r\n\r\n@Component({\r\n  selector: 'app-late-loan-payment-dashboard',\r\n  templateUrl: './late-loan-payment-dashboard.component.html',\r\n  styleUrls: ['./late-loan-payment-dashboard.component.scss']\r\n})\r\nexport class LateLoanPaymentDashboardComponent implements OnInit {\r\n  list=[];\r\n  loading=false;\r\n  constructor(private api:DashboardService) {\r\n    \r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.api.getLateLoanPayment().toPromise().then(res=>{\r\n      this.list=res;\r\n    })\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./late-loan-payment-dashboard.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "api",
                        "type": "DashboardService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "api",
                        "type": "DashboardService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"grid field p-fluid\">\r\n    <div class=\"col-12 md:col-8\">\r\n      <h5 class=\"pt-2\">Tunggakan Peminjaman</h5>\r\n    </div>\r\n</div>\r\n\r\n<p-table [value]=\"list\" [loading]=\"loading\" [paginator]=\"true\" pageLinks=\"3\" [rows]=\"10\"  styleClass=\"p-datatable-gridlines\"responsiveLayout=\"scroll\" scrollHeight=\"250px\">\r\n<ng-template pTemplate=\"header\">\r\n    <tr>\r\n        <th>\r\n            <div class=\"flex justify-content-between align-items-center\">\r\n                Nama Karyawan\r\n            </div>\r\n        </th>\r\n        <th>\r\n            <div class=\"flex justify-content-between align-items-center\">\r\n                Lama Tunggakan\r\n            </div>\r\n        </th>\r\n        <th>\r\n            <div class=\"flex justify-content-between align-items-center\">\r\n                Jumlah Tunggakan \r\n            </div>\r\n        </th>\r\n    </tr>\r\n</ng-template>\r\n<ng-template pTemplate=\"body\" let-data let-rowIndex=\"rowIndex\">\r\n    <tr [pSelectableRow]=\"data\">\r\n        <td  style=\"min-width: 12rem;\">\r\n            {{data?.name}}\r\n        </td>\r\n        <td  style=\"min-width: 12rem;\">\r\n            {{data?.installment}}\r\n        </td>\r\n        <td  style=\"min-width: 12rem;\">\r\n            {{data?.amount}}\r\n        </td>\r\n    </tr>\r\n</ng-template>\r\n<ng-template pTemplate=\"emptymessage\">\r\n    <tr>\r\n        <td class=\"text-center\" colspan=\"3\" style=\"height: 180px;\">No data found.</td>\r\n    </tr>\r\n</ng-template>\r\n<ng-template pTemplate=\"loadingbody\">\r\n    <tr>\r\n        <td class=\"text-center\" colspan=\"3\">Loading data. Please wait.</td>\r\n    </tr>\r\n</ng-template>\r\n</p-table>"
        },
        {
            "name": "LeaveDialogComponent",
            "id": "component-LeaveDialogComponent-963b9f8bd30ff789ef2d885aaefb6861d59da5924b61d0881ccca7af9b5a5e1dc6e5b1ab1a604749cc9386519d45225442790d320ee023912dc79a1e29addbae",
            "file": "src/stories/primeng/confirm-dialogs/leave-dialog/leave-dialog.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "BrowserAnimationsModule",
                    "type": "module"
                }
            ],
            "selector": "leave-dialog",
            "styleUrls": [
                "./leave-dialog.component.css"
            ],
            "styles": [],
            "template": "<button pButton label=\"Show\" (click)=\"showDialog()\"></button>\n<p-dialog [(visible)]=\"display\" [baseZIndex]=\"10000\" [modal]=\"true\" [draggable]=\"false\">\n    <ng-template pTemplate=\"header\">\n        <div class=\"dialog-header\">\n            <div>\n                <svg width=\"24\" height=\"24\" viewBox=\"0 0 18 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M12.5 1.25015C12.5 0.863431 12.3242 0.50015 12.0195 0.265775C11.7148 0.0314 11.3203 -0.0545375 10.9453 0.0392125L3.91797 1.79702C3.08594 2.00406 2.5 2.75406 2.5 3.61343V17.5001H1.25C0.558594 17.5001 0 18.0587 0 18.7501C0 19.4416 0.558594 20.0001 1.25 20.0001H12.5V1.25015ZM10 10.0001C10 10.6916 9.58203 11.2501 9.0625 11.2501C8.54297 11.2501 8.125 10.6916 8.125 10.0001C8.125 9.30874 8.54297 8.75015 9.0625 8.75015C9.58203 8.75015 10 9.30874 10 10.0001ZM13.75 5.00015H17.5V18.7501C17.5 19.4416 18.0586 20.0001 18.75 20.0001H21.25C21.9414 20.0001 22.5 19.4416 22.5 18.7501C22.5 18.0587 21.9414 17.5001 21.25 17.5001H20V5.00015C20 3.62124 18.8789 2.50015 17.5 2.50015H13.75V5.00015Z\" fill=\"#0E8EC5\"/>\n                </svg>\n            </div>\n            <div>\n                <span>Leave Page</span>\n            </div>\n        </div>\n    </ng-template>\n    <ng-template pTemplate=\"content\">\n        <span>\n            {{message}}\n        </span>\n    </ng-template>\n    <ng-template pTemplate=\"footer\">\n        <button pButton ngClass=\"secondary\" label=\"No\" (click)=\"onReject()\"></button>\n        <button pButton ngClass=\"primary\" label=\"Yes\" (click)=\"onAccept()\"></button>\n    </ng-template>\n</p-dialog>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "message",
                    "defaultValue": "\"Are you sure to leave this page? The last changes you\\'ve made won\\'t be saved.\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "accept",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "display",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 39
                }
            ],
            "methodsClass": [
                {
                    "name": "onAccept",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onReject",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "showDialog",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\n\r\n@Component({\r\n    selector: 'leave-dialog',\r\n    template: `\r\n    <button pButton label=\"Show\" (click)=\"showDialog()\"></button>\r\n    <p-dialog [(visible)]=\"display\" [baseZIndex]=\"10000\" [modal]=\"true\" [draggable]=\"false\">\r\n        <ng-template pTemplate=\"header\">\r\n            <div class=\"dialog-header\">\r\n                <div>\r\n                    <svg width=\"24\" height=\"24\" viewBox=\"0 0 18 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path d=\"M12.5 1.25015C12.5 0.863431 12.3242 0.50015 12.0195 0.265775C11.7148 0.0314 11.3203 -0.0545375 10.9453 0.0392125L3.91797 1.79702C3.08594 2.00406 2.5 2.75406 2.5 3.61343V17.5001H1.25C0.558594 17.5001 0 18.0587 0 18.7501C0 19.4416 0.558594 20.0001 1.25 20.0001H12.5V1.25015ZM10 10.0001C10 10.6916 9.58203 11.2501 9.0625 11.2501C8.54297 11.2501 8.125 10.6916 8.125 10.0001C8.125 9.30874 8.54297 8.75015 9.0625 8.75015C9.58203 8.75015 10 9.30874 10 10.0001ZM13.75 5.00015H17.5V18.7501C17.5 19.4416 18.0586 20.0001 18.75 20.0001H21.25C21.9414 20.0001 22.5 19.4416 22.5 18.7501C22.5 18.0587 21.9414 17.5001 21.25 17.5001H20V5.00015C20 3.62124 18.8789 2.50015 17.5 2.50015H13.75V5.00015Z\" fill=\"#0E8EC5\"/>\r\n                    </svg>\r\n                </div>\r\n                <div>\r\n                    <span>Leave Page</span>\r\n                </div>\r\n            </div>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"content\">\r\n            <span>\r\n                {{message}}\r\n            </span>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"footer\">\r\n            <button pButton ngClass=\"secondary\" label=\"No\" (click)=\"onReject()\"></button>\r\n            <button pButton ngClass=\"primary\" label=\"Yes\" (click)=\"onAccept()\"></button>\r\n        </ng-template>\r\n    </p-dialog>\r\n    `,\r\n    styleUrls: ['./leave-dialog.component.css'],\r\n    providers: [BrowserAnimationsModule]\r\n})\r\n\r\nexport class LeaveDialogComponent {\r\n    @Input() message: string = \"Are you sure to leave this page? The last changes you\\'ve made won\\'t be saved.\";\r\n    @Output() accept = new EventEmitter<any>();\r\n    display: boolean = false;\r\n\r\n    showDialog() {\r\n        this.display = true;\r\n    }\r\n\r\n    onAccept(){\r\n        this.accept.emit(true);\r\n        this.display = false;\r\n    }\r\n\r\n    onReject(){\r\n        this.display = false;\r\n    }\r\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "div.dialog-header{\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n}\r\n\r\n:host ::ng-deep .p-dialog.p-component{\r\n    max-height: 196px;\r\n    max-width: 495px;\r\n}\r\n\r\n:host ::ng-deep .p-dialog-header{\r\n    padding: 3rem 3rem 1rem 3rem;\r\n    border-bottom: 1px solid #EEEEEE;\r\n}\r\n\r\n:host ::ng-deep .p-dialog-content{\r\n    padding-left: 3rem;\r\n    padding-right: 3rem;\r\n}\r\n\r\n:host ::ng-deep .p-dialog-footer{\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: end;\r\n    padding: 1rem 3rem 3rem 3rem;\r\n    border-top: 1px solid #EEEEEE;\r\n}\r\n\r\n:host ::ng-deep .p-dialog-header div div span{\r\n    font-size: 20px;\r\n    font-weight: 700;\r\n}\r\n\r\ndiv.dialog-header div svg{\r\n    margin-right: 1rem;\r\n}\r\n\r\n:host ::ng-deep .p-dialog-content span{\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n}\r\n\r\n:host ::ng-deep .p-element.secondary.p-button.p-component{\r\n    width: 128px;\r\n    height: 35px;\r\n    font-size: 14px;\r\n    font-weight: 700;\r\n    background-color: #E8F2FF;\r\n    color: #0E8EC5;\r\n    border: none;\r\n}\r\n\r\n:host ::ng-deep .p-element.primary.p-button.p-component{\r\n    width: 128px;\r\n    height: 35px;\r\n    font-size: 14px;\r\n    font-weight: 700;\r\n    background-color: #0E8EC5;\r\n    color: #FFFFFF;\r\n    border: none;\r\n}",
                    "styleUrl": "./leave-dialog.component.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "LeaveRequestDashboardComponent",
            "id": "component-LeaveRequestDashboardComponent-b491f36b9d26be4ee0347cdbac5576eaf99f0c76d593eccec9943fbcfddad4e4e082d087df276eeae1d752082176f27eece96c1c6ff22d679f3661275d761dce",
            "file": "src/app/core/dashboard/component/leave-request-dashboard/leave-request-dashboard.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-leave-request-dashboard",
            "styleUrls": [
                "./leave-request-dashboard.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./leave-request-dashboard.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "chartOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "listOpt",
                    "defaultValue": "[\r\n        { label: 'Hari ini', value: 0 },\r\n        { label: 'Minggu ini', value: 1 },\r\n        { label: 'Bulan Ini', value: 4 },\r\n    ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "loading",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "subcription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 83
                }
            ],
            "methodsClass": [
                {
                    "name": "getData",
                    "args": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 98,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 120,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSelect",
                    "args": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "reload",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 112,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "wait",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 93,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        132
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { HelperService } from 'src/app/core/service/helper-service';\r\nimport { ConfigService } from 'src/app/core/service/app.config.service';\r\nimport { DashboardService } from '../../service/dashboard.service';\r\n\r\n@Component({\r\n    selector: 'app-leave-request-dashboard',\r\n    templateUrl: './leave-request-dashboard.component.html',\r\n    styleUrls: ['./leave-request-dashboard.component.scss'],\r\n})\r\nexport class LeaveRequestDashboardComponent implements OnInit, OnDestroy {\r\n    chartOptions;\r\n    listOpt = [\r\n        { label: 'Hari ini', value: 0 },\r\n        { label: 'Minggu ini', value: 1 },\r\n        { label: 'Bulan Ini', value: 4 },\r\n    ];\r\n    loading = true;\r\n    constructor(\r\n        private srv: DashboardService,\r\n        private configService: ConfigService,\r\n        private help: HelperService\r\n    ) {\r\n        this.chartOptions = {\r\n            chart: {\r\n                id: 'leave-chart',\r\n                height: 350,\r\n                type: 'bar',\r\n                toolbar: {\r\n                    show: false,\r\n                },\r\n            },\r\n            tooltip: {\r\n                enabled: false,\r\n            },\r\n            plotOptions: {\r\n                bar: {\r\n                    horizontal: true,\r\n                    barHeight: '30%',\r\n                    borderRadius: 10,\r\n                },\r\n            },\r\n            yaxis: {\r\n                labels: {\r\n                    show: true,\r\n                    align: 'right',\r\n                    minWidth: 0,\r\n                    maxWidth: 160,\r\n                    style: {\r\n                        colors: [],\r\n                        fontSize: '12px',\r\n                        fontFamily: 'SF Pro Text',\r\n                        fontWeight: 400,\r\n                    },\r\n                },\r\n            },\r\n            colors: ['#14B8A6', '14B8A6'],\r\n            series: [\r\n                {\r\n                    data: [\r\n                        {\r\n                            x: 'Izin',\r\n                            y: 0,\r\n                        },\r\n                        {\r\n                            x: 'Cuti',\r\n                            y: 0,\r\n                        },\r\n                        {\r\n                            x: 'Lembur',\r\n                            y: 0,\r\n                        },\r\n                    ],\r\n                },\r\n            ],\r\n        };\r\n    }\r\n\r\n    onSelect(e) {\r\n        this.getData(e);\r\n    }\r\n\r\n    subcription;\r\n    ngOnInit(): void {\r\n        this.getData(0);\r\n        this.subcription = this.configService.menuToggle$.subscribe(\r\n            (config) => {\r\n                this.wait();\r\n            }\r\n        );\r\n    }\r\n\r\n    async wait() {\r\n        await new Promise((f) => setTimeout(f, 200));\r\n        this.reload();\r\n    }\r\n\r\n    getData(e) {\r\n        this.loading = true;\r\n        this.srv\r\n            .getTimeRequest(e)\r\n            .toPromise()\r\n            .then((res) => {\r\n                this.chartOptions.series[0].data[0].y = res.permitRate;\r\n                this.chartOptions.series[0].data[1].y = res.leaveRate;\r\n                this.chartOptions.series[0].data[2].y = res.overtimeRate;\r\n                this.loading = false;\r\n                this.reload();\r\n            });\r\n    }\r\n\r\n    reload() {\r\n        //todo error\r\n        var chart = new ApexCharts(\r\n            document.querySelector('#TimeReqChart'),\r\n            this.chartOptions\r\n        );\r\n        chart.render();\r\n    }\r\n    ngOnDestroy(): void {\r\n        this.subcription.unsubscribe();\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./leave-request-dashboard.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "srv",
                        "type": "DashboardService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "configService",
                        "type": "ConfigService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "help",
                        "type": "HelperService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "srv",
                        "type": "DashboardService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "configService",
                        "type": "ConfigService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "help",
                        "type": "HelperService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "  <div class=\"grid field p-fluid\">\r\n    <div class=\"col-12 md:col-8 m-0 p-0\">\r\n      <h5 class=\"pt-2\">Grafik Pengajuan</h5>\r\n    </div>\r\n    <div class=\"col-12 md:col-4\">\r\n      <p-dropdown [options]=\"listOpt\"\r\n      (onChange)=\"onSelect($event.value)\"></p-dropdown>\r\n    </div>\r\n  </div>\r\n    <apx-chart #TimeReqChart\r\n    [series]=\"chartOptions.series\"\r\n    [tooltip]=\"chartOptions.tooltip\"\r\n    [chart]=\"chartOptions.chart\"\r\n    [yaxis]=\"chartOptions.yaxis\"\r\n    [responsive]=\"chartOptions.responsive\"\r\n    [plotOptions]=\"chartOptions.plotOptions\"\r\n    [colors]=\"chartOptions.colors\"\r\n  ></apx-chart>"
        },
        {
            "name": "LinovUploadComponent",
            "id": "component-LinovUploadComponent-a9a64683059ab6a57901dc76d6820c874bc0a87a507ad714d7ebdccfeeee96bd4c0be41b72f960d0136b11fc372de987cf1ab7959cf47cb1b16bb24a17b3d370",
            "file": "src/app/core/shared-component/linov-upload/linov-upload.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-linov-upload",
            "styleUrls": [
                "./linov-upload.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./linov-upload.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "allowedFileType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "fileType",
                    "defaultValue": "'image'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "isImage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "isImagePreview",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "maxFileSize",
                    "defaultValue": "1048576",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "src",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onChange",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "extensionMap",
                    "defaultValue": "new Map([\r\n        ['excel', ['.XLSX', '.XLS']],\r\n        ['image', ['.JPG', '.PNG', 'JPEG']],\r\n        ['docs', ['.DOCX', '.DOC', '.PDF', '.XLSX', '.XLS']],\r\n    ])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "file",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "formatedFileType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "formatedSize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "uploadedFiles",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                }
            ],
            "methodsClass": [
                {
                    "name": "clear",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "click",
                    "args": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "formatBytes",
                    "args": [
                        {
                            "name": "bytes",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "bytes",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onUpload",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { MessageBoxService } from '../../service/message-box.service';\r\n\r\n@Component({\r\n    selector: 'app-linov-upload',\r\n    templateUrl: './linov-upload.component.html',\r\n    styleUrls: ['./linov-upload.component.scss'],\r\n})\r\nexport class LinovUploadComponent implements OnInit {\r\n    @Input() src;\r\n    @Input() isImage;\r\n    @Input() isImagePreview;\r\n    @Output() onChange = new EventEmitter<any>();\r\n    @Input() maxFileSize = 1048576;\r\n    @Input() allowedFileType;\r\n    @Input() fileType = 'image';\r\n    extensionMap = new Map([\r\n        ['excel', ['.XLSX', '.XLS']],\r\n        ['image', ['.JPG', '.PNG', 'JPEG']],\r\n        ['docs', ['.DOCX', '.DOC', '.PDF', '.XLSX', '.XLS']],\r\n    ]);\r\n    formatedFileType;\r\n    formatedSize;\r\n    file;\r\n    uploadedFiles;\r\n\r\n    constructor(private msg: MessageBoxService) {}\r\n\r\n    ngOnInit(): void {\r\n        if (!this.allowedFileType) {\r\n            this.allowedFileType = this.extensionMap.get(this.fileType);\r\n        }\r\n        this.formatedSize = this.formatBytes(this.maxFileSize);\r\n        this.formatedFileType = this.allowedFileType\r\n            .toString()\r\n            .split('.')\r\n            .join('')\r\n            .toUpperCase();\r\n    }\r\n\r\n    formatBytes(bytes) {\r\n        var marker = 1024;\r\n        var decimal = 0;\r\n        var kiloBytes = marker;\r\n        var megaBytes = marker * marker;\r\n        var gigaBytes = marker * marker * marker;\r\n        if (bytes >= gigaBytes)\r\n            return (bytes / gigaBytes).toFixed(decimal) + ' GB';\r\n        else if (bytes >= megaBytes)\r\n            return (bytes / megaBytes).toFixed(decimal) + ' MB';\r\n        else if (bytes >= kiloBytes)\r\n            return (bytes / kiloBytes).toFixed(decimal) + ' KB';\r\n        else return bytes + ' Bytes';\r\n    }\r\n\r\n    click(e) {\r\n        this.onChange.emit(e);\r\n    }\r\n    clear() {\r\n        this.uploadedFiles = null;\r\n        this.file = null;\r\n        this.src = null;\r\n        this.onChange.emit(null);\r\n    }\r\n    onUpload(event) {\r\n        this.uploadedFiles = event.target.files.item(0);\r\n        let extArray = this.uploadedFiles.name.split('.');\r\n        let ext = extArray[extArray.length - 1];\r\n        if (this.uploadedFiles.size > 1000000) {\r\n            this.msg.showError('Ukuran gambar terlalu besar');\r\n        } else if (\r\n            !this.formatedFileType.toLowerCase().includes(ext.toLowerCase())\r\n        ) {\r\n            this.msg.showError(\r\n                'File yang di perbolehkan hanya: ' + this.formatedFileType\r\n            );\r\n        } else {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(this.uploadedFiles);\r\n            reader.onload = () => {\r\n                this.src = reader.result as string;\r\n            };\r\n            this.onChange.emit(this.uploadedFiles);\r\n        }\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".btn-cls{\r\n    position: absolute;\r\n    z-index: 1;\r\n    right: 20px;\r\n  }\r\n  \r\n.img-coy {\r\n    position: relative;\r\n  }",
                    "styleUrl": "./linov-upload.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "msg",
                        "type": "MessageBoxService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 25,
                "jsdoctags": [
                    {
                        "name": "msg",
                        "type": "MessageBoxService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<img [src]=\"src\" class=\"img-coy\" *ngIf=\"isImage || isImagePreview else name\" style='width: 100%' />\r\n<input #upload id=\"files\" type=\"file\" (change)=\"onUpload($event)\" pInputText [(ngModel)]=\"file\" style=\"display: none;\"\r\n    maxFileSize=\"1000000\" accept=\"image/*\">\r\n<button *ngIf=\"!src\" class=\"btn-cancel\" pButton pRipple label=\"Browse\" icon=\"pi pi-upload\" (click)=\"upload.click()\"></button>\r\n<button *ngIf=\"src\" pButton class=\"p-button-outlined\" icon=\"pi pi-times\" (click)=\"clear()\" label=\"Batal\"></button>\r\n<ng-template #name>{{ uploadedFiles?.name }} </ng-template>\r\n<small *ngIf=\"!uploadedFiles\">File supported : {{formatedFileType}} ( Max. {{formatedSize}} ) </small>\r\n"
        },
        {
            "name": "ListComponent",
            "id": "component-ListComponent-86e3dd6b8d7eed21c06b73265ac63bb7328e0fc186d1e65b6191a4a17d2dbb9526e84f56a3e8e5ee6af6f9e652d962c34e840d026c7061be24c930c6ccb83e55",
            "file": "src/app/showcase/components/list/list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./list.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "orderCities",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "products",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Product[]",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "sortField",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "sortOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SelectItem[]",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "sortOrder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "sourceCities",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "targetCities",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSortChange",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { SelectItem } from 'primeng/api';\r\nimport { Product } from '../../api/product';\r\nimport { ProductService } from '../../service/productservice';\r\n\r\n@Component({\r\n    templateUrl: './list.component.html',\r\n    // styleUrls: ['../../../assets/demo/badges.scss']\r\n})\r\nexport class ListComponent implements OnInit {\r\n\r\n    products: Product[];\r\n\r\n    sortOptions: SelectItem[];\r\n\r\n    sortOrder: number;\r\n\r\n    sortField: string;\r\n\r\n    sourceCities: any[];\r\n\r\n    targetCities: any[];\r\n\r\n    orderCities: any[];\r\n\r\n    constructor(private productService: ProductService) {}\r\n\r\n    ngOnInit() {\r\n        this.productService.getProducts().then(data => this.products = data);\r\n\r\n        this.sourceCities = [\r\n            {name: 'San Francisco', code: 'SF'},\r\n            {name: 'London', code: 'LDN'},\r\n            {name: 'Paris', code: 'PRS'},\r\n            {name: 'Istanbul', code: 'IST'},\r\n            {name: 'Berlin', code: 'BRL'},\r\n            {name: 'Barcelona', code: 'BRC'},\r\n            {name: 'Rome', code: 'RM'}];\r\n        this.targetCities = [];\r\n\r\n        this.orderCities = [\r\n            {name: 'San Francisco', code: 'SF'},\r\n            {name: 'London', code: 'LDN'},\r\n            {name: 'Paris', code: 'PRS'},\r\n            {name: 'Istanbul', code: 'IST'},\r\n            {name: 'Berlin', code: 'BRL'},\r\n            {name: 'Barcelona', code: 'BRC'},\r\n            {name: 'Rome', code: 'RM'}];\r\n\r\n        this.sortOptions = [\r\n            {label: 'Price High to Low', value: '!price'},\r\n            {label: 'Price Low to High', value: 'price'}\r\n        ];\r\n    }\r\n\r\n    onSortChange(event) {\r\n        const value = event.value;\r\n\r\n        if (value.indexOf('!') === 0) {\r\n            this.sortOrder = -1;\r\n            this.sortField = value.substring(1, value.length);\r\n        } else {\r\n            this.sortOrder = 1;\r\n            this.sortField = value;\r\n        }\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "productService",
                        "type": "ProductService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 24,
                "jsdoctags": [
                    {
                        "name": "productService",
                        "type": "ProductService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"grid\">\r\n\t<div class=\"col-12\">\r\n\t\t<div class=\"card\">\r\n\t\t\t<h5>DataView</h5>\r\n\t\t\t<p-dataView #dv [value]=\"products\" [paginator]=\"true\" pageLinks=\"3\" [rows]=\"9\" filterBy=\"name\" [sortField]=\"sortField\" [sortOrder]=\"sortOrder\" layout=\"grid\">\r\n\t\t\t\t<ng-template pTemplate=\"header\">\r\n\t\t\t\t\t<div class=\"grid grid-nogutter\">\r\n\t\t\t\t\t\t<div class=\"col-6 text-left\">\r\n\t\t\t\t\t\t\t<p-dropdown [options]=\"sortOptions\" [(ngModel)]=\"sortKey\" placeholder=\"Sort By Price\" (onChange)=\"onSortChange($event)\"></p-dropdown>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"col-6 text-right\">\r\n\t\t\t\t\t\t\t<p-dataViewLayoutOptions></p-dataViewLayoutOptions>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</ng-template>\r\n\r\n\t\t\t\t<ng-template let-product pTemplate=\"listItem\">\r\n\t\t\t\t\t<div class=\"col-12\">\r\n\t\t\t\t\t\t<div class=\"flex flex-column md:flex-row align-items-center p-3 w-full\">\r\n\t\t\t\t\t\t\t<img [src]=\"'assets/demo/images/product/' + product.image\" [alt]=\"product.name\" class=\"my-4 md:my-0 w-9 md:w-10rem shadow-2 mr-5\"/>\r\n\t\t\t\t\t\t\t<div class=\"flex-1 text-center md:text-left\">\r\n\t\t\t\t\t\t\t\t<div class=\"font-bold text-2xl\">{{product.name}}</div>\r\n\t\t\t\t\t\t\t\t<div class=\"mb-3\">{{product.description}}</div>\r\n\t\t\t\t\t\t\t\t<p-rating [ngModel]=\"product.rating\" [readonly]=\"true\" [cancel]=\"false\"></p-rating>\r\n\t\t\t\t\t\t\t\t<div class=\"flex align-items-center mt-2\">\r\n\t\t\t\t\t\t\t\t\t<i class=\"pi pi-tag mr-2\"></i>\r\n\t\t\t\t\t\t\t\t\t<span class=\"font-semibold\">{{product.category}}</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class=\"flex flex-row md:flex-column justify-content-between w-full md:w-auto align-items-center md:align-items-end mt-5 md:mt-0\">\r\n\t\t\t\t\t\t\t\t<span class=\"text-2xl font-semibold mb-2 align-self-center md:align-self-end\">${{product.price}}</span>\r\n\t\t\t\t\t\t\t\t<p-button icon=\"pi pi-shopping-cart\" label=\"Add to Cart\" [disabled]=\"product.inventoryStatus === 'OUTOFSTOCK'\" class=\"mb-2\"></p-button>\r\n\t\t\t\t\t\t\t\t<span [class]=\"'product-badge status-' + product.inventoryStatus.toLowerCase()\">{{product.inventoryStatus}}</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</ng-template>\r\n\r\n\t\t\t\t<ng-template let-product pTemplate=\"gridItem\">\r\n\t\t\t\t\t<div class=\"col-12 md:col-4\">\r\n\t\t\t\t\t\t<div class=\"card m-3 border-1 surface-border\">\r\n\t\t\t\t\t\t\t<div class=\"flex align-items-center justify-content-between\">\r\n\t\t\t\t\t\t\t\t<div class=\"flex align-items-center\">\r\n\t\t\t\t\t\t\t\t\t<i class=\"pi pi-tag mr-2\"></i>\r\n\t\t\t\t\t\t\t\t\t<span class=\"font-semibold\">{{product.category}}</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<span [class]=\"'sm:ml-2 product-badge status-' + product.inventoryStatus.toLowerCase()\">{{product.inventoryStatus}}</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class=\"text-center\">\r\n\t\t\t\t\t\t\t\t<img [src]=\"'assets/demo/images/product/' + product.image\" [alt]=\"product.name\" class=\"w-9 shadow-2 my-3 mx-0\"/>\r\n\t\t\t\t\t\t\t\t<div class=\"text-2xl font-bold\">{{product.name}}</div>\r\n\t\t\t\t\t\t\t\t<div class=\"mb-3\">{{product.description}}</div>\r\n\t\t\t\t\t\t\t\t<p-rating [ngModel]=\"product.rating\" [readonly]=\"true\" [cancel]=\"false\"></p-rating>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class=\"flex align-items-center justify-content-between\">\r\n\t\t\t\t\t\t\t\t<span class=\"text-2xl font-semibold\">${{product.price}}</span>\r\n\t\t\t\t\t\t\t\t<p-button icon=\"pi pi-shopping-cart\" [disabled]=\"product.inventoryStatus === 'OUTOFSTOCK'\"></p-button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</ng-template>\r\n\t\t\t</p-dataView>\r\n\t\t</div>\r\n\t</div>\r\n\r\n\t<div class=\"col-12 lg:col-8\">\r\n\t\t<div class=\"card\">\r\n\t\t\t<h5>PickList</h5>\r\n\t\t\t<p-pickList [source]=\"sourceCities\" [target]=\"targetCities\" sourceHeader=\"From\" targetHeader=\"To\" dragdrop=\"true\"\r\n\t\t\t\t\t\t[responsive]=\"true\" [sourceStyle]=\"{'height':'250px'}\" [targetStyle]=\"{'height':'250px'}\">\r\n\t\t\t\t<ng-template let-city pTemplate=\"item\">\r\n\t\t\t\t\t<div>{{city.name}}</div>\r\n\t\t\t\t</ng-template>\r\n\t\t\t</p-pickList>\r\n\t\t</div>\r\n\t</div>\r\n\r\n\t<div class=\"col-12 lg:col-4\">\r\n\t\t<div class=\"card\">\r\n\t\t\t<h5>OrderList</h5>\r\n\t\t\t<p-orderList [value]=\"orderCities\" header=\"Cities\" dragdrop=\"true\" [listStyle]=\"{'height':'250px'}\">\r\n\t\t\t\t<ng-template let-city pTemplate=\"item\">\r\n\t\t\t\t\t<div>{{city.name}}</div>\r\n\t\t\t\t</ng-template>\r\n\t\t\t</p-orderList>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n"
        },
        {
            "name": "LoanInfoDashboardComponent",
            "id": "component-LoanInfoDashboardComponent-8261e5e10da08a3e3cbd1f886fe5a22e355c156fb0f7e68846b92d31c46463f52ac9ffa5cf3dc159073788da152e348f7c179ddc356208f9ae82060d03be95d7",
            "file": "src/app/core/dashboard/component/loan-info-dashboard/loan-info-dashboard.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-loan-info-dashboard",
            "styleUrls": [
                "./loan-info-dashboard.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./loan-info-dashboard.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "year",
                    "defaultValue": "new Date().getFullYear()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { DashboardService } from '../../service/dashboard.service';\r\n\r\n@Component({\r\n  selector: 'app-loan-info-dashboard',\r\n  templateUrl: './loan-info-dashboard.component.html',\r\n  styleUrls: ['./loan-info-dashboard.component.scss']\r\n})\r\nexport class LoanInfoDashboardComponent implements OnInit {\r\n\r\n  constructor(private api:DashboardService) { }\r\n  data;\r\n  year=new Date().getFullYear();\r\n  ngOnInit(): void {\r\n    this.api.getLoanInfo().toPromise().then(res=>{\r\n      this.data=res;\r\n    })\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./loan-info-dashboard.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "api",
                        "type": "DashboardService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "api",
                        "type": "DashboardService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"grid\">\r\n    <div class=\"flex align-items-center justify-content-center bg-teal-100 border-round\" [ngStyle]=\"{width: '6.5rem', height: '6.5rem'}\">\r\n        <i class=\"bi bi-credit-card text-teal-500 text-6xl\"></i>\r\n    </div>\r\n    <div class=\"flex-1 pl-3 grid\">\r\n        <div class=\"col-12  border-bottom-custom\">\r\n            <label class=\"title-font cus-text-lg\">Total Peminjaman</label>\r\n        </div>\r\n        <div class=\"col-7 grid\">\r\n            <div class=\"col-12 \">\r\n                <label class=\"content-font cus-text-base\">{{data?.total || '-'}} Peminjaman</label>\r\n            </div>\r\n            <div class=\"col-12 \">\r\n                <label class=\"link-font cus-text-xs\">Periode {{year || '-'}}</label>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-5 flex align-items-stretch flex-wrap\">\r\n            <div class=\"col-12  flex align-items-center justify-content-center\">\r\n                <label class=\"title-font cus-text-lg\">{{data?.amount|| '-'}}</label>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n"
        },
        {
            "name": "LoginComponent",
            "id": "component-LoginComponent-7a33f74467c909fabfe2b210360a15546a923118c614f69322e9a5de93107507441a16892dcadd54fd4bc7fec5f530e77b525963bf03a92770186838e73d1348",
            "file": "src/app/layout/login/login.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-login",
            "styleUrls": [
                "./login.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./login.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "formControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UntypedFormGroup",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "images",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "isLoading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "model",
                    "defaultValue": "{\r\n        username: '',\r\n        password: '',\r\n    }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "password",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "responsiveOptions",
                    "defaultValue": "[\r\n        {\r\n            breakpoint: '1024px',\r\n            numVisible: 5,\r\n        },\r\n        {\r\n            breakpoint: '768px',\r\n            numVisible: 3,\r\n        },\r\n        {\r\n            breakpoint: '560px',\r\n            numVisible: 1,\r\n        },\r\n    ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "token",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 42
                }
            ],
            "methodsClass": [
                {
                    "name": "createForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getImages",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 94,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 102,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onLoginSSO",
                    "args": [
                        {
                            "name": "code",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 122,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "code",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n    ChangeDetectionStrategy,\r\n    ChangeDetectorRef,\r\n    Component,\r\n    OnInit,\r\n} from '@angular/core';\r\nimport {\r\n    UntypedFormBuilder,\r\n    UntypedFormGroup,\r\n    Validators,\r\n} from '@angular/forms';\r\nimport { ApiService } from 'src/app/core/service/api.service';\r\nimport * as CryptoJS from 'crypto-js';\r\nimport { AuthenticationService } from 'src/app/core/service/authentication.service';\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { firstValueFrom, lastValueFrom } from 'rxjs';\r\n\r\nexport function encryptionPassword(formValue) {\r\n    var encryptedBase64Key = 'bXVzdGJlMTZieXRlc2tleQ==';\r\n    var plaintText = formValue;\r\n    var parsedBase64Key = CryptoJS.enc.Base64.parse(encryptedBase64Key);\r\n    var encryptedData = CryptoJS.AES.encrypt(plaintText, parsedBase64Key, {\r\n        mode: CryptoJS.mode.ECB,\r\n        padding: CryptoJS.pad.Pkcs7,\r\n    });\r\n    let encPassword = encryptedData.toString();\r\n    return encPassword;\r\n}\r\n@Component({\r\n    selector: 'app-login',\r\n    templateUrl: './login.component.html',\r\n    styleUrls: ['./login.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class LoginComponent implements OnInit {\r\n    model = {\r\n        username: '',\r\n        password: '',\r\n    };\r\n    token;\r\n    password;\r\n    formControl: UntypedFormGroup;\r\n    isLoading = false;\r\n    images: any[];\r\n    responsiveOptions: any[] = [\r\n        {\r\n            breakpoint: '1024px',\r\n            numVisible: 5,\r\n        },\r\n        {\r\n            breakpoint: '768px',\r\n            numVisible: 3,\r\n        },\r\n        {\r\n            breakpoint: '560px',\r\n            numVisible: 1,\r\n        },\r\n    ];\r\n    constructor(\r\n        private srv: ApiService,\r\n        private formBuilder: UntypedFormBuilder,\r\n        private auth: AuthenticationService,\r\n        private route: Router,\r\n        private router: ActivatedRoute,\r\n        private http: HttpClient,\r\n        private cd: ChangeDetectorRef\r\n    ) {\r\n        this.createForm();\r\n    }\r\n\r\n    createForm() {\r\n        this.formControl = this.formBuilder.group({\r\n            username: ['', Validators.required],\r\n            password: ['', Validators.required],\r\n        });\r\n    }\r\n    ngOnInit(): void {\r\n        this.getImages().then((images) => {\r\n            this.images = images;\r\n            this.cd.detectChanges();\r\n        });\r\n\r\n        this.router.queryParams.subscribe((queryParams) => {\r\n            this.token = queryParams['token'];\r\n\r\n            if (this.token) {\r\n                this.onLoginSSO(this.token);\r\n            }\r\n        });\r\n    }\r\n\r\n    getImages() {\r\n        return lastValueFrom(this.http.get<any>('assets/demo/data/photos.json'))\r\n            .then((res) => <any[]>res.data)\r\n            .then((data) => {\r\n                return data;\r\n            });\r\n    }\r\n\r\n    onLogin() {\r\n        if (this.formControl.valid) {\r\n            this.isLoading = true;\r\n            const loginForm = this.formControl.getRawValue();\r\n            loginForm.password = encryptionPassword(loginForm.password);\r\n            this.srv.postLogin('auth/loginV2', loginForm).subscribe({\r\n                next: (resp) => {\r\n                    this.auth.createSession(resp);\r\n                    this.isLoading = false;\r\n                    this.route.navigate(['/']);\r\n                },\r\n                error: (err) => {\r\n                    this.isLoading = false;\r\n                },\r\n            });\r\n        } else {\r\n            this.formControl.markAllAsTouched();\r\n        }\r\n    }\r\n\r\n    onLoginSSO(code) {\r\n        this.isLoading = true;\r\n        this.srv.get('open/auth/detail/' + code).subscribe({\r\n            next: (resp) => {\r\n                let data = JSON.stringify(resp);\r\n                this.auth.createSession(data);\r\n                this.isLoading = false;\r\n                this.route.navigate(['/']);\r\n            },\r\n            error: (err) => {\r\n                this.isLoading = false;\r\n            },\r\n        });\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".container {\r\n  width: 100%;  \r\n  min-height: 100vh;\r\n  display: -webkit-box;\r\n  display: -webkit-flex;\r\n  display: -moz-box;\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: #ffffff;  \r\n}\r\n.login-box{\r\n    width: 25rem;\r\n}\r\n\r\n.login-logo{\r\n    height: 2.5rem;\r\n}\r\n\r\n.sub-title{\r\n    font-size: 12px;\r\n    text-align: center;\r\n    color: #b4b4b4;\r\n}\r\n\r\n",
                    "styleUrl": "./login.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "srv",
                        "type": "ApiService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "formBuilder",
                        "type": "UntypedFormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "auth",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 60,
                "jsdoctags": [
                    {
                        "name": "srv",
                        "type": "ApiService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "formBuilder",
                        "type": "UntypedFormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "auth",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"card grid p-0 m-0\">\r\n    <div class=\"lg:col-6 hide-mobile p-0 m-0\">\r\n        <p-galleria [(value)]=\"images\" class=\"fit-galeria\"  [autoPlay]=\"true\" [transitionInterval]=\"4000\" [responsiveOptions]=\"responsiveOptions\" [containerStyle]=\"{'max-height': '500px'}\" [numVisible]=\"3\"\r\n        [circular]=\"true\" [showItemNavigators]=\"true\" [showThumbnails]=\"false\"> \r\n            <ng-template pTemplate=\"item\" let-item>\r\n                <img [src]=\"item.itemImageSrc\" style=\"width: 100%;height: 100vh;min-height: 355px; display: block;\" />\r\n            </ng-template>\r\n        </p-galleria>\r\n    </div>\r\n    <div class=\"col-12 lg:col-6 m-0 p-0\">\r\n        <form (ngSubmit)=\"onLogin()\">\r\n                <div class=\"container\">\r\n                    <div class=\"login-box p-2\">\r\n                        <div class=\"p-fluid mt-4\" [formGroup]=\"formControl\">\r\n                            <h3 class=\"p-float-label mb-4 text-left\">\r\n                                Login UPAHKU\r\n                            </h3>\r\n                            <div class=\"field\">\r\n                                <label for=\"_username\">Nama Pengguna</label>\r\n                                <div>\r\n                                    <input pInputText id=\"_username\" [ngClass]=\"{'ng-dirty ng-invalid' : (formControl.get('username').touched || formControl.get('username').dirty ) &&\r\n                                    !formControl.get('username').valid}\" formControlName=\"username\" type=\"text\" />\r\n                                    <app-error-field-helper [formControlKey]=\"formControl.get('username')\" ></app-error-field-helper>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div class=\"field\">\r\n                                <label for=\"password\">Sandi</label>\r\n                                <div>\r\n                                    <p-password id=\"password\" [feedback]=\"false\" [toggleMask]=\"true\" formControlName=\"password\" styleClass=\"p-input-icon-right\" [ngClass]=\"{'ng-dirty ng-invalid' : (formControl.get('password').touched || formControl.get('password').dirty ) &&\r\n                                    !formControl.get('password').valid}\" ></p-password> \r\n                                    <app-error-field-helper [formControlKey]=\"formControl.get('password')\" ></app-error-field-helper>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <span class=\"p-float-label\" style=\"margin-top: 2.5em;\">\r\n                                    <button pButton pRipple label=\"Masuk\" [loading]=\"isLoading\"></button>\r\n                            </span>\r\n                            <span class=\"p-float-label text-center\" style=\"margin-top: 2.5em;\">\r\n                                <small>\r\n                                    Lupa kata sandi anda? <u style=\"cursor: pointer;\" class=\"primary-color\">Lupa Sandi</u>\r\n                                </small>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        </form>\r\n    </div>\r\n</div>"
        },
        {
            "name": "LovComponent",
            "id": "component-LovComponent-912534965e927d71ec37f0588da27633f911f11cb6d9023946bcefb0b5e77f475e5f881c184bd1ef4ba8f2be5e528e5b04b9298eee1034ba05143017bb06b9cd",
            "file": "src/app/core/shared-component/lov/lov.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-lov",
            "styleUrls": [
                "./lov.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./lov.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "addedAll",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "chaining",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "customOption",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "{}",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "fetchOnInit",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "filter",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "getFirstValue",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "getLastIndexValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "haveNullValue",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "isValueLabel",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "needEmitWhenFound",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "ngClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "readonly",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "uri",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "nullAlert",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "EventEmitter"
                },
                {
                    "name": "selected",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "list",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "loading",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "selectedData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onChange",
                    "args": [
                        {
                            "name": "lov",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 209,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "lov",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n    ChangeDetectorRef,\r\n    Component,\r\n    EventEmitter,\r\n    Input,\r\n    OnChanges,\r\n    OnInit,\r\n    Output,\r\n} from '@angular/core';\r\nimport { BehaviorSubject, isEmpty } from 'rxjs';\r\nimport { ApiService } from '../../service/api.service';\r\n\r\n@Component({\r\n    selector: 'app-lov',\r\n    templateUrl: './lov.component.html',\r\n    styleUrls: ['./lov.component.scss'],\r\n})\r\nexport class LovComponent implements OnInit, OnChanges {\r\n    @Input() label: string;\r\n    @Input() haveNullValue = false;\r\n    @Input() chaining = false;\r\n    @Input() uri: string;\r\n    @Input() value: string;\r\n    @Input() readonly = false;\r\n    @Input() disabled = false;\r\n    @Input() filter = false;\r\n    @Input() fetchOnInit = true;\r\n    @Input() addedAll = false;\r\n    @Input() getFirstValue = false;\r\n    @Input() getLastIndexValue;\r\n    @Input() needEmitWhenFound = false;\r\n    @Input() ngClass;\r\n    @Input() isValueLabel = false;\r\n    @Input() customOption = [];\r\n    loading = true;\r\n\r\n    selectedData;\r\n    @Output() selected = new EventEmitter<any>();\r\n    @Output() nullAlert = new EventEmitter<any>();\r\n    list = [];\r\n    constructor(private srv: ApiService, private ref: ChangeDetectorRef) {}\r\n\r\n    ngOnChanges(): void {\r\n        if (this.chaining) {\r\n            this.ngOnInit();\r\n        } else {\r\n            if (this.value && this.list.length > 0) {\r\n                if (this.isValueLabel) {\r\n                    this.selectedData = this.list.find(\r\n                        (data) => data.value === this.value\r\n                    );\r\n                    if (this.selectedData) {\r\n                        this.selected.emit(this.selectedData);\r\n                    }\r\n                } else {\r\n                    this.selectedData = this.list.find(\r\n                        (data) => data.key === this.value\r\n                    );\r\n                    if (this.selectedData) {\r\n                        this.selected.emit(this.selectedData);\r\n                    }\r\n                }\r\n                this.ref.markForCheck();\r\n            }\r\n        }\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.selectedData = null;\r\n        if (!this.fetchOnInit) {\r\n            return;\r\n        }\r\n\r\n        if (this.uri) {\r\n            this.list = [];\r\n            this.loading = true;\r\n            this.srv.get(this.uri).subscribe({\r\n                next: (res) => {\r\n                    if (res.length == 0) {\r\n                        this.nullAlert.emit(null);\r\n                    }\r\n                    this.loading = false;\r\n                    let resp = res;\r\n                    resp.map((item) => {\r\n                        item.id = item.key;\r\n\r\n                        return item;\r\n                    });\r\n\r\n                    if (this.getFirstValue) {\r\n                        this.selectedData = resp[0];\r\n                        this.onChange(this.selectedData);\r\n                    }\r\n                    if (this.getLastIndexValue) {\r\n                        this.selectedData =\r\n                            resp[resp.length - (1 + this.getLastIndexValue)];\r\n                        this.onChange(this.selectedData);\r\n                    }\r\n\r\n                    if (!this.chaining) {\r\n                        this.ngOnChanges();\r\n                    }\r\n                    if (this.haveNullValue) {\r\n                        const nullVal: any[] = [\r\n                            {\r\n                                id: '',\r\n                                key: '',\r\n                                value: '-',\r\n                            },\r\n                        ];\r\n                        resp = nullVal.concat(resp);\r\n                    }\r\n                    if (this.addedAll) {\r\n                        const allVal: any[] = [\r\n                            {\r\n                                id: 'All',\r\n                                key: 'All',\r\n                                value: 'All',\r\n                            },\r\n                        ];\r\n                        resp = allVal.concat(resp);\r\n                    }\r\n                    this.list = resp;\r\n                    if (this.value) {\r\n                        if (this.isValueLabel) {\r\n                            this.selectedData = this.list.find(\r\n                                (data) => data.value === this.value\r\n                            );\r\n                            if (this.selectedData) {\r\n                                this.selected.emit(this.selectedData);\r\n                            }\r\n                        } else {\r\n                            this.selectedData = this.list.find(\r\n                                (data) => data.key === this.value\r\n                            );\r\n                            if (this.selectedData) {\r\n                                this.selected.emit(this.selectedData);\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                error: (err) => {\r\n                    this.loading = false;\r\n                },\r\n            });\r\n        } else if (this.customOption) {\r\n            this.customOption.map((item) => {\r\n                item.value = item.value || item.name;\r\n                item.key = item.key || item.id;\r\n                item.id = item.id || item.key;\r\n                return item;\r\n            });\r\n            if (this.getFirstValue) {\r\n                this.selectedData = this.customOption[0];\r\n                this.onChange(this.selectedData);\r\n            }\r\n            if (this.getLastIndexValue) {\r\n                this.selectedData =\r\n                    this.customOption[\r\n                        this.customOption.length - (1 + this.getLastIndexValue)\r\n                    ];\r\n                this.onChange(this.selectedData);\r\n            }\r\n\r\n            if (!this.chaining) {\r\n                this.ngOnChanges();\r\n            }\r\n            if (this.haveNullValue) {\r\n                const nullVal: any[] = [\r\n                    {\r\n                        id: '',\r\n                        key: '',\r\n                        value: '-',\r\n                    },\r\n                ];\r\n                this.customOption = nullVal.concat(this.customOption);\r\n            }\r\n            if (this.addedAll) {\r\n                const allVal: any[] = [\r\n                    {\r\n                        id: 'All',\r\n                        key: 'All',\r\n                        value: 'All',\r\n                    },\r\n                ];\r\n                this.customOption = allVal.concat(this.customOption);\r\n            }\r\n            this.list = this.customOption;\r\n            if (this.value) {\r\n                if (this.isValueLabel) {\r\n                    this.selectedData = this.list.find(\r\n                        (data) => data.value === this.value\r\n                    );\r\n                    if (this.selectedData) {\r\n                        this.selected.emit(this.selectedData);\r\n                    }\r\n                } else {\r\n                    this.selectedData = this.list.find(\r\n                        (data) => data.key === this.value\r\n                    );\r\n                    if (this.selectedData) {\r\n                        this.selected.emit(this.selectedData);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    onChange(lov: any): void {\r\n        this.value = null;\r\n        this.selected.emit(lov);\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./lov.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "srv",
                        "type": "ApiService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "ref",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 40,
                "jsdoctags": [
                    {
                        "name": "srv",
                        "type": "ApiService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "ref",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnChanges"
            ],
            "templateData": "<p-dropdown\r\n[(ngModel)]=\"selectedData\"\r\n(onChange)=\"onChange($event.value)\"\r\n[options]=\"list\"\r\n[disabled]=\"disabled\"\r\n[filter]=\"filter\"\r\n[readonly]=\"readonly\"\r\noptionLabel=\"value\"\r\nplaceholder=\"{{ label }}\"\r\n[ngClass]=\"ngClass\"\r\n>\r\n\r\n<ng-template let-country pTemplate=\"empty\">\r\n    <p-progressBar [style]=\"{height: '4px'}\" mode=\"indeterminate\" *ngIf=\"loading else normal\"></p-progressBar>\r\n</ng-template>\r\n</p-dropdown>\r\n\r\n<ng-template #normal>Data tidak ditemukan</ng-template>\r\n"
        },
        {
            "name": "MainButton",
            "id": "component-MainButton-dfe64c381c6a2e7e379c7ed157e2faa7a9fd7a7be97a08ee40107953f977630df0329df94701e12a69c2cd11cae68e2ab8023b5e9d1c5800d3243fe2b1f401c2",
            "file": "src/stories/primeng/buttons/main-button/main-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "main-button",
            "styleUrls": [
                "./main-button.css"
            ],
            "styles": [],
            "template": "<button\npButton\n[label]=\"label\"\ntype=\"button\"\n[ngClass]=\"classess\"\n[disabled]=\"disabled\"\n[icon]=\"icon\"\n[iconPos]=\"iconPos\"\n[ngStyle]=\"{'background-color' : backgroundColor}\">\n<span style=\"margin-left: 0.5em;\" *ngIf=\"isCounter\">&#40;{{count}}&#41;</span>\n</button>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "defaultValue": "\"#0E8EC5\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "classess",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "count",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "iconPos",
                    "defaultValue": "\"left\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "isCounter",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "click",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from \"@angular/common\";\r\nimport { Component, Input, Output, EventEmitter } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: 'main-button',\r\n  template: `\r\n    <button \r\n    pButton\r\n    [label]=\"label\"\r\n    type=\"button\" \r\n    [ngClass]=\"classess\" \r\n    [disabled]=\"disabled\"\r\n    [icon]=\"icon\"\r\n    [iconPos]=\"iconPos\"\r\n    [ngStyle]=\"{'background-color' : backgroundColor}\">\r\n    <span style=\"margin-left: 0.5em;\" *ngIf=\"isCounter\">&#40;{{count}}&#41;</span>\r\n    </button>\r\n    `,\r\n  styleUrls: ['./main-button.css']\r\n})\r\n\r\nexport default class MainButton {\r\n  @Input() label: string = 'Button';\r\n  @Input() backgroundColor: string = \"#0E8EC5\";\r\n  @Input() iconPos : string = \"left\";\r\n  @Input() disabled: boolean = false;\r\n  @Input() classess?: string;\r\n  @Input() icon? : string;\r\n  @Output() click = new EventEmitter<any>();\r\n  @Input() isCounter : boolean = false;\r\n  @Input() count? : number;\r\n\r\n  onClick(event : any){\r\n    this.click.emit(event);\r\n  }\r\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "div{\r\n    display: flex;\r\n}\r\n\r\nbutton{\r\n    /* display: flex; */\r\n    flex-direction: row-reverse;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 128px;\r\n    height: 35px;\r\n    border: none;\r\n    border-radius: 4px;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #FFFFFF;\r\n    margin: 0;\r\n}\r\n\r\n:host ::ng-deep .p-button-label{\r\n    flex: none;\r\n}\r\n\r\nbutton:hover{\r\n    cursor: pointer;\r\n}\r\n\r\nbutton i{\r\n    color: #FFFFFF;\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n}",
                    "styleUrl": "./main-button.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "MediaComponent",
            "id": "component-MediaComponent-999ba0bd982da2f5e7b04e0cfd44f20f15f2dd3e9df78388b8f6e061291eb9e2b66d49759adac17420482f086284258155a9d656d1929be14ab032eb747aef6a",
            "file": "src/app/showcase/components/media/media.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-media",
            "styleUrls": [],
            "styles": [
                "\n    :host ::ng-deep .p-carousel-indicators .p-link{\n      border-radius:5px !important;\n    }\n  "
            ],
            "templateUrl": [
                "./media.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "carouselResponsiveOptions",
                    "defaultValue": "[\r\n      {\r\n          breakpoint: '1024px',\r\n          numVisible: 3,\r\n          numScroll: 3\r\n      },\r\n      {\r\n          breakpoint: '768px',\r\n          numVisible: 2,\r\n          numScroll: 2\r\n      },\r\n      {\r\n          breakpoint: '560px',\r\n          numVisible: 1,\r\n          numScroll: 1\r\n      }\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "galleriaResponsiveOptions",
                    "defaultValue": "[\r\n      {\r\n          breakpoint: '1024px',\r\n          numVisible: 5\r\n      },\r\n      {\r\n          breakpoint: '960px',\r\n          numVisible: 4\r\n      },\r\n      {\r\n          breakpoint: '768px',\r\n          numVisible: 3\r\n      },\r\n      {\r\n          breakpoint: '560px',\r\n          numVisible: 1\r\n      }\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "images",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "products",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Product[]",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { ProductService } from '../../service/productservice';\r\nimport { PhotoService } from '../../service/photoservice';\r\nimport { Product } from '../../api/product';\r\n\r\n@Component({\r\n  selector: 'app-media',\r\n  templateUrl: './media.component.html',\r\n//   styleUrls: ['../../../assets/demo/badges.scss'],\r\n  styles:[`\r\n    :host ::ng-deep .p-carousel-indicators .p-link{\r\n      border-radius:5px !important;\r\n    }\r\n  `]\r\n})\r\nexport class MediaComponent implements OnInit {\r\n\r\n  products: Product[];\r\n\r\n  images: any[];\r\n\r\n  galleriaResponsiveOptions: any[] = [\r\n      {\r\n          breakpoint: '1024px',\r\n          numVisible: 5\r\n      },\r\n      {\r\n          breakpoint: '960px',\r\n          numVisible: 4\r\n      },\r\n      {\r\n          breakpoint: '768px',\r\n          numVisible: 3\r\n      },\r\n      {\r\n          breakpoint: '560px',\r\n          numVisible: 1\r\n      }\r\n  ];\r\n\r\n  carouselResponsiveOptions: any[] = [\r\n      {\r\n          breakpoint: '1024px',\r\n          numVisible: 3,\r\n          numScroll: 3\r\n      },\r\n      {\r\n          breakpoint: '768px',\r\n          numVisible: 2,\r\n          numScroll: 2\r\n      },\r\n      {\r\n          breakpoint: '560px',\r\n          numVisible: 1,\r\n          numScroll: 1\r\n      }\r\n  ];\r\n\r\n  constructor(private productService: ProductService, private photoService: PhotoService) {}\r\n\r\n  ngOnInit() {\r\n      this.productService.getProductsSmall().then(products => {\r\n          this.products = products;\r\n      });\r\n\r\n      this.photoService.getImages().then(images => {\r\n          this.images = images;\r\n      });\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n    :host ::ng-deep .p-carousel-indicators .p-link{\n      border-radius:5px !important;\n    }\n  \n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "productService",
                        "type": "ProductService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "photoService",
                        "type": "PhotoService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 57,
                "jsdoctags": [
                    {
                        "name": "productService",
                        "type": "ProductService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "photoService",
                        "type": "PhotoService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"grid p-fluid\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <h5>Carousel</h5>\r\n            <p-carousel [value]=\"products\" [numVisible]=\"3\" [numScroll]=\"3\" [circular]=\"false\" [responsiveOptions]=\"carouselResponsiveOptions\">\r\n                <ng-template let-product pTemplate=\"item\">\r\n                        <div class=\"border-round m-2 text-center p-2\" style=\"border: 1px solid var(--surface-d)\">\r\n                            <div class=\"my-5\">\r\n                                <img src=\"assets/demo/images/product/{{product.image}}\" [alt]=\"product.name\" class=\"shadow-4\" width=\"50%\"/>\r\n                            </div>\r\n                            <div>\r\n                                <h5 class=\"mb-1\">{{product.name}}</h5>\r\n                                <h6 class=\"mt-0 mb-3\">${{product.price}}</h6>\r\n                                <span [class]=\"'product-badge status-'+product.inventoryStatus.toLowerCase()\">{{product.inventoryStatus}}</span>\r\n                                <div class=\"my-5\">\r\n                                    <button pButton pRipple icon=\"pi pi-search\" class=\"mr-2 p-button-rounded\"></button>\r\n                                    <button pButton pRipple icon=\"pi pi-star-fill\" class=\"mr-2 p-button-rounded p-button-success\"></button>\r\n                                    <button pButton pRipple icon=\"pi pi-cog\" class=\"p-button-rounded p-button-info\"></button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                </ng-template>\r\n            </p-carousel>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <h5>Image</h5>\r\n            <div class=\"flex justify-content-center\">\r\n                <p-image src=\"assets/demo/images/galleria/galleria10.jpg\" alt=\"Image\" width=\"250\" [preview]=\"true\"></p-image>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <h5>Galleria</h5>\r\n            <p-galleria [value]=\"images\" [responsiveOptions]=\"galleriaResponsiveOptions\"\r\n                        [containerStyle]=\"{'max-width': '800px', 'margin':'auto'}\" [numVisible]=\"6\" [circular]=\"true\">\r\n                <ng-template pTemplate=\"item\" let-item>\r\n                    <img [src]=\"item.itemImageSrc\" style=\"width: 100%; display: block;\"/>\r\n                </ng-template>\r\n                <ng-template pTemplate=\"thumbnail\" let-item>\r\n                    <div class=\"grid nogutter justify-center\">\r\n                        <img [src]=\"item.thumbnailImageSrc\" style=\"display: block;\"/>\r\n                    </div>\r\n                </ng-template>\r\n            </p-galleria>\r\n        </div>\r\n    </div>\r\n</div>\r\n"
        },
        {
            "name": "MenusComponent",
            "id": "component-MenusComponent-9a6decc8ecb34e1e3792d6eedadee12fae3e36577f241ee145b9b838772fe1764e8de037d3b4df0c0e78273fc516c38eedf31b7e10ab70a0e9e1717a0bc8ec14",
            "file": "src/app/showcase/components/menus/menus.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./menus.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "breadcrumbItems",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem[]",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "items",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem[]",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "megaMenuItems",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MegaMenuItem[]",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "menuItems",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem[]",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "pageIndex",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "panelMenuItems",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem[]",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "plainMenuItems",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem[]",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "routeItems",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem[]",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "slideItems",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem[]",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "stepsItems",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem[]",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "tieredItems",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem[]",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { MegaMenuItem, MenuItem } from 'primeng/api';\r\n\r\n@Component({\r\n    templateUrl: './menus.component.html',\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class MenusComponent implements OnInit {\r\n\r\n    breadcrumbItems: MenuItem[];\r\n\r\n    tieredItems: MenuItem[];\r\n\r\n    items: MenuItem[];\r\n\r\n    routeItems: MenuItem[];\r\n\r\n    megaMenuItems: MegaMenuItem[];\r\n\r\n    panelMenuItems: MenuItem[];\r\n\r\n    stepsItems: MenuItem[];\r\n\r\n    slideItems: MenuItem[];\r\n\r\n    menuItems: MenuItem[];\r\n\r\n    plainMenuItems: MenuItem[];\r\n\r\n    pageIndex: number = 0;\r\n\r\n    ngOnInit() {\r\n\r\n        this.tieredItems = [\r\n            {\r\n                label: 'Customers',\r\n                icon: 'pi pi-fw pi-table',\r\n                items: [\r\n                    {\r\n                        label: 'New',\r\n                        icon: 'pi pi-fw pi-plus',\r\n                        items: [\r\n                            {\r\n                                label: 'Customer',\r\n                                icon: 'pi pi-fw pi-plus'\r\n                            },\r\n                            {\r\n                                label: 'Duplicate',\r\n                                icon: 'pi pi-fw pi-copy'\r\n                            },\r\n\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: 'Edit',\r\n                        icon: 'pi pi-fw pi-user-edit'\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                label: 'Orders',\r\n                icon: 'pi pi-fw pi-shopping-cart',\r\n                items: [\r\n                    {\r\n                        label: 'View',\r\n                        icon: 'pi pi-fw pi-list'\r\n                    },\r\n                    {\r\n                        label: 'Search',\r\n                        icon: 'pi pi-fw pi-search'\r\n                    }\r\n\r\n                ]\r\n            },\r\n            {\r\n                label: 'Shipments',\r\n                icon: 'pi pi-fw pi-envelope',\r\n                items: [\r\n                    {\r\n                        label: 'Tracker',\r\n                        icon: 'pi pi-fw pi-compass',\r\n\r\n                    },\r\n                    {\r\n                        label: 'Map',\r\n                        icon: 'pi pi-fw pi-map-marker',\r\n\r\n                    },\r\n                    {\r\n                        label: 'Manage',\r\n                        icon: 'pi pi-fw pi-pencil'\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                label: 'Profile',\r\n                icon: 'pi pi-fw pi-user',\r\n                items: [\r\n                    {\r\n                        label: 'Settings',\r\n                        icon: 'pi pi-fw pi-cog'\r\n                    },\r\n                    {\r\n                        label: 'Billing',\r\n                        icon: 'pi pi-fw pi-file'\r\n                    }\r\n                ]\r\n            },\r\n            { separator: true },\r\n            {\r\n                label: 'Quit',\r\n                icon: 'pi pi-fw pi-sign-out'\r\n            }\r\n        ];\r\n\r\n        this.items = [\r\n            {\r\n                label: 'Customers',\r\n                items: [\r\n                    {\r\n                        label: 'New',\r\n                        icon: 'pi pi-fw pi-plus'\r\n                    },\r\n                    {\r\n                        label: 'Edit',\r\n                        icon: 'pi pi-fw pi-user-edit'\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                label: 'Orders',\r\n                items: [\r\n                    {\r\n                        label: 'View',\r\n                        icon: 'pi pi-fw pi-list'\r\n                    },\r\n                    {\r\n                        label: 'Search',\r\n                        icon: 'pi pi-fw pi-search'\r\n                    }\r\n\r\n                ]\r\n            },\r\n            {\r\n                label: 'Shipments',\r\n                items: [\r\n                    {\r\n                        label: 'Tracker',\r\n                        icon: 'pi pi-fw pi-compass',\r\n\r\n                    },\r\n                    {\r\n                        label: 'Map',\r\n                        icon: 'pi pi-fw pi-map-marker',\r\n\r\n                    },\r\n                    {\r\n                        label: 'Manage',\r\n                        icon: 'pi pi-fw pi-pencil'\r\n                    }\r\n                ]\r\n            }\r\n        ];\r\n\r\n        this.menuItems = [\r\n            {\r\n                label: 'Save', icon: 'pi pi-fw pi-check'\r\n            },\r\n            {\r\n                label: 'Update', icon: 'pi pi-fw pi-refresh'\r\n            },\r\n            {\r\n                label: 'Delete', icon: 'pi pi-fw pi-trash'\r\n            },\r\n            {\r\n                separator: true\r\n            },\r\n            {\r\n                label: 'Home', icon: 'pi pi-fw pi-home'\r\n            },\r\n        ];\r\n\r\n        this.slideItems = [\r\n            {\r\n                label: 'Customers',\r\n                icon: 'pi pi-fw pi-table',\r\n                items: [\r\n                    {\r\n                        label: 'New',\r\n                        icon: 'pi pi-fw pi-plus'\r\n                    },\r\n                    {\r\n                        label: 'Edit',\r\n                        icon: 'pi pi-fw pi-user-edit'\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                label: 'Orders',\r\n                icon: 'pi pi-fw pi-shopping-cart',\r\n                items: [\r\n                    {\r\n                        label: 'View',\r\n                        icon: 'pi pi-fw pi-list'\r\n                    },\r\n                    {\r\n                        label: 'Search',\r\n                        icon: 'pi pi-fw pi-search'\r\n                    }\r\n\r\n                ]\r\n            },\r\n            {\r\n                label: 'Shipments',\r\n                icon: 'pi pi-fw pi-envelope',\r\n                items: [\r\n                    {\r\n                        label: 'Tracker',\r\n                        icon: 'pi pi-fw pi-compass',\r\n\r\n                    },\r\n                    {\r\n                        label: 'Map',\r\n                        icon: 'pi pi-fw pi-map-marker',\r\n\r\n                    },\r\n                    {\r\n                        label: 'Manage',\r\n                        icon: 'pi pi-fw pi-pencil'\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                label: 'Profile',\r\n                icon: 'pi pi-fw pi-user',\r\n                items: [\r\n                    {\r\n                        label: 'Settings',\r\n                        icon: 'pi pi-fw pi-cog'\r\n                    },\r\n                    {\r\n                        label: 'Billing',\r\n                        icon: 'pi pi-fw pi-file'\r\n                    }\r\n                ]\r\n            }\r\n        ];\r\n\r\n        this.plainMenuItems = [\r\n            {\r\n                label: 'Customers',\r\n                items: [\r\n                    {\r\n                        label: 'New',\r\n                        icon: 'pi pi-fw pi-plus'\r\n                    },\r\n                    {\r\n                        label: 'Edit',\r\n                        icon: 'pi pi-fw pi-user-edit'\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                label: 'Orders',\r\n                items: [\r\n                    {\r\n                        label: 'View',\r\n                        icon: 'pi pi-fw pi-list'\r\n                    },\r\n                    {\r\n                        label: 'Search',\r\n                        icon: 'pi pi-fw pi-search'\r\n                    }\r\n\r\n                ]\r\n            }\r\n        ];\r\n\r\n        this.breadcrumbItems = [];\r\n        this.breadcrumbItems.push({ label: 'Electronics' });\r\n        this.breadcrumbItems.push({ label: 'Computer' });\r\n        this.breadcrumbItems.push({ label: 'Notebook' });\r\n        this.breadcrumbItems.push({ label: 'Accessories' });\r\n        this.breadcrumbItems.push({ label: 'Backpacks' });\r\n        this.breadcrumbItems.push({ label: 'Item' });\r\n\r\n        this.routeItems = [\r\n            {label: 'Personal', routerLink:'personal'},\r\n            {label: 'Seat', routerLink:'seat'},\r\n            {label: 'Payment', routerLink:'payment'},\r\n            {label: 'Confirmation', routerLink:'confirmation'},\r\n        ];\r\n\r\n        this.megaMenuItems = [\r\n            {\r\n                label: 'Fashion', icon: 'pi pi-fw pi-tag',\r\n                items: [\r\n                    [\r\n                        {\r\n                            label: 'Women',\r\n                            items: [{label: 'Women Item'}, {label: 'Women Item'}, {label: 'Women Item'}]\r\n                        },\r\n                        {\r\n                            label: 'Men',\r\n                            items: [{label: 'Men Item'}, {label: 'Men Item'}, {label: 'Men Item'}]\r\n                        }\r\n                    ],\r\n                    [\r\n                        {\r\n                            label: 'Kids',\r\n                            items: [{label: 'Kids Item'}, {label: 'Kids Item'}]\r\n                        },\r\n                        {\r\n                            label: 'Luggage',\r\n                            items: [{label: 'Luggage Item'}, {label: 'Luggage Item'}, {label: 'Luggage Item'}]\r\n                        }\r\n                    ]\r\n                ]\r\n            },\r\n            {\r\n                label: 'Electronics', icon: 'pi pi-fw pi-desktop',\r\n                items: [\r\n                    [\r\n                        {\r\n                            label: 'Computer',\r\n                            items: [{label: 'Computer Item'}, {label: 'Computer Item'}]\r\n                        },\r\n                        {\r\n                            label: 'Camcorder',\r\n                            items: [{label: 'Camcorder Item'}, {label: 'Camcorder Item'}, {label: 'Camcorder Item'}]\r\n                        }\r\n                    ],\r\n                    [\r\n                        {\r\n                            label: 'TV',\r\n                            items: [{label: 'TV Item'}, {label: 'TV Item'}]\r\n                        },\r\n                        {\r\n                            label: 'Audio',\r\n                            items: [{label: 'Audio Item'}, {label: 'Audio Item'}, {label: 'Audio Item'}]\r\n                        }\r\n                    ],\r\n                    [\r\n                        {\r\n                            label: 'Sports.7',\r\n                            items: [{label: 'Sports.7.1'}, {label: 'Sports.7.2'}]\r\n                        }\r\n                    ]\r\n                ]\r\n            },\r\n            {\r\n                label: 'Furniture', icon: 'pi pi-fw pi-image',\r\n                items: [\r\n                    [\r\n                        {\r\n                            label: 'Living Room',\r\n                            items: [{label: 'Living Room Item'}, {label: 'Living Room Item'}]\r\n                        },\r\n                        {\r\n                            label: 'Kitchen',\r\n                            items: [{label: 'Kitchen Item'}, {label: 'Kitchen Item'}, {label: 'Kitchen Item'}]\r\n                        }\r\n                    ],\r\n                    [\r\n                        {\r\n                            label: 'Bedroom',\r\n                            items: [{label: 'Bedroom Item'}, {label: 'Bedroom Item'}]\r\n                        },\r\n                        {\r\n                            label: 'Outdoor',\r\n                            items: [{label: 'Outdoor Item'}, {label: 'Outdoor Item'}, {label: 'Outdoor Item'}]\r\n                        }\r\n                    ]\r\n                ]\r\n            },\r\n            {\r\n                label: 'Sports', icon: 'pi pi-fw pi-star',\r\n                items: [\r\n                    [\r\n                        {\r\n                            label: 'Basketball',\r\n                            items: [{label: 'Basketball Item'}, {label: 'Basketball Item'}]\r\n                        },\r\n                        {\r\n                            label: 'Football',\r\n                            items: [{label: 'Football Item'}, {label: 'Football Item'}, {label: 'Football Item'}]\r\n                        }\r\n                    ],\r\n                    [\r\n                        {\r\n                            label: 'Tennis',\r\n                            items: [{label: 'Tennis Item'}, {label: 'Tennis Item'}]\r\n                        }\r\n                    ]\r\n                ]\r\n            },\r\n        ];\r\n\r\n        this.panelMenuItems = [\r\n            {\r\n                label: 'Customers',\r\n                items: [\r\n                    {\r\n                        label: 'New',\r\n                        icon: 'pi pi-fw pi-plus',\r\n                        items: [\r\n                            {\r\n                                label: 'Customer',\r\n                                icon: 'pi pi-fw pi-plus'\r\n                            },\r\n                            {\r\n                                label: 'Duplicate',\r\n                                icon: 'pi pi-fw pi-copy'\r\n                            },\r\n\r\n                        ]\r\n                    },\r\n                    {\r\n                        label: 'Edit',\r\n                        icon: 'pi pi-fw pi-user-edit'\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                label: 'Orders',\r\n                items: [\r\n                    {\r\n                        label: 'View',\r\n                        icon: 'pi pi-fw pi-list'\r\n                    },\r\n                    {\r\n                        label: 'Search',\r\n                        icon: 'pi pi-fw pi-search'\r\n                    }\r\n\r\n                ]\r\n            },\r\n            {\r\n                label: 'Shipments',\r\n                items: [\r\n                    {\r\n                        label: 'Tracker',\r\n                        icon: 'pi pi-fw pi-compass',\r\n\r\n                    },\r\n                    {\r\n                        label: 'Map',\r\n                        icon: 'pi pi-fw pi-map-marker',\r\n\r\n                    },\r\n                    {\r\n                        label: 'Manage',\r\n                        icon: 'pi pi-fw pi-pencil'\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                label: 'Profile',\r\n                items: [\r\n                    {\r\n                        label: 'Settings',\r\n                        icon: 'pi pi-fw pi-cog'\r\n                    },\r\n                    {\r\n                        label: 'Billing',\r\n                        icon: 'pi pi-fw pi-file'\r\n                    }\r\n                ]\r\n            }\r\n        ];\r\n    }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"grid p-fluid\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card card-w-title\">\r\n            <h5>MenuBar</h5>\r\n            <p-menubar [model]=\"tieredItems\">\r\n                <ng-template pTemplate=\"end\">\r\n                    <span class=\"p-input-icon-right\">\r\n                        <input type=\"text\" pInputText placeholder=\"Search\">\r\n                        <i class=\"pi pi-search\"></i>\r\n                    </span>\r\n                </ng-template>\r\n            </p-menubar>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"col-12\">\r\n        <div class=\"card card-w-title\">\r\n            <h5>Breadcrumb</h5>\r\n            <p-breadcrumb [model]=\"breadcrumbItems\" [home]=\"{icon: 'pi pi-home'}\"></p-breadcrumb>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"col-12\">\r\n        <div class=\"card card-w-title flex flex-wrap\">\r\n            <div class=\"col-12 md:col-8 h-full\">\r\n                <h5>TabMenu</h5>\r\n                <p-tabMenu styleClass=\"mb-5\" [model]=\"routeItems\"></p-tabMenu>\r\n\r\n                <h5>Steps</h5>\r\n                <p-steps [model]=\"routeItems\" styleClass=\"mt-5\" [readonly]=\"false\"></p-steps>\r\n            </div>\r\n            <div class=\"col-12 md:col-4 mt-5 md:mt-0\">\r\n                <router-outlet></router-outlet>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"col-12 md:col-4\">\r\n        <div class=\"card card-w-title\">\r\n            <h5>TieredMenu</h5>\r\n            <p-tieredMenu [model]=\"tieredItems\"></p-tieredMenu>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"col-12 md:col-4\">\r\n        <div class=\"card card-w-title\">\r\n            <h5>Plain Menu</h5>\r\n            <p-menu [model]=\"plainMenuItems\"></p-menu>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"col-12 md:col-4\">\r\n\r\n        <div class=\"card card-w-title\">\r\n            <h5>Overlay Menu</h5>\r\n\r\n            <p-menu #menu [popup]=\"true\" [model]=\"menuItems\"></p-menu>\r\n            <button type=\"button\" pButton icon=\"pi pi-chevron-down\" label=\"Options\" (click)=\"menu.toggle($event)\" style=\"width:auto\"></button>\r\n        </div>\r\n\r\n        <div class=\"card card-w-title\" #anchor>\r\n            <h5>ContextMenu</h5>\r\n            Right click to display.\r\n            <p-contextMenu [target]=\"anchor\" [model]=\"menuItems\"></p-contextMenu>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"col-12 md:col-6\">\r\n        <div class=\"card card-w-title\">\r\n            <h5>MegaMenu - Horizontal</h5>\r\n            <p-megaMenu [model]=\"megaMenuItems\"></p-megaMenu>\r\n\r\n            <h5>MegaMenu - Vertical</h5>\r\n            <p-megaMenu [model]=\"megaMenuItems\" orientation=\"vertical\" [style]=\"{'width':'200px'}\"></p-megaMenu>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"col-12 md:col-6\">\r\n        <div class=\"card card-w-title\">\r\n            <h5>PanelMenu</h5>\r\n            <p-panelMenu [model]=\"panelMenuItems\"></p-panelMenu>\r\n        </div>\r\n    </div>\r\n</div>\r\n"
        },
        {
            "name": "MessagesComponent",
            "id": "component-MessagesComponent-8ef2757b8e1ccca6f9b2b3c6385ec8213169fb09b122e4deda3656a6906febdfb8c632eb86d1b856e608b7cae4dbb69706c8cf7eefedb61fedf72b00c6cfbb8f",
            "file": "src/app/showcase/components/messages/messages.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "MessageService",
                    "type": "injectable"
                }
            ],
            "styleUrls": [],
            "styles": [
                "\n\t\t:host ::ng-deep .p-message {\n\t\t\tmargin-left: .25em;\n\t\t}\n\n        :host ::ng-deep .p-toast{\n            margin-top: 5.70em;\n            z-index:99999;\n        }\n    "
            ],
            "templateUrl": [
                "./messages.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "msgs",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Message[]",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "methodsClass": [
                {
                    "name": "showErrorViaMessages",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "showErrorViaToast",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "showInfoViaMessages",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "showInfoViaToast",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "showSuccessViaMessages",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "showSuccessViaToast",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "showWarnViaMessages",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "showWarnViaToast",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { Message, MessageService } from 'primeng/api';\r\n\r\n@Component({\r\n    templateUrl: './messages.component.html',\r\n    styles: [`\r\n\t\t:host ::ng-deep .p-message {\r\n\t\t\tmargin-left: .25em;\r\n\t\t}\r\n\r\n        :host ::ng-deep .p-toast{\r\n            margin-top: 5.70em;\r\n            z-index:99999;\r\n        }\r\n    `],\r\n    providers: [MessageService]\r\n})\r\nexport class MessagesComponent {\r\n\r\n    msgs: Message[] = [];\r\n\r\n    constructor(private service: MessageService) {}\r\n\r\n    showInfoViaToast() {\r\n        this.service.add({key: 'tst', severity: 'info', summary: 'Info Message', detail: 'PrimeNG rocks'});\r\n    }\r\n\r\n    showWarnViaToast() {\r\n        this.service.add({key: 'tst', severity: 'warn', summary: 'Warn Message', detail: 'There are unsaved changes'});\r\n    }\r\n\r\n    showErrorViaToast() {\r\n        this.service.add({ key: 'tst', severity: 'error', summary: 'Error Message', detail: 'Validation failed' });\r\n    }\r\n\r\n    showSuccessViaToast() {\r\n        this.service.add({ key: 'tst', severity: 'success', summary: 'Success Message', detail: 'Message sent' });\r\n    }\r\n\r\n    showInfoViaMessages() {\r\n        this.msgs = [];\r\n        this.msgs.push({ severity: 'info', summary: 'Info Message', detail: 'PrimeNG rocks' });\r\n    }\r\n\r\n    showWarnViaMessages() {\r\n        this.msgs = [];\r\n        this.msgs.push({ severity: 'warn', summary: 'Warn Message', detail: 'There are unsaved changes' });\r\n    }\r\n\r\n    showErrorViaMessages() {\r\n        this.msgs = [];\r\n        this.msgs.push({ severity: 'error', summary: 'Error Message', detail: 'Validation failed' });\r\n    }\r\n\r\n    showSuccessViaMessages() {\r\n        this.msgs = [];\r\n        this.msgs.push({ severity: 'success', summary: 'Success Message', detail: 'Message sent' });\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n\t\t:host ::ng-deep .p-message {\n\t\t\tmargin-left: .25em;\n\t\t}\n\n        :host ::ng-deep .p-toast{\n            margin-top: 5.70em;\n            z-index:99999;\n        }\n    \n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "service",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 20,
                "jsdoctags": [
                    {
                        "name": "service",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"grid\">\r\n    <div class=\"col-12 lg:col-6\">\r\n        <div class=\"card\">\r\n            <h5>Toast</h5>\r\n            <p-toast key=\"tst\" [baseZIndex]=\"99999\"></p-toast>\r\n            <button type=\"button\" pButton (click)=\"showSuccessViaToast()\" label=\"Success\" class=\"p-button-success mr-2\"></button>\r\n            <button type=\"button\" pButton (click)=\"showInfoViaToast()\" label=\"Info\" class=\"p-button-info mr-2\"></button>\r\n            <button type=\"button\" pButton (click)=\"showWarnViaToast()\" label=\"Warn\" class=\"p-button-warning mr-2\"></button>\r\n            <button type=\"button\" pButton (click)=\"showErrorViaToast()\" label=\"Error\" class=\"p-button-danger\"></button>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"col-12 lg:col-6\">\r\n        <div class=\"card z-3\">\r\n            <h5>Messages</h5>\r\n            <button type=\"button\" pButton (click)=\"showSuccessViaMessages()\" label=\"Success\" class=\"p-button-success mr-2\"></button>\r\n            <button type=\"button\" pButton (click)=\"showInfoViaMessages()\" label=\"Info\" class=\"p-button-info mr-2\"></button>\r\n            <button type=\"button\" pButton (click)=\"showWarnViaMessages()\" label=\"Warn\" class=\"p-button-warning mr-2\"></button>\r\n            <button type=\"button\" pButton (click)=\"showErrorViaMessages()\" label=\"Error\" class=\"p-button-danger\"></button>\r\n\r\n            <p-messages [value]=\"msgs\"></p-messages>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"col-12 lg:col-8\">\r\n        <div class=\"card\">\r\n            <h5>Inline</h5>\r\n            <div class=\"field grid\">\r\n                <label for=\"username\" class=\"col-fixed w-9rem\">Username</label>\r\n                <div class=\"col\">\r\n                    <input id=\"username\" type=\"text\" #username pInputText placeholder=\"Username\" class=\"ng-dirty ng-invalid mr-2\">\r\n                    <p-message severity=\"error\" text=\"Field is required\"></p-message>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"field grid\">\r\n                <label for=\"email\" class=\"col-fixed w-9rem\">Email</label>\r\n                <div class=\"col\">\r\n                    <input type=\"text\" #email pInputText placeholder=\"Email\" label=\"email\" class=\"ng-dirty ng-invalid mr-2\">\r\n                    <p-message severity=\"error\"></p-message>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"col-12 lg:col-4\">\r\n        <div class=\"card\">\r\n            <h5>Help Text</h5>\r\n            <div class=\"field p-fluid\">\r\n                <label for=\"username2\">Username</label>\r\n                <input id=\"username2\" type=\"username\" aria-describedby=\"username-help\" class=\"ng-dirty ng-invalid\" pInputText />\r\n                <small id=\"username-help\" class=\"p-error\">Enter your username to reset your password.</small>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n"
        },
        {
            "name": "MiscComponent",
            "id": "component-MiscComponent-fef30c5bf36a08f144abb5aecb05b80c4042af8bb41a5b2e5e4d135979abb9b6aba105e60090c0f60399d9ac26cd0261e421ca6d62a014836d3ef92316066499",
            "file": "src/app/showcase/components/misc/misc.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./misc.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "value",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n    templateUrl: './misc.component.html',\r\n})\r\nexport class MiscComponent implements OnInit {\r\n\r\n    value = 0;\r\n\r\n    ngOnInit() {\r\n        const interval = setInterval(() => {\r\n            this.value = this.value + Math.floor(Math.random() * 10) + 1;\r\n            if (this.value >= 100) {\r\n                this.value = 100;\r\n                clearInterval(interval);\r\n            }\r\n        }, 2000);\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"grid\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <h5>ProgressBar</h5>\r\n            <div class=\"grid\">\r\n                <div class=\"col\">\r\n                    <p-progressBar [value]=\"value\" [showValue]=\"true\"></p-progressBar>\r\n                </div>\r\n                <div class=\"col\">\r\n                    <p-progressBar [value]=\"50\" [showValue]=\"false\"></p-progressBar>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-12 lg:col-6\">\r\n        <div class=\"card\">\r\n            <h4>Badge</h4>\r\n            <h5>Numbers</h5>\r\n            <div>\r\n                <p-badge [value]=\"2\" styleClass=\"mr-2\"></p-badge>\r\n                <p-badge [value]=\"8\" severity=\"success\" styleClass=\"mr-2\"></p-badge>\r\n                <p-badge [value]=\"4\" severity=\"info\" styleClass=\"mr-2\"></p-badge>\r\n                <p-badge [value]=\"12\" severity=\"warning\" styleClass=\"mr-2\"></p-badge>\r\n                <p-badge [value]=\"3\" severity=\"danger\"></p-badge>\r\n            </div>\r\n\r\n            <h5>Positioned Badge</h5>\r\n            <i class=\"pi pi-bell mr-4 p-text-secondary\" pBadge style=\"font-size: 2rem\" value=\"2\"></i>\r\n            <i class=\"pi pi-calendar mr-4 p-text-secondary\" pBadge style=\"font-size: 2rem\" [value]=\"'10+'\" severity=\"danger\"></i>\r\n            <i class=\"pi pi-envelope p-text-secondary\" pBadge style=\"font-size: 2rem\" severity=\"danger\"></i>\r\n\r\n\r\n            <h5>Inline Button Badge</h5>\r\n            <p-button label=\"Emails\" badge=\"8\" styleClass=\"mr-2\"></p-button>\r\n            <p-button label=\"Messages\" icon=\"pi pi-users\" styleClass=\"p-button-warning\" badge=\"8\" badgeClass=\"p-badge-danger\"></p-button>\r\n\r\n            <h5>Sizes</h5>\r\n            <div>\r\n                <p-badge [value]=\"2\" styleClass=\"mr-2\"></p-badge>\r\n                <p-badge [value]=\"4\" size=\"large\" severity=\"warning\" styleClass=\"mr-2\"></p-badge>\r\n                <p-badge [value]=\"6\" size=\"xlarge\" severity=\"success\" styleClass=\"mr-2\"></p-badge>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"card\">\r\n            <h4>Avatar</h4>\r\n            <h5>Avatar Group</h5>\r\n            <p-avatarGroup styleClass=\"mb-3\">\r\n                <p-avatar image=\"assets/demo/images/avatar/amyelsner.png\" size=\"large\" shape=\"circle\"></p-avatar>\r\n                <p-avatar image=\"assets/demo/images/avatar/asiyajavayant.png\" size=\"large\" shape=\"circle\"></p-avatar>\r\n                <p-avatar image=\"assets/demo/images/avatar/onyamalimba.png\" size=\"large\" shape=\"circle\"></p-avatar>\r\n                <p-avatar image=\"assets/demo/images/avatar/ionibowcher.png\" size=\"large\" shape=\"circle\"></p-avatar>\r\n                <p-avatar image=\"assets/demo/images/avatar/xuxuefeng.png\" size=\"large\"shape=\"circle\"></p-avatar>\r\n                <p-avatar label=\"+2\" shape=\"circle\" size=\"large\" [style]=\"{'background-color':'#9c27b0', 'color': '#ffffff'}\"></p-avatar>\r\n            </p-avatarGroup>\r\n\r\n            <h5>Label - Circle</h5>\r\n            <p-avatar label=\"P\" styleClass=\"mr-2\" size=\"xlarge\" shape=\"circle\"></p-avatar>\r\n            <p-avatar label=\"V\" styleClass=\"mr-2\" size=\"large\" [style]=\"{'background-color':'#2196F3', 'color': '#ffffff'}\" shape=\"circle\"></p-avatar>\r\n            <p-avatar label=\"U\" styleClass=\"mr-2\" [style]=\"{'background-color': '#9c27b0', 'color': '#ffffff'}\" shape=\"circle\"></p-avatar>\r\n\r\n            <h5>Icon - Badge</h5>\r\n            <p-avatar icon=\"pi pi-user\" pBadge value=\"4\" severity=\"success\" styleClass=\"mr-2\" size=\"xlarge\"></p-avatar>\r\n        </div>\r\n\r\n        <div class=\"card\">\r\n            <h4>ScrollTop</h4>\r\n            <p-scrollPanel [style]=\"{width: '250px', height: '200px'}\">\r\n                <p>\r\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n                    Vitae et leo duis ut diam.\r\n                    Ultricies mi quis hendrerit dolor magna eget est lorem. Amet consectetur adipiscing elit ut.\r\n                    Nam libero justo laoreet sit amet. Pharetra massa massa ultricies mi quis hendrerit dolor magna.\r\n                    Est ultricies integer quis auctor elit sed vulputate. Consequat ac felis donec et. Tellus orci ac auctor augue mauris.\r\n                    Semper feugiat nibh sed pulvinar proin gravida hendrerit lectus a. Tincidunt arcu non sodales neque sodales.\r\n                    Metus aliquam eleifend mi in nulla posuere sollicitudin aliquam ultrices. Sodales ut etiam sit amet nisl purus.\r\n                    Cursus sit amet dictum sit amet. Tristique senectus et netus et malesuada fames ac turpis egestas.\r\n                    Et tortor consequat id porta nibh venenatis cras sed. Diam maecenas ultricies mi eget mauris.\r\n                    Eget egestas purus viverra accumsan in nisl nisi. Suscipit adipiscing bibendum est ultricies integer.\r\n                    Mattis aliquam faucibus purus in massa tempor nec.\r\n                </p>\r\n                <p-scrollTop target=\"parent\" styleClass=\"custom-scrolltop\" [threshold]=\"100\" icon=\"pi pi-arrow-up\"></p-scrollTop>\r\n            </p-scrollPanel>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-12 lg:col-6\">\r\n        <div class=\"card\">\r\n            <h4>Tag</h4>\r\n            <h5>Tags</h5>\r\n            <p-tag styleClass=\"mr-2\" value=\"Primary\"></p-tag>\r\n            <p-tag styleClass=\"mr-2\" severity=\"success\" value=\"Success\"></p-tag>\r\n            <p-tag styleClass=\"mr-2\" severity=\"info\" value=\"Info\"></p-tag>\r\n            <p-tag styleClass=\"mr-2\" severity=\"warning\" value=\"Warning\"></p-tag>\r\n            <p-tag severity=\"danger\" value=\"Danger\"></p-tag>\r\n\r\n            <h5>Pills</h5>\r\n            <p-tag styleClass=\"mr-2\" value=\"Primary\" [rounded]=\"true\"></p-tag>\r\n            <p-tag styleClass=\"mr-2\" severity=\"success\" value=\"Success\" [rounded]=\"true\"></p-tag>\r\n            <p-tag styleClass=\"mr-2\" severity=\"info\" value=\"Info\" [rounded]=\"true\"></p-tag>\r\n            <p-tag styleClass=\"mr-2\" severity=\"warning\" value=\"Warning\" [rounded]=\"true\"></p-tag>\r\n            <p-tag severity=\"danger\" value=\"Danger\" [rounded]=\"true\"></p-tag>\r\n\r\n            <h5>Icons</h5>\r\n            <p-tag styleClass=\"mr-2\" icon=\"pi pi-user\" value=\"Primary\"></p-tag>\r\n            <p-tag styleClass=\"mr-2\" icon=\"pi pi-check\" severity=\"success\" value=\"Success\"></p-tag>\r\n            <p-tag styleClass=\"mr-2\" icon=\"pi pi-info-circle\" severity=\"info\" value=\"Info\"></p-tag>\r\n            <p-tag styleClass=\"mr-2\" con=\"pi pi-exclamation-triangle\" severity=\"warning\" value=\"Warning\"></p-tag>\r\n            <p-tag icon=\"pi pi-times\" severity=\"danger\" value=\"Danger\"></p-tag>\r\n        </div>\r\n\r\n        <div class=\"card\">\r\n            <h4>Chip</h4>\r\n            <h5>Basic</h5>\r\n            <div class=\"flex align-items-center flex-column sm:flex-row\">\r\n                <p-chip label=\"Action\" styleClass=\"m-1\"></p-chip>\r\n                <p-chip label=\"Comedy\" styleClass=\"m-1\"></p-chip>\r\n                <p-chip label=\"Mystery\" styleClass=\"m-1\"></p-chip>\r\n                <p-chip label=\"Thriller\" styleClass=\"m-1\" [removable]=\"true\"></p-chip>\r\n            </div>\r\n\r\n            <h5>Icon</h5>\r\n            <div class=\"flex align-items-center flex-column sm:flex-row\">\r\n                <p-chip label=\"Apple\" icon=\"pi pi-apple\" styleClass=\"m-1\"></p-chip>\r\n                <p-chip label=\"Facebook\" icon=\"pi pi-facebook\" styleClass=\"m-1\"></p-chip>\r\n                <p-chip label=\"Google\" icon=\"pi pi-google\" styleClass=\"m-1\"></p-chip>\r\n                <p-chip label=\"Microsoft\" icon=\"pi pi-microsoft\" styleClass=\"m-1\" [removable]=\"true\"></p-chip>\r\n            </div>\r\n\r\n            <h5>Image</h5>\r\n            <div class=\"flex align-items-center flex-column sm:flex-row\">\r\n                <p-chip label=\"Amy Elsner\" image=\"assets/demo/images/avatar/amyelsner.png\" styleClass=\"m-1\"></p-chip>\r\n                <p-chip label=\"Asiya Javayant\" image=\"assets/demo/images/avatar/asiyajavayant.png\" styleClass=\"m-1\"></p-chip>\r\n                <p-chip label=\"Onyama Limba\" image=\"assets/demo/images/avatar/onyamalimba.png\" styleClass=\"m-1\"></p-chip>\r\n                <p-chip label=\"Xuxue Feng\" image=\"assets/demo/images/avatar/xuxuefeng.png\" styleClass=\"m-1\" [removable]=\"true\"></p-chip>\r\n            </div>\r\n\r\n            <h5>Styling</h5>\r\n            <div class=\"flex align-items-center flex-column sm:flex-row\">\r\n                <p-chip label=\"Action\" styleClass=\"m-1 custom-chip\"></p-chip>\r\n                <p-chip label=\"Comedy\" styleClass=\"m-1 custom-chip\"></p-chip>\r\n                <p-chip label=\"Onyama Limba\" image=\"assets/demo/images/avatar/onyamalimba.png\" styleClass=\"m-1 custom-chip\"></p-chip>\r\n                <p-chip label=\"Xuxue Feng\" image=\"assets/demo/images/avatar/xuxuefeng.png\" [removable]=\"true\" styleClass=\"m-1 custom-chip\"></p-chip>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"card\">\r\n            <h4>Skeleton</h4>\r\n            <div class=\"border-round border-1 surface-border p-4\">\r\n                <div class=\"flex mb-3\">\r\n                    <p-skeleton shape=\"circle\" size=\"4rem\" styleClass=\"mr-2\"></p-skeleton>\r\n                    <div>\r\n                        <p-skeleton width=\"10rem\" styleClass=\"mb-2\"></p-skeleton>\r\n                        <p-skeleton width=\"5rem\" styleClass=\"mb-2\"></p-skeleton>\r\n                        <p-skeleton height=\".5rem\"></p-skeleton>\r\n                    </div>\r\n                </div>\r\n                <p-skeleton width=\"100%\" height=\"150px\"></p-skeleton>\r\n                <div class=\"flex justify-content-between mt-3\">\r\n                    <p-skeleton width=\"4rem\" height=\"2rem\"></p-skeleton>\r\n                    <p-skeleton width=\"4rem\" height=\"2rem\"></p-skeleton>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n"
        },
        {
            "name": "NewEmployeeDashboardComponent",
            "id": "component-NewEmployeeDashboardComponent-1af67d3eae90bf866f933a11651adbd8e8581295b6be1dde73cd2a0ebc3a95c4396f5753111b2efb9fab62d883da3712a6ecb557f2fe6aa7f0ba8f96d88192db",
            "file": "src/app/core/dashboard/component/new-employee-dashboard/new-employee-dashboard.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-new-employee-dashboard",
            "styleUrls": [
                "./new-employee-dashboard.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./new-employee-dashboard.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { DashboardService } from '../../service/dashboard.service';\r\n\r\n@Component({\r\n  selector: 'app-new-employee-dashboard',\r\n  templateUrl: './new-employee-dashboard.component.html',\r\n  styleUrls: ['./new-employee-dashboard.component.scss']\r\n})\r\nexport class NewEmployeeDashboardComponent implements OnInit {\r\n\r\n  constructor(private srv:DashboardService) { }\r\n\r\n  data=[];\r\n\r\n  ngOnInit(): void {\r\n    //todo error\r\n    this.srv.getNewHire().toPromise().then(res=>{\r\n      this.data=res;\r\n    })\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./new-employee-dashboard.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "srv",
                        "type": "DashboardService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "srv",
                        "type": "DashboardService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<h6 class=\"pt-2\">Karyawan Baru</h6>\r\n<div style=\"height: 250px;overflow-y:auto;\" *ngIf=\"data.length > 0 else noData\">\r\n    <div class=\"m-3 pb-2 grid field\" style=\"border-bottom: 1px solid #EBEBEB; \" *ngFor=\"let item of data\">\r\n        <img class=\"pr-2\" src=\"{{item.gender =='F' ? 'assets/F.png':'assets/M.png'}}\">\r\n        <span class=\"pt-1\">\r\n            <div class=\"label-normal\">{{item.name}}</div>\r\n            <div class=\"label-small\">{{item.hireDate}}</div>\r\n        </span>\r\n    </div>\r\n</div>\r\n\r\n<ng-template #noData>\r\n    <div class=\"no-data-image\">\r\n    </div>\r\n</ng-template>\r\n"
        },
        {
            "name": "OverlaysComponent",
            "id": "component-OverlaysComponent-4e91b8e19ca74291209dd0e92e172a2a0d720283c11010d0f2a80447fb9043eac2edcac4b171a7ff68dee13dd88f016bded8dcd75ffea85375c3dfc10d8ad1ec",
            "file": "src/app/showcase/components/overlays/overlays.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "ConfirmationService",
                    "type": "injectable"
                },
                {
                    "name": "MessageService",
                    "type": "injectable"
                }
            ],
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./overlays.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "appMain",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AppMainComponent",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "display",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "images",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "products",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Product[]",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "selectedProduct",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Product",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "visibleSidebar1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "visibleSidebar2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "visibleSidebar3",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "visibleSidebar4",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "visibleSidebar5",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                }
            ],
            "methodsClass": [
                {
                    "name": "confirm1",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "confirm2",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "formatCurrency",
                    "args": [
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { ConfirmationService, MessageService } from 'primeng/api';\r\nimport { AppMainComponent } from 'src/app/layout/component/app.main.component';\r\nimport { Product } from '../../api/product';\r\nimport { ProductService } from '../../service/productservice';\r\n\r\n@Component({\r\n    templateUrl: './overlays.component.html',\r\n    providers: [ConfirmationService, MessageService]\r\n})\r\nexport class OverlaysComponent implements OnInit {\r\n\r\n    images: any[];\r\n\r\n    display: boolean;\r\n\r\n    products: Product[];\r\n\r\n    selectedProduct: Product;\r\n\r\n    visibleSidebar1;\r\n\r\n    visibleSidebar2;\r\n\r\n    visibleSidebar3;\r\n\r\n    visibleSidebar4;\r\n\r\n    visibleSidebar5;\r\n\r\n    constructor(private productService: ProductService, private confirmationService: ConfirmationService, private messageService: MessageService, public appMain: AppMainComponent) {}\r\n\r\n    ngOnInit() {\r\n        this.productService.getProductsSmall().then(products => this.products = products);\r\n\r\n        this.images = [];\r\n        this.images.push({\r\n            source: 'assets/demo/images/sopranos/sopranos1.jpg',\r\n            thumbnail: 'assets/demo/images/sopranos/sopranos1_small.jpg', title: 'Sopranos 1'\r\n        });\r\n        this.images.push({\r\n            source: 'assets/demo/images/sopranos/sopranos2.jpg',\r\n            thumbnail: 'assets/demo/images/sopranos/sopranos2_small.jpg', title: 'Sopranos 2'\r\n        });\r\n        this.images.push({\r\n            source: 'assets/demo/images/sopranos/sopranos3.jpg',\r\n            thumbnail: 'assets/demo/images/sopranos/sopranos3_small.jpg', title: 'Sopranos 3'\r\n        });\r\n        this.images.push({\r\n            source: 'assets/demo/images/sopranos/sopranos4.jpg',\r\n            thumbnail: 'assets/demo/images/sopranos/sopranos4_small.jpg', title: 'Sopranos 4'\r\n        });\r\n    }\r\n\r\n    confirm1() {\r\n        this.confirmationService.confirm({\r\n            key: 'confirm1',\r\n            message: 'Are you sure to perform this action?'\r\n        });\r\n    }\r\n\r\n    confirm2(event: Event) {\r\n        this.confirmationService.confirm({\r\n            key: 'confirm2',\r\n            target: event.target,\r\n            message: 'Are you sure that you want to proceed?',\r\n            icon: 'pi pi-exclamation-triangle',\r\n            accept: () => {\r\n                this.messageService.add({severity: 'info', summary: 'Confirmed', detail: 'You have accepted'});\r\n            },\r\n            reject: () => {\r\n                this.messageService.add({severity: 'error', summary: 'Rejected', detail: 'You have rejected'});\r\n            }\r\n        });\r\n    }\r\n\r\n    formatCurrency(value) {\r\n        return value.toLocaleString('en-US', {style: 'currency', currency: 'USD'});\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "productService",
                        "type": "ProductService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "confirmationService",
                        "type": "ConfirmationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "messageService",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "appMain",
                        "type": "AppMainComponent",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 29,
                "jsdoctags": [
                    {
                        "name": "productService",
                        "type": "ProductService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "confirmationService",
                        "type": "ConfirmationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "messageService",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "appMain",
                        "type": "AppMainComponent",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"grid\">\r\n    <p-toast></p-toast>\r\n    <div class=\"col-12 lg:col-6\">\r\n        <div class=\"card p-fluid\">\r\n            <h5>Dialog</h5>\r\n            <p-dialog header=\"Dialog\" [(visible)]=\"display\" modal=\"modal\" showEffect=\"fade\" [style]=\"{width: '30vw'}\" [breakpoints]=\"{'960px': '75vw'}\">\r\n                <p class=\"line-height-3 m-0\">\r\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,\r\n                    quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit\r\n                    in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\r\n                    Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\r\n                </p>\r\n                <ng-template pTemplate=\"footer\">\r\n                        <button pButton icon=\"pi pi-check\" (click)=\"display=false\" label=\"Ok\" class=\"p-button-outlined\"></button>\r\n                </ng-template>\r\n            </p-dialog>\r\n            <div class=\"grid\">\r\n                <div class=\"col-12\">\r\n                    <button (click)=\"display=true\" pButton icon=\"pi pi-external-link\" label=\"Show\" style=\"width:auto;\"></button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"card p-fluid\">\r\n            <h5>Overlay Panel</h5>\r\n            <div class=\"grid formgrid\">\r\n                <div class=\"col-6\">\r\n                    <button type=\"button\" pButton label=\"Image\" (click)=\"op1.toggle($event)\" class=\"p-button-success\"></button>\r\n                    <p-overlayPanel #op1 [showCloseIcon]=\"true\" [style]=\"{width: '450px'}\">\r\n                        <img src=\"assets/demo/images/nature/nature1.jpg\" alt=\"Nature 1\" style=\"width:100%\"/>\r\n                    </p-overlayPanel>\r\n                </div>\r\n                <div class=\"col-6\">\r\n                    <button type=\"button\" pButton label=\"DataTable\" (click)=\"op2.toggle($event)\" class=\"p-button-success\"></button>\r\n                    <p-overlayPanel #op2 [showCloseIcon]=\"true\" [style]=\"{width: '450px'}\">\r\n                        <ng-template pTemplate>\r\n                            <p-table [value]=\"products\" selectionMode=\"single\" [(selection)]=\"selectedProduct\" [paginator]=\"true\" pageLinks=\"3\" [rows]=\"5\" (onRowSelect)=\"op2.hide()\" responsiveLayout=\"scroll\">\r\n                                <ng-template pTemplate=\"header\">\r\n                                    <tr>\r\n                                        <th pSortableColumn=\"name\">Name<p-sortIcon field=\"name\"></p-sortIcon></th>\r\n                                        <th>Image</th>\r\n                                        <th pSortableColumn=\"price\">Price <p-sortIcon field=\"price\"></p-sortIcon></th>\r\n                                    </tr>\r\n                                </ng-template>\r\n                                <ng-template pTemplate=\"body\" let-rowData let-product>\r\n                                    <tr [pSelectableRow]=\"rowData\">\r\n                                        <td style=\"min-width: 10rem;\">{{product.name}}</td>\r\n                                        <td style=\"min-width: 10rem;\"><img src=\"assets/demo/images/product/{{product.image}}\" [alt]=\"product.image\" width=\"100\" class=\"shadow-2\"/></td>\r\n                                        <td style=\"min-width: 12rem;\">{{formatCurrency(product.price)}}</td>\r\n                                    </tr>\r\n                                </ng-template>\r\n                            </p-table>\r\n                        </ng-template>\r\n                    </p-overlayPanel>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"col-12 lg:col-6\">\r\n        <div class=\"card p-fluid\">\r\n            <h5>Confirmation</h5>\r\n            <p-confirmDialog header=\"Confirmation\" key=\"confirm1\" icon=\"pi pi-exclamation-triangle\" message=\"Are you sure you want to proceed?\"\r\n                             [style]=\"{width: '350px'}\" acceptButtonStyleClass=\"p-button-text\" rejectButtonStyleClass=\"p-button-text\"></p-confirmDialog>\r\n            <div class=\"grid\">\r\n                <div class=\"col-12\">\r\n                    <button type=\"text\" (click)=\"confirm1()\" pButton icon=\"pi pi-trash\" label=\"Delete\" class=\"p-button-danger\" style=\"width:auto;\"></button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"card\">\r\n            <h5>Sidebar</h5>\r\n            <p-sidebar [(visible)]=\"visibleSidebar1\" [baseZIndex]=\"10000\">\r\n                <h3 style=\"font-weight:normal\">Left Sidebar</h3>\r\n            </p-sidebar>\r\n\r\n            <p-sidebar [(visible)]=\"visibleSidebar2\" position=\"right\" [baseZIndex]=\"10000\">\r\n                <h3 style=\"font-weight:normal\">Right Sidebar</h3>\r\n            </p-sidebar>\r\n\r\n            <p-sidebar [(visible)]=\"visibleSidebar3\" position=\"top\" [baseZIndex]=\"10000\">\r\n                <h3 style=\"font-weight:normal\">Top Sidebar</h3>\r\n            </p-sidebar>\r\n\r\n            <p-sidebar [(visible)]=\"visibleSidebar4\" position=\"bottom\" [baseZIndex]=\"10000\">\r\n                <h3 style=\"font-weight:normal\">Bottom Sidebar</h3>\r\n            </p-sidebar>\r\n\r\n            <p-sidebar [(visible)]=\"visibleSidebar5\" [fullScreen]=\"true\" [baseZIndex]=\"10000\">\r\n                <h3 style=\"font-weight:normal\">Full Screen Sidebar</h3>\r\n            </p-sidebar>\r\n\r\n            <button pButton type=\"button\" (click)=\"visibleSidebar1 = true\" icon=\"pi pi-arrow-right\" class=\"p-button-warning mr-2\"></button>\r\n            <button pButton type=\"button\" (click)=\"visibleSidebar2 = true\" icon=\"pi pi-arrow-left\" class=\"p-button-warning mr-2\"></button>\r\n            <button pButton type=\"button\" (click)=\"visibleSidebar3 = true\" icon=\"pi pi-arrow-down\" class=\"p-button-warning mr-2\"></button>\r\n            <button pButton type=\"button\" (click)=\"visibleSidebar4 = true\" icon=\"pi pi-arrow-up\" class=\"p-button-warning mr-2\"></button>\r\n            <button pButton type=\"button\" (click)=\"visibleSidebar5 = true\" icon=\"pi pi-external-link\" class=\"p-button-warning\"></button>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"col-12 lg:col-6\">\r\n        <div class=\"card\">\r\n            <h5>Tooltip</h5>\r\n            <div class=\"formgroup-inline\">\r\n                <div class=\"field\">\r\n                    <label for=\"firstname5\" class=\"p-sr-only\">Username</label>\r\n                    <input id=\"firstname5\" type=\"text\" pInputText placeholder=\"Username\" pTooltip=\"Enter your username\">\r\n                </div>\r\n                <button pButton pRipple type=\"button\" label=\"Save\" icon=\"pi pi-check\" pTooltip=\"Click to proceed\"></button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"col-12 lg:col-6\">\r\n        <div class=\"card\">\r\n            <h5>ConfirmPopup</h5>\r\n\r\n            <p-toast></p-toast>\r\n            <button (click)=\"confirm2($event)\" pButton icon=\"pi pi-check\" label=\"Confirm\"></button>\r\n            <p-confirmPopup key=\"confirm2\"></p-confirmPopup>\r\n        </div>\r\n    </div>\r\n</div>\r\n"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-badb6d8cee577661da79ba82ad8f599604afd40fa34e36c7b88d71d77a4fbc7184228cba2f0d73e255d0b7bc51c4c7a8e7b0128b3624aeb0255abab9030fa59a",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section class=\"storybook-page\">\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "optional": false,
                    "description": "",
                    "line": 64
                }
            ],
            "methodsClass": [
                {
                    "name": "doCreateAccount",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport type { User } from './User';\n\n@Component({\n  selector: 'storybook-page',\n  template: `<article>\n    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section class=\"storybook-page\">\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>`,\n  styleUrls: ['./page.css'],\n})\nexport default class PageComponent {\n  user: User | null = null;\n\n  doLogout() {\n    this.user = null;\n  }\n\n  doLogin() {\n    this.user = { name: 'Jane Doe' };\n  }\n\n  doCreateAccount() {\n    this.user = { name: 'Jane Doe' };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-page {\n  font-family: 'SF Pro Text Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 48px 20px;\n  margin: 0 auto;\n  max-width: 600px;\n  color: #333;\n}\n\n.storybook-page h2 {\n  font-weight: 700;\n  font-size: 32px;\n  line-height: 1;\n  margin: 0 0 4px;\n  display: inline-block;\n  vertical-align: top;\n}\n\n.storybook-page p {\n  margin: 1em 0;\n}\n\n.storybook-page a {\n  text-decoration: none;\n  color: #1ea7fd;\n}\n\n.storybook-page ul {\n  padding-left: 30px;\n  margin: 1em 0;\n}\n\n.storybook-page li {\n  margin-bottom: 8px;\n}\n\n.storybook-page .tip {\n  display: inline-block;\n  border-radius: 1em;\n  font-size: 11px;\n  line-height: 12px;\n  font-weight: 700;\n  background: #e7fdd8;\n  color: #66bf3c;\n  padding: 4px 12px;\n  margin-right: 10px;\n  vertical-align: top;\n}\n\n.storybook-page .tip-wrapper {\n  font-size: 13px;\n  line-height: 20px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n}\n\n.storybook-page .tip-wrapper svg {\n  display: inline-block;\n  height: 12px;\n  width: 12px;\n  margin-right: 4px;\n  vertical-align: top;\n  margin-top: 3px;\n}\n\n.storybook-page .tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "PageForbiddenComponent",
            "id": "component-PageForbiddenComponent-a200e0916aba1214e5e35e76f62b8612e823fe6494b6ed74eedf7199558423795b0ba7b719e335d8ea0f0a7640b153123cdb8a864dc9dde5f83e44a70dbe7581",
            "file": "src/app/layout/page-forbidden/page-forbidden.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-error-page-forbidden-found",
            "styleUrls": [
                "./page-forbidden.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "page-forbidden.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onReturnHome",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { Route, Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-error-page-forbidden-found',\r\n    templateUrl: 'page-forbidden.component.html',\r\n    styleUrls: ['./page-forbidden.component.scss'],\r\n})\r\nexport class PageForbiddenComponent implements OnInit {\r\n    constructor(private router: Router) { }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n    onReturnHome(): void {\r\n        this.router.navigate(['']);\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "h1{    \r\n    font-weight: 900;\r\n    font-size: calc(4rem + 2vw);\r\n}\r\ndiv{\r\n    font-size: calc(2rem + 2vw);\r\n}",
                    "styleUrl": "./page-forbidden.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"text-center\">\r\n    <div>\r\n        Oops!\r\n    </div>\r\n    <h1>\r\n        403\r\n    </h1>\r\n    <div>\r\n        Access Forbidden\r\n    </div>\r\n    <button (click)=\"onReturnHome()\" pButton pRipple label=\"Take Me Home\" class=\"mr-2 mb-2\"></button>\r\n</div>\r\n"
        },
        {
            "name": "PageNotFoundComponent",
            "id": "component-PageNotFoundComponent-b6b613934cde76088976709d021a4e608d4554f7a4f43ef9fab3c5942a83e2443afbb2b0bdb9265cc961df0c8823d6c68d2193d672a7173c6b80dc9db8d43e54",
            "file": "src/app/layout/page-not-found/page-not-found.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-error-page-not-found",
            "styleUrls": [
                "./page-not-found.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "page-not-found.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onReturnHome",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { Route, Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-error-page-not-found',\r\n    templateUrl: 'page-not-found.component.html',\r\n    styleUrls: ['./page-not-found.component.scss'],\r\n})\r\nexport class PageNotFoundComponent implements OnInit {\r\n    constructor(private router: Router) { }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n    \r\n    onReturnHome(): void {\r\n        this.router.navigate(['']);\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "h1{    \r\n    font-weight: 900;\r\n    font-size: calc(4rem + 2vw);\r\n}\r\ndiv{\r\n    font-size: calc(2rem + 2vw);\r\n}",
                    "styleUrl": "./page-not-found.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"text-center\">\r\n    <div>\r\n        Oops!\r\n    </div>\r\n    <h1>\r\n        404\r\n    </h1>\r\n    <div>\r\n        Requested page not found!\r\n    </div>\r\n    \r\n    <button (click)=\"onReturnHome()\" pButton pRipple label=\"Take Me Home\" class=\"mr-2 mb-2\"></button>\r\n</div>\r\n"
        },
        {
            "name": "PanelsComponent",
            "id": "component-PanelsComponent-5b5d315279d44faef6cf930a484f96042d3a6df0d97fa7706c374ce183f64df94ed01cd56c6c6a5b55d685c462574047642bda47285e360f45ce8bdca6c62bf7",
            "file": "src/app/showcase/components/panels/panels.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./panels.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "cardMenu",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem[]",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "items",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem[]",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { MenuItem } from 'primeng/api';\r\n\r\n@Component({\r\n    templateUrl: './panels.component.html',\r\n})\r\nexport class PanelsComponent implements OnInit {\r\n\r\n    items: MenuItem[];\r\n\r\n    cardMenu: MenuItem[];\r\n\r\n    ngOnInit() {\r\n        this.items = [\r\n            {label: 'Angular.io', icon: 'pi pi-external-link', url: 'http://angular.io'},\r\n            {label: 'Theming', icon: 'pi pi-bookmark', routerLink: ['/theming']}\r\n        ];\r\n\r\n        this.cardMenu = [\r\n            {\r\n                label: 'Save', icon: 'pi pi-fw pi-check'\r\n            },\r\n            {\r\n                label: 'Update', icon: 'pi pi-fw pi-refresh'\r\n            },\r\n            {\r\n                label: 'Delete', icon: 'pi pi-fw pi-trash'\r\n            },\r\n        ];\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"grid\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <h5>Toolbar</h5>\r\n            <p-toolbar>\r\n                <div class=\"p-toolbar-group-left flex flex-wrap\">\r\n                    <button pButton type=\"button\" label=\"New\" icon=\"pi pi-plus\" class=\"mr-2\"></button>\r\n                    <button pButton type=\"button\" label=\"Open\" icon=\"pi pi-folder-open\" class=\"p-button-secondary mr-2\"></button>\r\n\r\n                    <i class=\"pi pi-bars p-toolbar-separator\"></i>\r\n\r\n                    <button pButton type=\"button\" icon=\"pi pi-check\" class=\"p-button-success mr-2\"></button>\r\n                    <button pButton type=\"button\" icon=\"pi pi-trash\" class=\"p-button-warning mr-2\"></button>\r\n                    <button pButton type=\"button\" icon=\"pi pi-print\" class=\"p-button-danger\"></button>\r\n                </div>\r\n\r\n                <div class=\"p-toolbar-group-right\">\r\n                    <p-splitButton label=\"Options\" icon=\"pi pi-check\" [model]=\"items\"></p-splitButton>\r\n                </div>\r\n            </p-toolbar>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"col-12 md:col-6\">\r\n        <div class=\"card\">\r\n            <h5>AccordionPanel</h5>\r\n            <p-accordion>\r\n                <p-accordionTab header=\"Header I\" [selected]=\"true\" class=\"line-height-3 m-0\">\r\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore\r\n                    et dolore magna aliqua.\r\n                    Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\r\n                    consequat.\r\n                    Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\r\n                    pariatur.\r\n                    Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id\r\n                    est laborum.\r\n                </p-accordionTab>\r\n                <p-accordionTab header=\"Header II\" class=\"line-height-3 m-0\">\r\n                    Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium,\r\n                    totam rem aperiam, eaque\r\n                    ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo\r\n                    enim ipsam voluptatem quia\r\n                    voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione\r\n                    voluptatem sequi nesciunt.\r\n                    Consectetur, adipisci velit, sed quia non numquam eius modi.\r\n                </p-accordionTab>\r\n                <p-accordionTab header=\"Header III\" class=\"line-height-3 m-0\">\r\n                    At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum\r\n                    deleniti atque corrupti quos dolores\r\n                    et quas molestias excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui\r\n                    officia deserunt mollitia animi, id est laborum et dolorum fuga.\r\n                    Et harum quidem rerum facilis est et expedita distinctio. Nam libero tempore, cum soluta nobis est\r\n                    eligendi optio cumque nihil impedit\r\n                    quo minus.\r\n                </p-accordionTab>\r\n            </p-accordion>\r\n        </div>\r\n\r\n        <div class=\"card\">\r\n            <h5>TabView</h5>\r\n            <p-tabView orientation=\"left\">\r\n                <p-tabPanel header=\"Header I\" class=\"line-height-3 m-0\">\r\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore\r\n                    et dolore magna aliqua.\r\n                    Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\r\n                    consequat.\r\n                    Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\r\n                    pariatur.\r\n                    Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id\r\n                    est laborum.\r\n                </p-tabPanel>\r\n                <p-tabPanel header=\"Header II\" class=\"line-height-3 m-0\">\r\n                    Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium,\r\n                    totam rem aperiam, eaque\r\n                    ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo\r\n                    enim ipsam voluptatem quia\r\n                    voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione\r\n                    voluptatem sequi nesciunt.\r\n                    Consectetur, adipisci velit, sed quia non numquam eius modi.\r\n                </p-tabPanel>\r\n                <p-tabPanel header=\"Header III\" class=\"line-height-3 m-0\">\r\n                    At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum\r\n                    deleniti atque corrupti quos dolores\r\n                    et quas molestias excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui\r\n                    officia deserunt mollitia animi, id est laborum et dolorum fuga.\r\n                    Et harum quidem rerum facilis est et expedita distinctio. Nam libero tempore, cum soluta nobis est\r\n                    eligendi optio cumque nihil impedit\r\n                    quo minus.\r\n                </p-tabPanel>\r\n            </p-tabView>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"col-12 md:col-6\">\r\n        <div class=\"card\">\r\n            <h5>Panel</h5>\r\n            <p-panel header=\"Header\" [toggleable]=\"true\" class=\"line-height-3 m-0\">\r\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et\r\n                dolore magna aliqua.\r\n                Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\r\n                consequat.\r\n                Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\r\n                Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est\r\n                laborum.\r\n            </p-panel>\r\n        </div>\r\n\r\n        <div class=\"card\">\r\n            <h5>Fieldset</h5>\r\n            <p-fieldset legend=\"Legend\" toggleable=\"true\" class=\"line-height-3 m-0\">\r\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et\r\n                dolore magna aliqua.\r\n                Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\r\n                consequat.\r\n                Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\r\n                Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est\r\n                laborum.\r\n            </p-fieldset>\r\n        </div>\r\n\r\n        <div class=\"card\">\r\n            <div class=\"flex align-items-center justify-content-between mb-0\">\r\n                <h5>Card</h5>\r\n                <p-menu #menu [popup]=\"true\" [model]=\"cardMenu\"></p-menu>\r\n                <button pButton type=\"button\" icon=\"pi pi-plus\" class=\"p-button-text\"\r\n                        (click)=\"menu.toggle($event)\"></button>\r\n            </div>\r\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et\r\n                dolore magna aliqua.\r\n                Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\r\n                consequat.\r\n                Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\r\n                Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est\r\n                laborum.</p>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <h5>Divider</h5>\r\n            <div class=\"grid\">\r\n                <div class=\"col-5 flex align-items-center justify-content-center\">\r\n                    <div class=\"p-fluid\">\r\n                        <div class=\"field\">\r\n                            <label for=\"username\">Username</label>\r\n                            <input pInputText id=\"username\" type=\"text\"/>\r\n                        </div>\r\n                        <div class=\"field\">\r\n                            <label for=\"password\">Password</label>\r\n                            <input pInputText id=\"password\" type=\"password\"/>\r\n                        </div>\r\n                        <p-button label=\"Login\" class=\"mt-2\"></p-button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-2\">\r\n                    <p-divider layout=\"vertical\">\r\n                        <b>OR</b>\r\n                    </p-divider>\r\n                </div>\r\n                <div class=\"col-5 align-items-center justify-content-center\">\r\n                    <p class=\"line-height-3 m-0\">Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium,\r\n                        totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi\r\n                        architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit\r\n                        aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione\r\n                        voluptatem sequi nesciunt. Consectetur, adipisci velit, sed quia non numquam eius modi.</p>\r\n\r\n                    <p-divider layout=\"horizontal\" align=\"center\">\r\n                        <span class=\"p-tag\">Badge</span>\r\n                    </p-divider>\r\n\r\n                    <p class=\"line-height-3 m-0\">At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum\r\n                        deleniti atque corrupti quos dolores et quas molestias excepturi sint occaecati\r\n                        cupiditate non provident, similique sunt in culpa qui officia deserunt mollitia animi, id est\r\n                        laborum et dolorum fuga. Et harum quidem rerum facilis est et expedita distinctio.\r\n                        Nam libero tempore, cum soluta nobis est eligendi optio cumque nihil impedit quo minus.</p>\r\n\r\n                    <p-divider align=\"right\">\r\n                        <p-button label=\"Button\" icon=\"pi pi-search\" styleClass=\"p-button-outlined\"></p-button>\r\n                    </p-divider>\r\n\r\n                    <p class=\"line-height-3 m-0\">Temporibus autem quibusdam et aut officiis debitis aut rerum necessitatibus saepe eveniet ut et\r\n                        voluptates repudiandae sint et molestiae non recusandae. Itaque earum rerum hic tenetur\r\n                        a sapiente delectus, ut aut reiciendis voluptatibus maiores alias consequatur aut perferendis\r\n                        doloribus asperiores repellat.\r\n                        Donec vel volutpat ipsum. Integer nunc magna, posuere ut tincidunt eget, egestas vitae sapien.\r\n                        Morbi dapibus luctus odio.</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <h5>Splitter</h5>\r\n            <p-splitter [style]=\"{'height': '300px'}\" [minSizes]=\"[10,0]\" styleClass=\"mb-5\" [panelStyle]=\"{'overflow': 'scroll'}\">\r\n                <ng-template pTemplate>\r\n                    <p class=\"col m-3\">\r\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut\r\n                        labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation\r\n                        ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit\r\n                        in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\r\n                        Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim\r\n                        id est laborum.\r\n                    </p>\r\n                </ng-template>\r\n                <ng-template pTemplate>\r\n                    <p-splitter layout=\"vertical\" [panelSizes]=\"[30,70]\" [minSizes]=\"[10,10]\" [style]=\"{'overflow':'scroll'}\">\r\n                        <ng-template pTemplate>\r\n                            <p class=\"col m-3\">\r\n                                Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium\r\n                                doloremque\r\n                                laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi\r\n                                architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia\r\n                                voluptas\r\n                                sit\r\n                                aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione\r\n                                voluptatem sequi nesciunt. Consectetur, adipisci velit, sed quia non numquam eius\r\n                                modi.\r\n                            </p>\r\n                        </ng-template>\r\n                        <ng-template pTemplate>\r\n                            <p class=\"col m-3\">\r\n                                At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis\r\n                                praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias\r\n                                excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui\r\n                                officia deserunt mollitia animi, id est laborum et dolorum fuga. Et harum quidem\r\n                                rerum facilis est et expedita distinctio. Nam libero tempore, cum soluta nobis est\r\n                                eligendi optio cumque nihil impedit quo minus.\r\n                            </p>\r\n                        </ng-template>\r\n                    </p-splitter>\r\n                </ng-template>\r\n            </p-splitter>\r\n        </div>\r\n    </div>\r\n</div>\r\n"
        },
        {
            "name": "PaymentComponent",
            "id": "component-PaymentComponent-7f5d7b119cad7bd0adbddf3f8b29f0ca821c03c4731e738c3217089092da51643910183a289b80d73704a8fdd65b57c3f5876c9a0eefb9e4d8644aa03ce94504",
            "file": "src/app/showcase/components/menus/payment.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-payment",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"flex flex-column align-items-center justify-content-center h-full py-5 px-3\">\n  <i class=\"pi pi-fw pi-money-bill mr-2 text-2xl\"></i>\n  <p class=\"m-0 mt-5 text-center text-lg\">Payment Component Content via Child Route</p>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-payment',\r\n  template: `\r\n    <div class=\"flex flex-column align-items-center justify-content-center h-full py-5 px-3\">\r\n      <i class=\"pi pi-fw pi-money-bill mr-2 text-2xl\"></i>\r\n      <p class=\"m-0 mt-5 text-center text-lg\">Payment Component Content via Child Route</p>\r\n    </div>\r\n  `\r\n})\r\nexport class PaymentComponent{\r\n\r\n  constructor() { }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 12
            }
        },
        {
            "name": "PayrollInfoDashboardComponent",
            "id": "component-PayrollInfoDashboardComponent-16616a52e6e29aa14e2c46d5350898dfb4c9738925ce6c8d18a5deb5346c5af630a33a9c8f8953e2eaa968a27637de70477cc93a3534cde51f67c0bc70b3a617",
            "file": "src/app/core/dashboard/component/payroll-info-dashboard/payroll-info-dashboard.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-payroll-info-dashboard",
            "styleUrls": [
                "./payroll-info-dashboard.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./payroll-info-dashboard.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "year",
                    "defaultValue": "new Date().getFullYear()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { DashboardService } from '../../service/dashboard.service';\r\n\r\n@Component({\r\n  selector: 'app-payroll-info-dashboard',\r\n  templateUrl: './payroll-info-dashboard.component.html',\r\n  styleUrls: ['./payroll-info-dashboard.component.scss']\r\n})\r\nexport class PayrollInfoDashboardComponent implements OnInit {\r\n\r\n  constructor(private api:DashboardService) { }\r\n\r\n  data;\r\n  year=new Date().getFullYear();\r\n  ngOnInit(): void {\r\n    this.api.getPayroll().toPromise().then(res=>{\r\n      this.data=res;\r\n    })\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./payroll-info-dashboard.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "api",
                        "type": "DashboardService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "api",
                        "type": "DashboardService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"grid\">\r\n    <div class=\"flex align-items-center justify-content-center bg-orange-100 border-round\" [ngStyle]=\"{width: '6.5rem', height: '6.5rem'}\">\r\n        <i class=\"bi bi-wallet2 text-orange-600 text-6xl\"></i>\r\n    </div>\r\n    <div class=\"flex-1 pl-3 grid\">\r\n        <div class=\"col-12  border-bottom-custom\">\r\n            <label class=\"title-font cus-text-lg\">Total Penggajian Karyawan</label>\r\n        </div>\r\n        <div class=\"col-7 grid\">\r\n            <div class=\"col-12 \">\r\n                <label class=\"content-font cus-text-base\">{{data?.totalEmployee || '-'}} Pegawai</label>\r\n            </div>\r\n            <div class=\"col-12 \">\r\n                <label class=\"link-font cus-text-xs\">Periode {{data?.year || '-'}}</label>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-5 flex align-items-stretch flex-wrap\">\r\n            <div class=\"col-12  flex align-items-center justify-content-center\">\r\n                <label class=\"title-font cus-text-lg\">{{data?.totalAmount || '-'}}</label>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n"
        },
        {
            "name": "PayrollMonthlyDashboardComponent",
            "id": "component-PayrollMonthlyDashboardComponent-5104dbe64b0892e761f939d31227f803f8ebec431b1a62f9043bcf77673722d3651b23b837888b9bf814a2ab1f38858eba344a10b96e1ae76fde6c69dedf943c",
            "file": "src/app/core/dashboard/component/payroll-monthly-dashboard/payroll-monthly-dashboard.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-payroll-monthly-dashboard",
            "styleUrls": [
                "./payroll-monthly-dashboard.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./payroll-monthly-dashboard.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "chartOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "loading",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "subcription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 105
                }
            ],
            "methodsClass": [
                {
                    "name": "getData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 120,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 150,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 106,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "reload",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 133,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "wait",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 115,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        132
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { HelperService } from 'src/app/core/service/helper-service';\r\nimport { ConfigService } from 'src/app/core/service/app.config.service';\r\nimport { DashboardService } from '../../service/dashboard.service';\r\n\r\n@Component({\r\n    selector: 'app-payroll-monthly-dashboard',\r\n    templateUrl: './payroll-monthly-dashboard.component.html',\r\n    styleUrls: ['./payroll-monthly-dashboard.component.scss'],\r\n})\r\nexport class PayrollMonthlyDashboardComponent implements OnInit, OnDestroy {\r\n    chartOptions;\r\n    loading = true;\r\n\r\n    constructor(\r\n        private srv: DashboardService,\r\n        private configService: ConfigService,\r\n        private help: HelperService\r\n    ) {\r\n        this.chartOptions = {\r\n            chart: {\r\n                id: 'Payroll-chart',\r\n                height: 350,\r\n                type: 'line',\r\n                toolbar: {\r\n                    show: true,\r\n                },\r\n                zoom: {\r\n                    enabled: false,\r\n                },\r\n            },\r\n            plotOptions: {\r\n                bar: {\r\n                    columnWidth: '45%',\r\n                    distributed: false,\r\n                },\r\n            },\r\n            yaxis: {\r\n                title: {\r\n                    text: 'Gaji',\r\n                },\r\n                labels: {\r\n                    formatter: function (value) {\r\n                        let val: string | number = Math.abs(value);\r\n\r\n                        if (val >= 10 ** 3 && val < 10 ** 6) {\r\n                            val = (val / 1000).toFixed(0) + ' K';\r\n                        } else if (val >= 10 ** 6) {\r\n                            val = (val / 1000000).toFixed(0) + ' JT';\r\n                        } else {\r\n                            val = val;\r\n                        }\r\n\r\n                        return val;\r\n                    },\r\n                },\r\n            },\r\n            colors: [\r\n                '#14B8A6',\r\n                '#008FFB',\r\n                '#FEB019',\r\n                '#FF4560',\r\n                '#775DD0',\r\n                '#546E7A',\r\n                '#26a69a',\r\n                '#D10CE8',\r\n            ],\r\n            series: [\r\n                {\r\n                    name: 'Penggajian',\r\n                    data: [],\r\n                },\r\n            ],\r\n            labelName: [],\r\n            dataLabels: {\r\n                enabled: false,\r\n            },\r\n            grid: {\r\n                borderColor: '#e7e7e7',\r\n                row: {\r\n                    colors: ['#f3f3f3', 'transparent'],\r\n                    opacity: 0.5,\r\n                },\r\n            },\r\n            xaxis: {\r\n                categories: [],\r\n                tickPlacement: 'on',\r\n                title: {\r\n                    text: 'Bulan',\r\n                },\r\n            },\r\n            responsive: [\r\n                {\r\n                    breakpoint: 900,\r\n                    options: {\r\n                        chart: {\r\n                            height: 400,\r\n                        },\r\n                    },\r\n                },\r\n            ],\r\n        };\r\n    }\r\n\r\n    subcription;\r\n    ngOnInit(): void {\r\n        this.getData();\r\n        this.subcription = this.configService.menuToggle$.subscribe(\r\n            (config) => {\r\n                this.wait();\r\n            }\r\n        );\r\n    }\r\n\r\n    async wait() {\r\n        await new Promise((f) => setTimeout(f, 200));\r\n        this.reload();\r\n    }\r\n\r\n    getData() {\r\n        this.loading = true;\r\n        this.srv\r\n            .getPayrollMonthly()\r\n            .toPromise()\r\n            .then((res) => {\r\n                this.chartOptions.series[0].data = res.data;\r\n                this.chartOptions.labelName = res.label;\r\n                this.loading = false;\r\n                this.reload();\r\n            });\r\n    }\r\n\r\n    reload() {\r\n        this.chartOptions.responsive = [\r\n            {\r\n                breakpoint: 480,\r\n                options: {\r\n                    chart: {\r\n                        height: 350,\r\n                    },\r\n                },\r\n            },\r\n        ];\r\n        var chart = new ApexCharts(\r\n            document.querySelector('#PayrollMonthlyChart'),\r\n            this.chartOptions\r\n        );\r\n        chart.render();\r\n    }\r\n    ngOnDestroy(): void {\r\n        this.subcription.unsubscribe();\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./payroll-monthly-dashboard.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "srv",
                        "type": "DashboardService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "configService",
                        "type": "ConfigService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "help",
                        "type": "HelperService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "srv",
                        "type": "DashboardService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "configService",
                        "type": "ConfigService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "help",
                        "type": "HelperService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<div class=\"grid field p-fluid\">\r\n  <div class=\"col-12 md:col-12 m-0 p-0\">\r\n    <h5 class=\"pt-2\">Grafik Penggajian</h5>\r\n  </div>\r\n</div>\r\n<apx-chart #PayrollMonthlyChart [series]=\"chartOptions.series\" [yaxis]=\"chartOptions.yaxis\" [chart]=\"chartOptions.chart\"\r\n  [xaxis]=\"chartOptions.xaxis\" [responsive]=\"chartOptions.responsive\" [plotOptions]=\"chartOptions.plotOptions\"\r\n  [colors]=\"chartOptions.colors\" [grid]=\"chartOptions.grid\" [labels]=\"chartOptions.labelName\"\r\n  [responsive]=\"chartOptions.responsive\"></apx-chart>"
        },
        {
            "name": "PersonalComponent",
            "id": "component-PersonalComponent-1da017cb3a7f9da2ff3347b57902f87eedc050d989a879ae2af363798222e52cfc54fa8d89a2e8dc91b7c7b1c28596ed75b907869855ccc68d400ee7a83d2935",
            "file": "src/app/showcase/components/menus/personal.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-personal",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"flex flex-column align-items-center justify-content-center h-full py-5 px-3\">\n  <i class=\"pi pi-fw pi-user mr-2 text-2xl\"></i>\n  <p class=\"mt-5 text-center text-lg\">Personal Component Content via Child Route</p>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-personal',\r\n  template: `\r\n  <div class=\"flex flex-column align-items-center justify-content-center h-full py-5 px-3\">\r\n    <i class=\"pi pi-fw pi-user mr-2 text-2xl\"></i>\r\n    <p class=\"mt-5 text-center text-lg\">Personal Component Content via Child Route</p>\r\n  </div>\r\n  `\r\n})\r\nexport class PersonalComponent{\r\n\r\n  constructor() { }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 12
            }
        },
        {
            "name": "RadioButtonComponent",
            "id": "component-RadioButtonComponent-2271b60a776a1330148fb83756cebee31432f9b82bcf9b93e288cc239e46f26f3c5622cf449a55ed9afd596217cf008f2473f3d923e44b833d82de6ffaabdddb",
            "file": "src/stories/primeng/controls/radio-button/radio-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "radiobutton-custom",
            "styleUrls": [
                "./radio-button.component.css"
            ],
            "styles": [],
            "template": "<div [ngClass]=\"isVertical ? 'vertical' : 'horizontal'\">\n    <p-radioButton\n        *ngFor=\"let item of items\"\n        [value]=\"item.value\"\n        [label]=\"item.label\"\n        [(ngModel)]=\"selected\"\n        (click)=\"onChange()\"\n    ></p-radioButton>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "isVertical",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "items",
                    "defaultValue": "[\r\n        {label : '1', value : '1'},\r\n        {label : '2', value : '2'},\r\n    ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "any[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "select",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "selected",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 26
                }
            ],
            "methodsClass": [
                {
                    "name": "onChange",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: 'radiobutton-custom',\r\n    template: `\r\n    <div [ngClass]=\"isVertical ? 'vertical' : 'horizontal'\">\r\n        <p-radioButton\r\n            *ngFor=\"let item of items\"\r\n            [value]=\"item.value\"\r\n            [label]=\"item.label\"\r\n            [(ngModel)]=\"selected\"\r\n            (click)=\"onChange()\"\r\n        ></p-radioButton>\r\n    </div>\r\n    `,\r\n    styleUrls: ['./radio-button.component.css']\r\n})\r\n\r\nexport class RadioButtonComponent {\r\n    @Input() items : any[] = [\r\n        {label : '1', value : '1'},\r\n        {label : '2', value : '2'},\r\n    ];\r\n    @Input() isVertical : boolean = true;\r\n    @Output() select = new EventEmitter<any>();\r\n    selected : any;\r\n\r\n    onChange(){\r\n        console.log(this.selected);\r\n        this.select.emit(this.selected);\r\n    }\r\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host ::ng-deep .p-radiobutton-label{\r\n    font-size: 14px;\r\n    font-weight: 400;\r\n    color: #656565;\r\n}\r\n\r\n:host ::ng-deep p-radiobutton{\r\n    margin-bottom: 0.5em;\r\n    margin-right: 1em;\r\n}\r\n\r\n:host ::ng-deep .p-radiobutton-label{\r\n    margin-left: unset;\r\n    margin-left: 0.2em;\r\n}\r\n\r\ndiv.horizontal{\r\n    display: flex;\r\n    flex-direction: row;\r\n}\r\n\r\ndiv.vertical{\r\n    display: flex;\r\n    flex-direction: column;\r\n}",
                    "styleUrl": "./radio-button.component.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "RedirectComponent",
            "id": "component-RedirectComponent-dab182e956eb3e70e26543bd6a93a6c635a121aa73da8462627d258635c1fcaf9dd4ebc19a218cbe48723866cc2e87e634653320164574485cce9434d176180b",
            "file": "src/app/layout/redirect/redirect.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-redirect",
            "styleUrls": [
                "./redirect.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./redirect.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "token",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "isNotValid",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onLoginSSO",
                    "args": [
                        {
                            "name": "code",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "code",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ApiService } from 'src/app/core/service/api.service';\r\nimport { AuthenticationService } from 'src/app/core/service/authentication.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { firstValueFrom, lastValueFrom } from 'rxjs';\r\n@Component({\r\n    selector: 'app-redirect',\r\n    templateUrl: './redirect.component.html',\r\n    styleUrls: ['./redirect.component.scss'],\r\n})\r\nexport class RedirectComponent implements OnInit {\r\n    token;\r\n    constructor(\r\n        private srv: ApiService,\r\n        private aRoute: ActivatedRoute,\r\n        private route: Router,\r\n        private auth: AuthenticationService\r\n    ) {}\r\n\r\n    ngOnInit(): void {\r\n        this.aRoute.queryParams.subscribe((queryParams) => {\r\n            this.token = queryParams['token'];\r\n            if (this.token) {\r\n                this.onLoginSSO(this.token);\r\n            } else {\r\n                lastValueFrom(this.srv.getSSOToken(true)).then((res) => {\r\n                    lastValueFrom(\r\n                        this.srv.postLoginSSO(res.accessToken, true)\r\n                    ).then((resp) => {\r\n                        this.onLoginSSO(resp.code);\r\n                    });\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    onLoginSSO(code) {\r\n        this.srv.get('open/auth/detail/' + code, null, true).subscribe({\r\n            next: (resp) => {\r\n                if (resp) {\r\n                    let data = JSON.stringify(resp);\r\n                    this.auth.createSession(data);\r\n                    this.route.navigate(['/']);\r\n                } else {\r\n                    this.isNotValid();\r\n                }\r\n            },\r\n            error: (err) => {\r\n                this.isNotValid();\r\n            },\r\n        });\r\n    }\r\n\r\n    isNotValid() {\r\n        if (environment.isSSO) {\r\n            window.location.href = environment.linovWordpress;\r\n        } else {\r\n            this.route.navigate(['/login']);\r\n        }\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./redirect.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "srv",
                        "type": "ApiService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "aRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "auth",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "srv",
                        "type": "ApiService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "aRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "auth",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<ngx-spinner></ngx-spinner>"
        },
        {
            "name": "ReimburseInfoDashboardComponent",
            "id": "component-ReimburseInfoDashboardComponent-8cb1058e908a5c6f52da4a9c52e832f52a09bb77238fc6f2d854cd2c2e5a49585b8aac1abbb2a377a5a1ad0c94f3f0a944332383fbdf964f391184e2fa31d366",
            "file": "src/app/core/dashboard/component/reimburse-info-dashboard/reimburse-info-dashboard.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-reimburse-info-dashboard",
            "styleUrls": [
                "./reimburse-info-dashboard.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./reimburse-info-dashboard.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "year",
                    "defaultValue": "new Date().getFullYear()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { DashboardService } from '../../service/dashboard.service';\r\n\r\n@Component({\r\n  selector: 'app-reimburse-info-dashboard',\r\n  templateUrl: './reimburse-info-dashboard.component.html',\r\n  styleUrls: ['./reimburse-info-dashboard.component.scss']\r\n})\r\nexport class ReimburseInfoDashboardComponent implements OnInit {\r\n\r\n  constructor(private api:DashboardService) { }\r\n  data;\r\n  year=new Date().getFullYear();\r\n  ngOnInit(): void {\r\n    this.api.getReimburseInfo().toPromise().then(res=>{\r\n      this.data=res;\r\n    })\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./reimburse-info-dashboard.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "api",
                        "type": "DashboardService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "api",
                        "type": "DashboardService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"grid\">\r\n    <div class=\"flex align-items-center justify-content-center bg-indigo-100 border-round\" [ngStyle]=\"{width: '6.5rem', height: '6.5rem'}\">\r\n        <i class=\"bi bi-journal-medical text-indigo-500 text-6xl\"></i>\r\n    </div>\r\n    <div class=\"flex-1 pl-3 grid\">\r\n        <div class=\"col-12  border-bottom-custom\">\r\n            <label class=\"title-font cus-text-lg\">Total Penggantian</label>\r\n        </div>\r\n        <div class=\"col-7 grid\">\r\n            <div class=\"col-12 \">\r\n                <label class=\"content-font cus-text-base\">{{data?.total || '-'}} Penggantian</label>\r\n            </div>\r\n            <div class=\"col-12 \">\r\n                <label class=\"link-font cus-text-xs\">Periode {{year ||'-'}}</label>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-5 flex align-items-stretch flex-wrap\">\r\n            <div class=\"col-12  flex align-items-center justify-content-center\">\r\n                <label class=\"title-font cus-text-lg\">{{data?.amount || '-'}}</label>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n"
        },
        {
            "name": "RequestInfoDashboardComponent",
            "id": "component-RequestInfoDashboardComponent-c394c3ee9372c6f4650973e62b29d98ee0bd5c99cd189fb14f01c84360805ba4d6b89aecc814e412cc13d17d4bec090f3067d15e1eda674e588c98d9792f8732",
            "file": "src/app/core/dashboard/component/request-info-dashboard/request-info-dashboard.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-request-info-dashboard",
            "styleUrls": [
                "./request-info-dashboard.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./request-info-dashboard.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "year",
                    "defaultValue": "new Date().getFullYear()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { DashboardService } from '../../service/dashboard.service';\r\n\r\n@Component({\r\n  selector: 'app-request-info-dashboard',\r\n  templateUrl: './request-info-dashboard.component.html',\r\n  styleUrls: ['./request-info-dashboard.component.scss']\r\n})\r\nexport class RequestInfoDashboardComponent implements OnInit {\r\n  constructor(private api:DashboardService) { }\r\n  data;\r\n  year=new Date().getFullYear();\r\n  ngOnInit(): void {\r\n    this.api.getTimeInfo().toPromise().then(res=>{\r\n      this.data=res;\r\n    })\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./request-info-dashboard.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "api",
                        "type": "DashboardService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "api",
                        "type": "DashboardService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"grid\">\r\n    <div class=\"flex align-items-center justify-content-center bg-purple-100 border-round\" [ngStyle]=\"{width: '6.5rem', height: '6.5rem'}\">\r\n        <i class=\"bi bi-clock-history text-purple-500 text-6xl\"></i>\r\n    </div>\r\n    <div class=\"flex-1 pl-3 grid\">\r\n        <div class=\"col-12  border-bottom-custom\">\r\n            <label class=\"title-font cus-text-lg\">Total Pengajuan</label>\r\n        </div>\r\n        <div class=\"col-7 grid\">\r\n            <div class=\"col-12 \">\r\n                <label class=\"content-font cus-text-base\">{{data?.request || '-'}} Pengajuan</label>\r\n            </div>\r\n            <div class=\"col-12 \">\r\n                <label class=\"link-font cus-text-xs\">Periode {{year ||'-'}}</label>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-5 flex align-items-stretch flex-wrap\">\r\n            <div class=\"col-12  flex align-items-center justify-content-center\">\r\n                <label class=\"title-font cus-text-lg\">{{data?.confirm ||'-'}} Dikonfirmasi</label>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n"
        },
        {
            "name": "RoleListComponent",
            "id": "component-RoleListComponent-a4e88453c0fcb3d3cb01794dcf87970ee18ba8abd3b087d825e556dd189f3105a7222d4a7ff0a2188006565fd66cfd29d12c6a98a9c92bc482d3f1c747b9615b",
            "file": "src/app/util/role/list/role-list.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-role-list",
            "styleUrls": [
                "./role-list.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./role-list.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "action",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "body",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "count",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "detailLoading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "first",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "isShow",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "item",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "list",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "listDetail",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "listFilter",
                    "defaultValue": "[\r\n        { label: 'Semua', value: '' },\r\n        { label: 'ESS', value: 'ESS' },\r\n        { label: 'WEB', value: 'WEB' },\r\n    ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33
                }
            ],
            "methodsClass": [
                {
                    "name": "editDashboard",
                    "args": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 88,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "editReport",
                    "args": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getList",
                    "args": [
                        {
                            "name": "pi",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "pi",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSave",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 108,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSearch",
                    "args": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onTableLazyLoad",
                    "args": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n    ChangeDetectionStrategy,\r\n    ChangeDetectorRef,\r\n    Component,\r\n    OnInit,\r\n} from '@angular/core';\r\nimport { PageInfo } from 'src/app/core/model/page-info';\r\nimport { MessageBoxService } from 'src/app/core/service/message-box.service';\r\nimport { RoleService } from '../service/role.service';\r\n\r\n@Component({\r\n    selector: 'app-role-list',\r\n    templateUrl: './role-list.component.html',\r\n    styleUrls: ['./role-list.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class RoleListComponent implements OnInit {\r\n    list;\r\n    listDetail;\r\n    count;\r\n    detailLoading;\r\n    item;\r\n    first = 0;\r\n    constructor(\r\n        private srv: RoleService,\r\n        private cd: ChangeDetectorRef,\r\n        private msg: MessageBoxService\r\n    ) {}\r\n    loading = false;\r\n    body;\r\n    action = '';\r\n    isShow = false;\r\n    type;\r\n    listFilter = [\r\n        { label: 'Semua', value: '' },\r\n        { label: 'ESS', value: 'ESS' },\r\n        { label: 'WEB', value: 'WEB' },\r\n    ];\r\n    ngOnInit(): void {}\r\n\r\n    onSearch(e) {\r\n        this.body = e;\r\n        this.getList(new PageInfo(1, 10));\r\n    }\r\n    onTableLazyLoad(e) {\r\n        const page = e.first / e.rows + 1;\r\n        const limit = e.rows;\r\n        this.getList(new PageInfo(page, limit));\r\n    }\r\n    getList(pi) {\r\n        this.first = pi.page - 1;\r\n        this.loading = true;\r\n        this.list = [];\r\n        this.srv.getAll(pi, this.body).subscribe(\r\n            (res) => {\r\n                if (res) {\r\n                    this.loading = false;\r\n                    this.list = res.data;\r\n                    this.count = res.count;\r\n                    this.cd.detectChanges();\r\n                }\r\n            },\r\n            (err) => {\r\n                this.loading = false;\r\n                this.cd.detectChanges();\r\n            }\r\n        );\r\n    }\r\n    editReport(e) {\r\n        this.item = e;\r\n        this.listDetail = [];\r\n        this.type = 'Laporan-';\r\n        this.isShow = true;\r\n        this.detailLoading = true;\r\n        this.srv.getReport(e.id).subscribe(\r\n            (res) => {\r\n                res.roleId = e.id;\r\n                this.listDetail = res;\r\n                this.detailLoading = false;\r\n                this.cd.detectChanges();\r\n            },\r\n            (err) => {\r\n                this.detailLoading = false;\r\n                this.cd.detectChanges();\r\n            }\r\n        );\r\n    }\r\n    editDashboard(e) {\r\n        this.item = e;\r\n        this.listDetail = [];\r\n        this.type = 'Dashbor-';\r\n        this.isShow = true;\r\n        this.detailLoading = true;\r\n        this.srv.getDashboard(e.id).subscribe(\r\n            (res) => {\r\n                res.roleId = e.id;\r\n                this.listDetail = res;\r\n                this.detailLoading = false;\r\n                this.cd.detectChanges();\r\n            },\r\n            (err) => {\r\n                this.detailLoading = false;\r\n                this.cd.detectChanges();\r\n            }\r\n        );\r\n    }\r\n\r\n    onSave() {\r\n        this.srv.update(this.listDetail).subscribe((res) => {\r\n            this.msg.showSuccess(res);\r\n            this.isShow = false;\r\n            this.cd.detectChanges();\r\n        });\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./role-list.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "srv",
                        "type": "RoleService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "msg",
                        "type": "MessageBoxService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 23,
                "jsdoctags": [
                    {
                        "name": "srv",
                        "type": "RoleService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "msg",
                        "type": "MessageBoxService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"card\">\r\n    <div class=\"grid field\">\r\n        <div class=\"col-6 mt-2\">\r\n            <h5>Daftar Peran</h5>\r\n        </div>\r\n    </div>\r\n    <p-table [value]=\"list\" [totalRecords]=\"count\" [lazy]=\"true\" [(first)]=\"first\" (onLazyLoad)=\"onTableLazyLoad($event)\" [rows]=\"10\" [loading]=\"loading\" styleClass=\"p-datatable-gridlines\" [paginator]=\"true\" pageLinks=\"3\" responsiveLayout=\"scroll\">\r\n        <ng-template pTemplate=\"caption\">\r\n            <div class=\"justify-content-between flex-column sm:flex-row\">\r\n                <app-search (search)=\"onSearch($event)\" [isFilter]=\"true\" [customFilterLabel]=\"listFilter\" placeholder=\"Aplikasi\"></app-search>\r\n            </div>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"header\">\r\n            <tr>\r\n                <th>\r\n                    <div class=\"flex justify-content-between align-items-center\">\r\n                        No\r\n                    </div>\r\n                </th>\r\n                <th>\r\n                    <div class=\"flex justify-content-between align-items-center\">\r\n                        Nama Perusahaan\r\n                    </div>\r\n                </th>\r\n                <th>\r\n                    <div class=\"flex justify-content-between align-items-center\">\r\n                        Nama Peran\r\n                    </div>\r\n                </th>\r\n                <th>\r\n                    <div class=\"flex justify-content-between align-items-center\">\r\n                        Aplikasi\r\n                    </div>\r\n                </th>\r\n                <th>\r\n                    <div class=\"flex justify-content-between align-items-center\">\r\n                        Laporan\r\n                    </div>\r\n                </th>\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-data let-rowIndex=\"rowIndex\">\r\n            <tr>\r\n                <td (click)=\"onEdit(data)\" style=\"width: 3rem;\">\r\n                    {{rowIndex+1}}\r\n                </td>\r\n                <td (click)=\"onEdit(data)\" style=\"min-width: 12rem;\">\r\n                    {{data?.companyName}}\r\n                </td>\r\n                <td (click)=\"onEdit(data)\" style=\"min-width: 12rem;\">\r\n                    {{data?.name }}\r\n                </td>\r\n                <td (click)=\"onEdit(data)\" style=\"min-width: 10rem;\">\r\n                    {{data?.applicationName}}\r\n                </td>\r\n                <td class=\"text-center\" style=\"min-width: 10rem;\">\r\n                    <button pButton pRipple (click)=\"editReport(data)\" type=\"button\" icon=\"pi pi-pencil\" class=\"p-button-rounded p-button-primary p-button-outlined mr-2 mb-2\"></button>\r\n                </td>\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"emptymessage\">\r\n            <tr>\r\n                <td class=\"text-center\" colspan=\"5\">No data found.</td>\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"loadingbody\">\r\n            <tr>\r\n                <td class=\"text-center\" colspan=\"5\">Loading data. Please wait.</td>\r\n            </tr>\r\n        </ng-template>\r\n    </p-table>\r\n</div>\r\n\r\n<p-dialog header=\"{{type}}Atur\" [(visible)]=\"isShow\" modal=\"modal\" *ngIf=\"isShow\" showEffect=\"fade\" [style]=\"{width: '50vw'}\"\r\n[contentStyle]=\"{'overflow-y': 'auto', 'overflow-x': 'hidden', \r\n    'max-height': '80vh','min-height':'250px'}\"\r\n    [breakpoints]=\"{'960px': '100vw'}\">\r\n    <div class=\"grid p-fluid\">\r\n        <div class=\"col-12 md:col-6\">\r\n            <div class=\"field\">\r\n                <label for=\"code\">Nama Perusahaan</label>\r\n                <div>\r\n                    <input id=\"code\" type=\"text\" [(ngModel)]=\"item.companyName\" disabled pInputText>\r\n                </div>\r\n            </div><div class=\"field\">\r\n                <label for=\"code\">Nama Peran</label>\r\n                <div>\r\n                    <input id=\"code\" type=\"text\" [(ngModel)]=\"item.name\" disabled pInputText>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-12 md:col-6\">\r\n            <div class=\"field\">\r\n                <label for=\"code\">Nama Aplikasi</label>\r\n                <div>\r\n                    <input id=\"code\" type=\"text\" [(ngModel)]=\"item.applicationName\" disabled pInputText>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <p-table [value]=\"listDetail?.pojoPremiumMenus\" dataKey=\"id\" [rows]=\"10\" [loading]=\"detailLoading\" styleClass=\"p-datatable-gridlines\" [paginator]=\"true\" pageLinks=\"3\" responsiveLayout=\"scroll\">\r\n        <ng-template pTemplate=\"header\">\r\n            <tr>\r\n                <th>\r\n                    <div class=\"flex justify-content-between align-items-center\">\r\n                        No\r\n                    </div>\r\n                </th>\r\n                <th>\r\n                    <div class=\"flex justify-content-between align-items-center\">\r\n                        Nama\r\n                    </div>\r\n                </th>\r\n                <th style=\"width: 3em\">\r\n                </th>\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-data let-rowIndex=\"rowIndex\">\r\n            <tr>\r\n                <td style=\"width: 3rem;\">\r\n                    {{rowIndex +1}}\r\n                </td>\r\n                <td>\r\n                    {{data.name}}\r\n                </td>\r\n                <td>\r\n                    <p-checkbox binary=\"true\" [(ngModel)]=\"data.isSelected\" id=\"cf\"></p-checkbox>\r\n                </td>\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"emptymessage\">\r\n            <tr>\r\n                <td class=\"text-center\" colspan=\"3\">No data found.</td>\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"loadingbody\">\r\n            <tr>\r\n                <td class=\"text-center\" colspan=\"3\">Loading data. Please wait.</td>\r\n            </tr>\r\n        </ng-template>\r\n    </p-table>\r\n    <ng-template pTemplate=\"footer\">\r\n        <btn-update (onClick)=\"onSave()\"></btn-update>\r\n    </ng-template>\r\n</p-dialog>\r\n"
        },
        {
            "name": "SaveDialogComponent",
            "id": "component-SaveDialogComponent-a38556b9456547eb0b337128552a09970be801294836dabde741f6e6a143737baebfc47b8c5cf282b5a566d70514b3330f526d2ce1655b89d8b09a851ab3b9b7",
            "file": "src/stories/primeng/confirm-dialogs/save-dialog/save-dialog.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "BrowserAnimationsModule",
                    "type": "module"
                }
            ],
            "selector": "save-dialog",
            "styleUrls": [
                "./save-dialog.component.css"
            ],
            "styles": [],
            "template": "<button pButton label=\"Show\" (click)=\"showDialog()\"></button>\n<p-dialog [(visible)]=\"display\" [baseZIndex]=\"10000\" [modal]=\"true\" [draggable]=\"false\">\n    <ng-template pTemplate=\"header\">\n        <div class=\"dialog-header\">\n            <div>\n                <svg width=\"24\" height=\"24\" viewBox=\"0 0 18 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M2.5 0C1.12109 0 0 1.12109 0 2.5V15C0 16.3789 1.12109 17.5 2.5 17.5H15C16.3789 17.5 17.5 16.3789 17.5 15V5.51953C17.5 4.85547 17.2383 4.21875 16.7695 3.75L13.75 0.730469C13.2812 0.261719 12.6445 0 11.9805 0H2.5ZM2.5 3.75C2.5 3.05859 3.05859 2.5 3.75 2.5H11.25C11.9414 2.5 12.5 3.05859 12.5 3.75V6.25C12.5 6.94141 11.9414 7.5 11.25 7.5H3.75C3.05859 7.5 2.5 6.94141 2.5 6.25V3.75ZM8.75 10C9.41304 10 10.0489 10.2634 10.5178 10.7322C10.9866 11.2011 11.25 11.837 11.25 12.5C11.25 13.163 10.9866 13.7989 10.5178 14.2678C10.0489 14.7366 9.41304 15 8.75 15C8.08696 15 7.45107 14.7366 6.98223 14.2678C6.51339 13.7989 6.25 13.163 6.25 12.5C6.25 11.837 6.51339 11.2011 6.98223 10.7322C7.45107 10.2634 8.08696 10 8.75 10Z\" fill=\"#0E8EC5\"/>\n                </svg>\n            </div>\n            <div>\n                <span>Save Data</span>\n            </div>\n        </div>\n    </ng-template>\n    <ng-template pTemplate=\"content\">\n        <span>\n            {{message}}\n        </span>\n    </ng-template>\n    <ng-template pTemplate=\"footer\">\n        <button pButton ngClass=\"secondary\" label=\"No\" (click)=\"onReject()\"></button>\n        <button pButton ngClass=\"primary\" label=\"Yes\" (click)=\"onAccept()\"></button>\n    </ng-template>\n</p-dialog>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "message",
                    "defaultValue": "\"Are you sure to save this data?\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "accept",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "display",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 39
                }
            ],
            "methodsClass": [
                {
                    "name": "onAccept",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onReject",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "showDialog",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\n\r\n@Component({\r\n    selector: 'save-dialog',\r\n    template: `\r\n    <button pButton label=\"Show\" (click)=\"showDialog()\"></button>\r\n    <p-dialog [(visible)]=\"display\" [baseZIndex]=\"10000\" [modal]=\"true\" [draggable]=\"false\">\r\n        <ng-template pTemplate=\"header\">\r\n            <div class=\"dialog-header\">\r\n                <div>\r\n                    <svg width=\"24\" height=\"24\" viewBox=\"0 0 18 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path d=\"M2.5 0C1.12109 0 0 1.12109 0 2.5V15C0 16.3789 1.12109 17.5 2.5 17.5H15C16.3789 17.5 17.5 16.3789 17.5 15V5.51953C17.5 4.85547 17.2383 4.21875 16.7695 3.75L13.75 0.730469C13.2812 0.261719 12.6445 0 11.9805 0H2.5ZM2.5 3.75C2.5 3.05859 3.05859 2.5 3.75 2.5H11.25C11.9414 2.5 12.5 3.05859 12.5 3.75V6.25C12.5 6.94141 11.9414 7.5 11.25 7.5H3.75C3.05859 7.5 2.5 6.94141 2.5 6.25V3.75ZM8.75 10C9.41304 10 10.0489 10.2634 10.5178 10.7322C10.9866 11.2011 11.25 11.837 11.25 12.5C11.25 13.163 10.9866 13.7989 10.5178 14.2678C10.0489 14.7366 9.41304 15 8.75 15C8.08696 15 7.45107 14.7366 6.98223 14.2678C6.51339 13.7989 6.25 13.163 6.25 12.5C6.25 11.837 6.51339 11.2011 6.98223 10.7322C7.45107 10.2634 8.08696 10 8.75 10Z\" fill=\"#0E8EC5\"/>\r\n                    </svg>\r\n                </div>\r\n                <div>\r\n                    <span>Save Data</span>\r\n                </div>\r\n            </div>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"content\">\r\n            <span>\r\n                {{message}}\r\n            </span>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"footer\">\r\n            <button pButton ngClass=\"secondary\" label=\"No\" (click)=\"onReject()\"></button>\r\n            <button pButton ngClass=\"primary\" label=\"Yes\" (click)=\"onAccept()\"></button>\r\n        </ng-template>\r\n    </p-dialog>\r\n    `,\r\n    styleUrls: ['./save-dialog.component.css'],\r\n    providers: [BrowserAnimationsModule]\r\n})\r\n\r\nexport class SaveDialogComponent {\r\n    @Input() message: string = \"Are you sure to save this data?\";\r\n    @Output() accept = new EventEmitter<any>();\r\n    display: boolean = false;\r\n\r\n    showDialog() {\r\n        this.display = true;\r\n    }\r\n\r\n    onAccept(){\r\n        this.accept.emit(true);\r\n        this.display = false;\r\n    }\r\n\r\n    onReject(){\r\n        this.display = false;\r\n    }\r\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "div.dialog-header{\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n}\r\n\r\n:host ::ng-deep .p-dialog.p-component{\r\n    min-height: 196px;\r\n    min-width: 495px;\r\n}\r\n\r\n:host ::ng-deep .p-dialog-header{\r\n    padding: 3rem 3rem 1rem 3rem;\r\n    border-bottom: 1px solid #EEEEEE;\r\n}\r\n\r\n:host ::ng-deep .p-dialog-content{\r\n    padding-left: 3rem;\r\n    padding-right: 3rem;\r\n}\r\n\r\n:host ::ng-deep .p-dialog-footer{\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: end;\r\n    padding: 1rem 3rem 3rem 3rem;\r\n    border-top: 1px solid #EEEEEE;\r\n}\r\n\r\n:host ::ng-deep .p-dialog-header div div span{\r\n    font-size: 20px;\r\n    font-weight: 700;\r\n}\r\n\r\ndiv.dialog-header div svg{\r\n    margin-right: 1rem;\r\n}\r\n\r\n:host ::ng-deep .p-dialog-content span{\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n}\r\n\r\n:host ::ng-deep .p-element.secondary.p-button.p-component{\r\n    width: 128px;\r\n    height: 35px;\r\n    font-size: 14px;\r\n    font-weight: 700;\r\n    background-color: #E8F2FF;\r\n    color: #0E8EC5;\r\n    border: none;\r\n}\r\n\r\n:host ::ng-deep .p-element.primary.p-button.p-component{\r\n    width: 128px;\r\n    height: 35px;\r\n    font-size: 14px;\r\n    font-weight: 700;\r\n    background-color: #0E8EC5;\r\n    color: #FFFFFF;\r\n    border: none;\r\n}",
                    "styleUrl": "./save-dialog.component.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "SearchComponent",
            "id": "component-SearchComponent-0a46f4e5144c706b5a5d24394a3c7f0dc64e02748be8cce6dd37a72d836a3ebf8e1ac98f8a127f6b1911b43ae736674fdbca00003935dd719766c43c6931adc7",
            "file": "src/app/core/shared-component/search/search.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-search",
            "styleUrls": [
                "./search.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./search.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "customFilterKey",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "customFilterLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "isActive",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "isApproval",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 50,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "isDate",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 51,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "isFilter",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "'Status'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "refresh",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 71,
                    "type": "EventEmitter"
                },
                {
                    "name": "search",
                    "defaultValue": "new EventEmitter<UntypedFormGroup>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 72,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "appItems",
                    "defaultValue": "[\r\n        {\r\n            label: 'Semua',\r\n            value: '',\r\n        },\r\n        {\r\n            label: 'Menunggu',\r\n            value: 'PENDING',\r\n        },\r\n        { label: 'Disetujui', value: 'APPROVED' },\r\n        { label: 'Ditolak', value: 'REJECTED' },\r\n    ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "approval",
                    "defaultValue": "this.appItems[0]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "filter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "formSearch",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UntypedFormGroup",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "items",
                    "defaultValue": "[\r\n        {\r\n            label: 'All Status',\r\n            value: '',\r\n        },\r\n        {\r\n            label: 'Active',\r\n            value: true,\r\n        },\r\n        { label: 'Inactive', value: false },\r\n    ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "searchStatus",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "searchValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "status",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methodsClass": [
                {
                    "name": "changeStatus",
                    "args": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 102,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "changeStatusApproval",
                    "args": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 111,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onPosSearch",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 99,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onRefresh",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 91,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSelectDate",
                    "args": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 116,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setValueBeforeSearch",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 121,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\r\nimport {\r\n    UntypedFormGroup,\r\n    UntypedFormBuilder,\r\n    Validators,\r\n    UntypedFormControl,\r\n} from '@angular/forms';\r\nimport { HelperService } from 'src/app/core/service/helper-service';\r\n\r\n@Component({\r\n    selector: 'app-search',\r\n    templateUrl: './search.component.html',\r\n    styleUrls: ['./search.component.scss'],\r\n})\r\nexport class SearchComponent implements OnInit {\r\n    searchValue: string;\r\n    @Input() isFilter: boolean = false;\r\n    @Input() customFilterLabel;\r\n    @Input() customFilterKey;\r\n    @Input() placeholder = 'Status';\r\n    searchStatus: any;\r\n    status: boolean = true;\r\n    items = [\r\n        {\r\n            label: 'All Status',\r\n            value: '',\r\n        },\r\n        {\r\n            label: 'Active',\r\n            value: true,\r\n        },\r\n        { label: 'Inactive', value: false },\r\n    ];\r\n    appItems = [\r\n        {\r\n            label: 'Semua',\r\n            value: '',\r\n        },\r\n        {\r\n            label: 'Menunggu',\r\n            value: 'PENDING',\r\n        },\r\n        { label: 'Disetujui', value: 'APPROVED' },\r\n        { label: 'Ditolak', value: 'REJECTED' },\r\n    ];\r\n    filter;\r\n    approval = this.appItems[0];\r\n    formSearch: UntypedFormGroup;\r\n    @Input() isActive: boolean;\r\n    @Input() isApproval: boolean = false;\r\n    @Input() isDate: boolean = false;\r\n    constructor(\r\n        private formBuilder: UntypedFormBuilder,\r\n        private help: HelperService\r\n    ) {\r\n        this.formSearch = this.formBuilder.group({\r\n            inquiry: [''],\r\n            isActive: [''],\r\n            status: [''],\r\n            date: [''],\r\n        });\r\n        this.searchStatus = [\r\n            {\r\n                label: 'Active',\r\n                value: true,\r\n            },\r\n            { label: 'Inactive', value: false },\r\n        ];\r\n    }\r\n\r\n    @Output() refresh = new EventEmitter<boolean>();\r\n    @Output() search = new EventEmitter<UntypedFormGroup>();\r\n    ngOnInit() {\r\n        this.searchValue = '';\r\n\r\n        if (this.customFilterLabel) {\r\n            this.items = this.customFilterLabel;\r\n            this.filter = this.items[0];\r\n        } else {\r\n            this.filter = this.items[0].value;\r\n        }\r\n\r\n        if (this.customFilterKey) {\r\n            this.formSearch.addControl(\r\n                this.customFilterKey,\r\n                new UntypedFormControl('')\r\n            );\r\n        }\r\n    }\r\n\r\n    onRefresh() {\r\n        this.formSearch.reset();\r\n        this.filter = this.items[0];\r\n        this.approval = this.appItems[0];\r\n        this.search.emit(this.formSearch.value);\r\n        this.refresh.emit(true);\r\n    }\r\n\r\n    onPosSearch() {\r\n        this.setValueBeforeSearch();\r\n    }\r\n    changeStatus(e) {\r\n        let formName = this.customFilterKey\r\n            ? this.customFilterKey\r\n            : this.customFilterLabel\r\n            ? 'status'\r\n            : 'isActive';\r\n        this.formSearch.get(formName).patchValue(e);\r\n        this.setValueBeforeSearch();\r\n    }\r\n    changeStatusApproval(e) {\r\n        this.formSearch.get('status').patchValue(e);\r\n        this.setValueBeforeSearch();\r\n    }\r\n\r\n    onSelectDate(e) {\r\n        this.formSearch.get('date').patchValue(e);\r\n        this.setValueBeforeSearch();\r\n    }\r\n\r\n    setValueBeforeSearch() {\r\n        let body = this.formSearch.getRawValue();\r\n        body.date = this.help.formatDate(body?.date);\r\n        this.search.emit(body);\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".input-search {\r\n    // height: 2.1875rem;\r\n    width: 15rem;\r\n}\r\n",
                    "styleUrl": "./search.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "UntypedFormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "help",
                        "type": "HelperService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 51,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "UntypedFormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "help",
                        "type": "HelperService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"grid\" style=\"width: fit-content;\" [formGroup]=\"formSearch\">\r\n    <div class=\"col\">\r\n        <span class=\"p-input-icon-left\">\r\n            <i class=\"fas fa-search\"></i>\r\n            <input\r\n                (keyup.enter)=\"onPosSearch()\"\r\n                formControlName=\"inquiry\"\r\n                type=\"text\"\r\n                pInputText\r\n                placeholder=\"Search\"\r\n                class=\"input-search\"\r\n            />\r\n        </span>\r\n    </div>\r\n    <div class=\"col\">\r\n        <button\r\n            class=\"btn-cancel\"\r\n            type=\"button\"\r\n            (click)=\"onRefresh()\"\r\n            pButton\r\n            pRipple\r\n            icon=\"fas fa-sync-alt\"\r\n        ></button>\r\n    </div>\r\n    <div class=\"col\" *ngIf=\"isFilter\">\r\n        <p-dropdown\r\n            (onChange)=\"changeStatus($event.value)\"\r\n            [(ngModel)]=\"filter\"\r\n            [ngModelOptions]=\"{ standalone: true }\"\r\n            [placeholder]=\"placeholder\"\r\n            [options]=\"items\"\r\n        >\r\n            <ng-template let-item pTemplate=\"selectedItem\">\r\n                {{ item.label }}\r\n            </ng-template>\r\n            <ng-template let-item pTemplate=\"item\">\r\n                {{ item.label }}\r\n            </ng-template>\r\n        </p-dropdown>\r\n    </div>\r\n    <!-- <div class=\"col-12 lg:col-4 md:col-6 p-fluid\" *ngIf=\"isDate\">\r\n        <p-calendar\r\n            dateFormat=\"dd-mm-yy\"\r\n            class=\"custom-calendar\"\r\n            [showIcon]=\"true\"\r\n            appendTo=\"body\"\r\n            placeholder=\"Pilih Tanggal\"\r\n            (onSelect)=\"onSelectDate($event)\"\r\n            formControlName=\"date\"\r\n        >\r\n        </p-calendar>\r\n    </div>\r\n\r\n    <div class=\"col-12 lg:col-2 md:col-3 sm:col-12 p-fluid\" *ngIf=\"isApproval\">\r\n        <p-dropdown\r\n            (onChange)=\"changeStatusApproval($event.value)\"\r\n            [(ngModel)]=\"approval\"\r\n            [placeholder]=\"placeholder\"\r\n            [ngModelOptions]=\"{ standalone: true }\"\r\n            [options]=\"appItems\"\r\n        >\r\n        </p-dropdown>\r\n    </div> -->\r\n</div>\r\n"
        },
        {
            "name": "SeatComponent",
            "id": "component-SeatComponent-3521496eae04821a3bcfef97ee49a6ea8ac92f238c987654b23c35d38f049d36f328b93e1dd6a0a4e09fd2bf3dda8f6dcb393742d3790f004972d5da5a0e491a",
            "file": "src/app/showcase/components/menus/seat.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-seat",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"flex flex-column align-items-center justify-content-center h-full py-5 px-3\">\n  <i class=\"pi pi-fw pi-ticket mr-2 text-2xl\"></i>\n  <p class=\"m-0 mt-5 text-center text-lg\">Seat Component Content via Child Route</p>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-seat',\r\n  template: `\r\n    <div class=\"flex flex-column align-items-center justify-content-center h-full py-5 px-3\">\r\n      <i class=\"pi pi-fw pi-ticket mr-2 text-2xl\"></i>\r\n      <p class=\"m-0 mt-5 text-center text-lg\">Seat Component Content via Child Route</p>\r\n    </div>\r\n  `\r\n})\r\nexport class SeatComponent{\r\n\r\n  constructor() { }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 12
            }
        },
        {
            "name": "TableComponent",
            "id": "component-TableComponent-fb649935a0516a3b515af6a5751ba0e31c750c43bb75b1df8d1350b94740e2e55723d5e33e51d08d3621047a3ebab8d855869e5efd659019585a8024ec739418",
            "file": "src/app/core/shared-component/table/table.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-table",
            "styleUrls": [
                "./table.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./table.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "body",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "columMap",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "isSelectable",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "isStatus",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "uri",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "String",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "selected",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "count",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "first",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "limit",
                    "defaultValue": "AppConstant.rowsPerPage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "list",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "page",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "rowsPerPage",
                    "defaultValue": "AppConstant.rowsPerPage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "rowsPerPageOptions",
                    "defaultValue": "AppConstant.rowsPerPageOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "selectedData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "selectedKebab",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "showKebab",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36
                }
            ],
            "methodsClass": [
                {
                    "name": "getList",
                    "args": [
                        {
                            "name": "pi",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "pi",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onRefresh",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSearch",
                    "args": [
                        {
                            "name": "body",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "body",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onShow",
                    "args": [
                        {
                            "name": "data",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 81,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onTableLazyLoad",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectionChange",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n    Component,\n    OnInit,\n    Output,\n    EventEmitter,\n    Input,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n} from '@angular/core';\nimport { AppConstant } from '@config/app.config';\nimport { TableService } from './table.service';\nimport { PageInfo } from 'src/app/core/model/page-info';\n@Component({\n    selector: 'app-table',\n    templateUrl: './table.component.html',\n    styleUrls: ['./table.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TableComponent {\n    @Input() isSelectable: boolean = true;\n    @Input() columMap;\n    @Input() body;\n    @Input() uri: String;\n    @Input() isStatus: boolean = true;\n\n    @Output() selected = new EventEmitter<any>();\n    selectedData;\n    loading = false;\n    list = [];\n    first = 0;\n    count = 0;\n    page = 1;\n    limit = AppConstant.rowsPerPage;\n    rowsPerPage = AppConstant.rowsPerPage;\n    rowsPerPageOptions = AppConstant.rowsPerPageOptions;\n    showKebab = false\n    selectedKebab\n\n    constructor(private cd: ChangeDetectorRef, private srv: TableService) {}\n\n    onTableLazyLoad(event) {\n        this.page = event.first / event.rows + 1;\n        this.limit = event.rows;\n        this.getList(new PageInfo(this.page, this.limit));\n    }\n    selectionChange(event) {\n        this.selected.emit(this.selectedData);\n    }\n\n    getList(pi) {\n        this.first = pi.page - 1;\n        this.loading = true;\n        this.srv.getList(this.uri, pi, this.body).subscribe({\n            next: (res) => {\n                if (res) {\n                    this.loading = false;\n                    this.list = res.data;\n                    this.count = res.count;\n                    this.cd.detectChanges();\n                }\n            },\n            error: (err) => {\n                this.loading = false;\n                this.cd.detectChanges();\n            },\n        });\n    }\n\n    onSearch(body) {\n        this.body = body;\n        this.page = 1;\n        this.getList(new PageInfo(this.page, this.limit));\n    }\n    onRefresh() {\n        // this.body = null;\n        this.selectedData = [];\n        this.page = 1;\n        this.getList(new PageInfo(this.page, this.limit));\n    }\n\n    onShow(data){\n        this.selectedKebab = data\n        this.showKebab = !this.showKebab\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "\r\n.float-menu {\r\n    width: 120px;\r\n    position: absolute;\r\n    right: 0;\r\n    box-shadow: 0px 1px 4px rgba(0, 0, 0, 0.25);\r\n    padding: 8px;\r\n    border-radius: 4px;\r\n    background: white;\r\n    z-index: 1;\r\n\r\n    p:hover {\r\n        cursor: pointer;\r\n        opacity: 0.6;\r\n    }\r\n}\r\n",
                    "styleUrl": "./table.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "srv",
                        "type": "TableService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 37,
                "jsdoctags": [
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "srv",
                        "type": "TableService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<p-table\n    [value]=\"list\"\n    [totalRecords]=\"count\"\n    [lazy]=\"true\"\n    (onLazyLoad)=\"onTableLazyLoad($event)\"\n    dataKey=\"id\"\n    [rows]=\"rowsPerPage\"\n    [rowsPerPageOptions]=\"rowsPerPageOptions\"\n    [loading]=\"loading\"\n    styleClass=\"p-datatable-gridlines\"\n    [paginator]=\"true\"\n    pageLinks=\"3\"\n    responsiveLayout=\"scroll\"\n    [(selection)]=\"selectedData\"\n    [(first)]=\"first\"\n    [showCurrentPageReport]=\"true\"\n    currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\"\n    (selectionChange)=\"selectionChange($event)\"\n>\n    <ng-template pTemplate=\"header\">\n        <tr>\n            <th style=\"width: 3em\" *ngIf=\"isSelectable\">\n                <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\n            </th>\n            <th>\n                <div class=\"text-center\">\n                    No\n                </div>\n            </th>\n            <th *ngFor=\"let column of columMap\">\n                {{ column.label }}\n            </th>\n            <th style=\"width: 8rem\" *ngIf=\"isStatus\">\n                <div class=\"text-center\">\n                    Status\n                </div>\n            </th>\n            <th style=\"width: 1rem\"></th>\n        </tr>\n    </ng-template>\n    <ng-template pTemplate=\"body\" let-data let-rowIndex=\"rowIndex\">\n        <tr [pSelectableRow]=\"data\">\n            <td *ngIf=\"isSelectable\">\n                <p-tableCheckbox [value]=\"data\"></p-tableCheckbox>\n            </td>\n            <td style=\"width: 3rem\">\n                {{ rowIndex + 1 }}\n            </td>\n            <td *ngFor=\"let itemData of columMap\">\n                <span *ngIf=\"!itemData.isDate && !itemData.isDateTimezone\">{{\n                    data[itemData.key]\n                }}</span>\n                <span *ngIf=\"itemData.isDate\">{{\n                    data[itemData.key] | formatDate\n                }}</span>\n                <span *ngIf=\"itemData.isDateTimezone\">{{\n                    data[itemData.key] | formatDateTimeZone : true\n                }}</span>\n            </td>\n            <td style=\"min-width: 12rem\" *ngIf=\"isStatus\">\n                <!-- todo ganti parameter approval -->\n                <span\n                    class=\"mb-2\"\n                    [ngClass]=\"{\n                        'span-green': data?.status.toLowerCase() == 'hadir',\n                        'span-yellow':\n                            data?.status.toLowerCase() == 'pulang awal',\n                        'span-red':\n                            data?.status.toLowerCase() == 'tidak hadir' ||\n                            data?.status.toLowerCase() == 'terlambat',\n                        '': !data?.status\n                    }\"\n                >\n                    {{ data?.status || \"-\" }}\n                </span>\n            </td>\n            <td style=\"cursor: pointer\" (click)=\"onShow(data)\">\n                <i class=\"fas fa-ellipsis-v\"></i>\n                <div class=\"float-menu\" *ngIf=\"showKebab && data==selectedKebab\">\n                    <p ><i class=\"fas fa-eye\"></i> Detail </p>\n                    <p ><i class=\"fas fa-edit\"></i> Edit </p>\n                </div>\n            </td>\n        </tr>\n    </ng-template>\n    <ng-template pTemplate=\"emptymessage\">\n        <tr>\n            <td class=\"text-center\" colspan=\"9\">No data found.</td>\n        </tr>\n    </ng-template>\n    <ng-template pTemplate=\"loadingbody\">\n        <tr>\n            <td class=\"text-center\" colspan=\"9\">Loading data. Please wait.</td>\n        </tr>\n    </ng-template>\n</p-table>\n"
        },
        {
            "name": "TableComponent",
            "id": "component-TableComponent-c65d6d68d9243095441dbe75013dbe3112bc94e7922bc104a9b2634557a7028b0e50980c2f2f02749a51380eb38a9f757f212be82b3341ecad310c04df50c082-1",
            "file": "src/app/showcase/components/table/table.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "MessageService",
                    "type": "injectable"
                },
                {
                    "name": "ConfirmationService",
                    "type": "injectable"
                }
            ],
            "styleUrls": [],
            "styles": [
                "\n        :host ::ng-deep  .p-frozen-column {\n            font-weight: bold;\n        }\n\n        :host ::ng-deep .p-datatable-frozen-tbody {\n            font-weight: bold;\n        }\n\n        :host ::ng-deep .p-progressbar {\n            height:.5rem;\n        }\n    "
            ],
            "templateUrl": [
                "./table.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activityValues",
                    "defaultValue": "[0, 100]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number[]",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "customers1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Customer[]",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "customers2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Customer[]",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "customers3",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Customer[]",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "expandedRows",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "filter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 59,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'filter'"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                },
                {
                    "name": "idFrozen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 53
                },
                {
                    "name": "isExpanded",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 51
                },
                {
                    "name": "loading",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 55
                },
                {
                    "name": "products",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Product[]",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "representatives",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Representative[]",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "rowGroupMetadata",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "selectedCustomer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Customer",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "selectedCustomers1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Customer[]",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "statuses",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "table",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Table",
                    "optional": false,
                    "description": "",
                    "line": 57,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'dt'"
                        }
                    ],
                    "modifierKind": [
                        167
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "clear",
                    "args": [
                        {
                            "name": "table",
                            "type": "Table",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 141,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "table",
                            "type": "Table",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "expandAll",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 127,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "formatCurrency",
                    "args": [
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 137,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSort",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 98,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateRowGroupMetaData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 102,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ViewChild, ChangeDetectorRef, ElementRef } from '@angular/core';\r\nimport { Customer, Representative } from '../../api/customer';\r\nimport { CustomerService } from '../../service/customerservice';\r\nimport { Product } from '../../api/product';\r\nimport { ProductService } from '../../service/productservice';\r\nimport { Table } from 'primeng/table';\r\nimport { MessageService, ConfirmationService } from 'primeng/api'\r\n\r\n@Component({\r\n    templateUrl: './table.component.html',\r\n    providers: [MessageService, ConfirmationService],\r\n    // styleUrls: ['../../../assets/demo/badges.scss'],\r\n    styles: [`\r\n        :host ::ng-deep  .p-frozen-column {\r\n            font-weight: bold;\r\n        }\r\n\r\n        :host ::ng-deep .p-datatable-frozen-tbody {\r\n            font-weight: bold;\r\n        }\r\n\r\n        :host ::ng-deep .p-progressbar {\r\n            height:.5rem;\r\n        }\r\n    `]\r\n})\r\nexport class TableComponent implements OnInit {\r\n\r\n    customers1: Customer[];\r\n\r\n    customers2: Customer[];\r\n\r\n    customers3: Customer[];\r\n\r\n    selectedCustomers1: Customer[];\r\n\r\n    selectedCustomer: Customer;\r\n\r\n    representatives: Representative[];\r\n\r\n    statuses: any[];\r\n\r\n    products: Product[];\r\n\r\n    rowGroupMetadata: any;\r\n\r\n    expandedRows = {};\r\n\r\n    activityValues: number[] = [0, 100];\r\n\r\n    isExpanded: boolean = false;\r\n\r\n    idFrozen: boolean = false;\r\n\r\n    loading:boolean = true;\r\n\r\n    @ViewChild('dt') table: Table;\r\n\r\n    @ViewChild('filter') filter: ElementRef;\r\n\r\n    constructor(private customerService: CustomerService, private productService: ProductService, private messageService: MessageService, private confirmService: ConfirmationService, private cd: ChangeDetectorRef) {}\r\n\r\n    ngOnInit() {\r\n        this.customerService.getCustomersLarge().then(customers => {\r\n            this.customers1 = customers;\r\n            this.loading = false;\r\n\r\n            // @ts-ignore\r\n            this.customers1.forEach(customer => customer.date = new Date(customer.date));\r\n        });\r\n        this.customerService.getCustomersMedium().then(customers => this.customers2 = customers);\r\n        this.customerService.getCustomersLarge().then(customers => this.customers3 = customers);\r\n        this.productService.getProductsWithOrdersSmall().then(data => this.products = data);\r\n\r\n        this.representatives = [\r\n            {name: 'Amy Elsner', image: 'amyelsner.png'},\r\n            {name: 'Anna Fali', image: 'annafali.png'},\r\n            {name: 'Asiya Javayant', image: 'asiyajavayant.png'},\r\n            {name: 'Bernardo Dominic', image: 'bernardodominic.png'},\r\n            {name: 'Elwin Sharvill', image: 'elwinsharvill.png'},\r\n            {name: 'Ioni Bowcher', image: 'ionibowcher.png'},\r\n            {name: 'Ivan Magalhaes', image: 'ivanmagalhaes.png'},\r\n            {name: 'Onyama Limba', image: 'onyamalimba.png'},\r\n            {name: 'Stephen Shaw', image: 'stephenshaw.png'},\r\n            {name: 'XuXue Feng', image: 'xuxuefeng.png'}\r\n        ];\r\n\r\n        this.statuses = [\r\n            {label: 'Unqualified', value: 'unqualified'},\r\n            {label: 'Qualified', value: 'qualified'},\r\n            {label: 'New', value: 'new'},\r\n            {label: 'Negotiation', value: 'negotiation'},\r\n            {label: 'Renewal', value: 'renewal'},\r\n            {label: 'Proposal', value: 'proposal'}\r\n        ];\r\n    }\r\n\r\n    onSort() {\r\n        this.updateRowGroupMetaData();\r\n    }\r\n\r\n    updateRowGroupMetaData() {\r\n        this.rowGroupMetadata = {};\r\n\r\n        if (this.customers3) {\r\n            for (let i = 0; i < this.customers3.length; i++) {\r\n                const rowData = this.customers3[i];\r\n                const representativeName = rowData.representative.name;\r\n\r\n                if (i === 0) {\r\n                    this.rowGroupMetadata[representativeName] = { index: 0, size: 1 };\r\n                }\r\n                else {\r\n                    const previousRowData = this.customers3[i - 1];\r\n                    const previousRowGroup = previousRowData.representative.name;\r\n                    if (representativeName === previousRowGroup) {\r\n                        this.rowGroupMetadata[representativeName].size++;\r\n                    }\r\n                    else {\r\n                        this.rowGroupMetadata[representativeName] = { index: i, size: 1 };\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    expandAll() {\r\n        if(!this.isExpanded){\r\n          this.products.forEach(product => this.expandedRows[product.name] = true);\r\n\r\n        } else {\r\n          this.expandedRows={};\r\n        }\r\n        this.isExpanded = !this.isExpanded;\r\n    }\r\n\r\n    formatCurrency(value) {\r\n        return value.toLocaleString('en-US', {style: 'currency', currency: 'USD'});\r\n    }\r\n\r\n    clear(table: Table) {\r\n        table.clear();\r\n        this.filter.nativeElement.value = '';\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n        :host ::ng-deep  .p-frozen-column {\n            font-weight: bold;\n        }\n\n        :host ::ng-deep .p-datatable-frozen-tbody {\n            font-weight: bold;\n        }\n\n        :host ::ng-deep .p-progressbar {\n            height:.5rem;\n        }\n    \n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "customerService",
                        "type": "CustomerService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "productService",
                        "type": "ProductService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "messageService",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "confirmService",
                        "type": "ConfirmationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 59,
                "jsdoctags": [
                    {
                        "name": "customerService",
                        "type": "CustomerService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "productService",
                        "type": "ProductService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "messageService",
                        "type": "MessageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "confirmService",
                        "type": "ConfirmationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "TableComponent-1",
            "templateData": "<div class=\"grid\">\r\n\t<div class=\"col-12\">\r\n\t\t<div class=\"card\">\r\n\t\t\t<h5>Filter Menu</h5>\r\n\t\t\t<p-table #dt1 [value]=\"customers1\" dataKey=\"id\" [rows]=\"10\" [loading]=\"loading\" [rowHover]=\"true\" styleClass=\"p-datatable-gridlines\" [paginator]=\"true\" pageLinks=\"3\" [globalFilterFields]=\"['name','country.name','representative.name','status']\" responsiveLayout=\"scroll\">\r\n\t\t\t\t<ng-template pTemplate=\"caption\">\r\n\t\t\t\t\t<div class=\"flex justify-content-between flex-column sm:flex-row\">\r\n\t\t\t\t\t\t<button pButton label=\"Clear\" class=\"p-button-outlined mb-2\" icon=\"pi pi-filter-slash\" (click)=\"clear(dt1)\"></button>\r\n\t\t\t\t\t\t<span class=\"p-input-icon-left mb-2\">\r\n\t\t\t\t\t\t\t<i class=\"pi pi-search\"></i>\r\n\t\t\t\t\t\t\t<input pInputText type=\"text\" #filter (input)=\"dt1.filterGlobal($event.target.value, 'contains')\" placeholder=\"Search Keyword\" class=\"w-full\"/>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</ng-template>\r\n\t\t\t\t<ng-template pTemplate=\"header\">\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th>\r\n\t\t\t\t\t\t\t<div class=\"flex justify-content-between align-items-center\">\r\n\t\t\t\t\t\t\t\tName\r\n\t\t\t\t\t\t\t\t<p-columnFilter type=\"text\" field=\"name\" display=\"menu\" placeholder=\"Search by name\"></p-columnFilter>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t<th>\r\n\t\t\t\t\t\t\t<div class=\"flex justify-content-between align-items-center\">\r\n\t\t\t\t\t\t\t\tCountry\r\n\t\t\t\t\t\t\t\t<p-columnFilter type=\"text\" field=\"country.name\" display=\"menu\" placeholder=\"Search by country\"></p-columnFilter>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t<th>\r\n\t\t\t\t\t\t\t<div class=\"flex justify-content-between align-items-center\">\r\n\t\t\t\t\t\t\t\tAgent\r\n\t\t\t\t\t\t\t\t<p-columnFilter field=\"representative\" matchMode=\"in\" display=\"menu\" [showMatchModes]=\"false\" [showOperator]=\"false\" [showAddButton]=\"false\">\r\n\t\t\t\t\t\t\t\t\t<ng-template pTemplate=\"header\">\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"px-3 pt-3 pb-0\">\r\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"font-bold\">Agent Picker</span>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t\t\t\t<ng-template pTemplate=\"filter\" let-value let-filter=\"filterCallback\">\r\n\t\t\t\t\t\t\t\t\t\t<p-multiSelect [ngModel]=\"value\" [options]=\"representatives\" placeholder=\"Any\" (onChange)=\"filter($event.value)\" optionLabel=\"name\">\r\n\t\t\t\t\t\t\t\t\t\t\t<ng-template let-option pTemplate=\"item\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"p-multiselect-representative-option\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<img [alt]=\"option.label\" src=\"assets/demo/images/avatar/{{option.image}}\" width=\"32\" style=\"vertical-align: middle\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"ml-2\">{{option.name}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t\t\t\t\t</p-multiSelect>\r\n\t\t\t\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t\t\t</p-columnFilter>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t<th>\r\n\t\t\t\t\t\t\t<div class=\"flex justify-content-between align-items-center\">\r\n\t\t\t\t\t\t\t\tDate\r\n\t\t\t\t\t\t\t\t<p-columnFilter type=\"date\" field=\"date\" display=\"menu\" placeholder=\"mm/dd/yyyy\"></p-columnFilter>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t<th>\r\n\t\t\t\t\t\t\t<div class=\"flex justify-content-between align-items-center\">\r\n\t\t\t\t\t\t\t\tBalance\r\n\t\t\t\t\t\t\t\t<p-columnFilter type=\"numeric\" field=\"balance\" display=\"menu\" currency=\"USD\"></p-columnFilter>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t<th>\r\n\t\t\t\t\t\t\t<div class=\"flex justify-content-between align-items-center\">\r\n\t\t\t\t\t\t\t\tStatus\r\n\t\t\t\t\t\t\t\t<p-columnFilter field=\"status\" matchMode=\"equals\" display=\"menu\">\r\n\t\t\t\t\t\t\t\t\t<ng-template pTemplate=\"filter\" let-value let-filter=\"filterCallback\">\r\n\t\t\t\t\t\t\t\t\t\t<p-dropdown [ngModel]=\"value\" [options]=\"statuses\" (onChange)=\"filter($event.value)\" placeholder=\"Any\" [style]=\"{'min-width': '12rem'}\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<ng-template let-option pTemplate=\"item\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span [class]=\"'customer-badge status-' + option.value\">{{option.label}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t\t\t\t\t</p-dropdown>\r\n\t\t\t\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t\t\t</p-columnFilter>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t<th>\r\n\t\t\t\t\t\t\t<div class=\"flex justify-content-between align-items-center\">\r\n\t\t\t\t\t\t\t\tActivity\r\n\t\t\t\t\t\t\t\t<p-columnFilter field=\"activity\" matchMode=\"between\" display=\"menu\" [showMatchModes]=\"false\" [showOperator]=\"false\" [showAddButton]=\"false\">\r\n\t\t\t\t\t\t\t\t\t<ng-template pTemplate=\"filter\" let-filter=\"filterCallback\">\r\n\t\t\t\t\t\t\t\t\t\t<p-slider [ngModel]=\"activityValues\" [range]=\"true\" (onSlideEnd)=\"filter($event.values)\" styleClass=\"m-3\" [style]=\"{'min-width': '12rem'}\" ></p-slider>\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"flex align-items-center justify-content-between px-2\">\r\n\t\t\t\t\t\t\t\t\t\t\t<span>{{activityValues[0]}}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t<span>{{activityValues[1]}}</span>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t\t\t</p-columnFilter>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t<th style=\"width: 8rem\">\r\n\t\t\t\t\t\t\t<div class=\"flex justify-content-between align-items-center\">\r\n\t\t\t\t\t\t\t\tVerified\r\n\t\t\t\t\t\t\t\t<p-columnFilter type=\"boolean\" field=\"verified\" display=\"menu\"></p-columnFilter>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</ng-template>\r\n\t\t\t\t<ng-template pTemplate=\"body\" let-customer>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td style=\"min-width: 12rem;\">\r\n\t\t\t\t\t\t\t{{customer.name}}\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t<td style=\"min-width: 12rem;\">\r\n\t\t\t\t\t\t\t<img src=\"assets/demo/flags/flag_placeholder.png\" [class]=\"'flag flag-' + customer.country.code\" width=\"30\">\r\n\t\t\t\t\t\t\t<span class=\"image-text ml-2\">{{customer.country.name}}</span>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t<td style=\"min-width: 14rem;\">\r\n\t\t\t\t\t\t\t<img [alt]=\"customer.representative.name\" src=\"assets/demo/images/avatar/{{customer.representative.image}}\" width=\"32\" style=\"vertical-align: middle\"/>\r\n\t\t\t\t\t\t\t<span class=\"image-text ml-2\">{{customer.representative.name}}</span>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t<td style=\"min-width: 10rem;\">\r\n\t\t\t\t\t\t\t{{customer.date | date: 'MM/dd/yyyy'}}\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t<td style=\"min-width: 10rem;\">\r\n\t\t\t\t\t\t\t{{customer.balance | currency:'USD':'symbol'}}\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t<td style=\"min-width: 12rem;\">\r\n\t\t\t\t\t\t\t<span [class]=\"'customer-badge status-' + customer.status\">{{customer.status}}</span>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t<td style=\"min-width: 12rem; \">\r\n\t\t\t\t\t\t\t<p-progressBar [value]=\"customer.activity\" [showValue]=\"false\"></p-progressBar>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t<td class=\"text-center\" style=\"min-width: 8rem;\">\r\n\t\t\t\t\t\t\t<i class=\"pi\" [ngClass]=\"{'true-icon pi-check-circle text-green-500': customer.verified, 'false-icon pi-times-circle text-pink-500 ': !customer.verified}\"></i>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</ng-template>\r\n\t\t\t\t<ng-template pTemplate=\"emptymessage\">\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td colspan=\"7\">No customers found.</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</ng-template>\r\n\t\t\t\t<ng-template pTemplate=\"loadingbody\">\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td colspan=\"7\">Loading customers data. Please wait.</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</ng-template>\r\n    \t\t</p-table>\r\n\t\t</div>\r\n\r\n\t</div>\r\n\r\n\t<div class=\"col-12\">\r\n\t\t<div class=\"card\">\r\n\t\t\t<h5>Frozen Columns</h5>\r\n\t\t\t<p-toggleButton [(ngModel)]=\"idFrozen\" [onIcon]=\"'pi pi-lock'\" offIcon=\"pi pi-lock-open\" [onLabel]=\"'Unfreeze Id'\" offLabel=\"Freeze Id\" [style]=\"{'width': '12rem'}\"></p-toggleButton>\r\n\r\n\t\t\t<p-table [value]=\"customers3\" scrollDirection=\"both\" [scrollable]=\"true\" scrollHeight=\"400px\" styleClass=\"mt-3\" responsiveLayout=\"scroll\">\r\n\t\t\t\t<ng-template pTemplate=\"header\">\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th style=\"width:200px\" pFrozenColumn>Name</th>\r\n\t\t\t\t\t\t<th style=\"width:200px\" alignFrozen=\"left\" pFrozenColumn [frozen]=\"idFrozen\">Id</th>\r\n\t\t\t\t\t\t<th style=\"width:200px\">Country</th>\r\n\t\t\t\t\t\t<th style=\"width:200px\">Date</th>\r\n\t\t\t\t\t\t<th style=\"width:200px\">Company</th>\r\n\t\t\t\t\t\t<th style=\"width:200px\">Status</th>\r\n\t\t\t\t\t\t<th style=\"width:200px\">Activity</th>\r\n\t\t\t\t\t\t<th style=\"width:200px\">Representative</th>\r\n\t\t\t\t\t\t<th style=\"width:200px\" pFrozenColumn alignFrozen=\"right\">Balance</th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</ng-template>\r\n\t\t\t\t<ng-template pTemplate=\"body\" let-customer>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td style=\"width:200px\" pFrozenColumn>{{customer.name}}</td>\r\n\t\t\t\t\t\t<td style=\"width:200px\" alignFrozen=\"left\" pFrozenColumn [frozen]=\"idFrozen\">{{customer.id}}</td>\r\n\t\t\t\t\t\t<td style=\"width:200px\">\r\n\t\t\t\t\t\t\t<img src=\"assets/demo/flags/flag_placeholder.png\" [class]=\"'flag flag-' + customer.country.code\" width=\"30\">\r\n\t\t\t\t\t\t\t<span class=\"image-text ml-2\">{{customer.country.name}}</span>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t<td style=\"width:200px\">{{customer.date}}</td>\r\n\t\t\t\t\t\t<td style=\"width:200px\">{{customer.company}}</td>\r\n\t\t\t\t\t\t<td style=\"width:200px\">\r\n\t\t\t\t\t\t\t<span [class]=\"'customer-badge status-' + customer.status\">{{customer.status}}</span>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t<td style=\"width:200px\">{{customer.activity}}</td>\r\n\t\t\t\t\t\t<td style=\"width:200px\">\r\n\t\t\t\t\t\t\t<img [alt]=\"customer.representative.name\" src=\"assets/demo/images/avatar/{{customer.representative.image}}\" width=\"32\" style=\"vertical-align: middle\"/>\r\n\t\t\t\t\t\t\t<span class=\"image-text ml-2\">{{customer.representative.name}}</span>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t<td style=\"width:200px\" pFrozenColumn alignFrozen=\"right\">{{formatCurrency(customer.balance)}}</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</ng-template>\r\n\t\t\t</p-table>\r\n\t\t</div>\r\n\t</div>\r\n\r\n\t<div class=\"col-12\">\r\n\t\t<div class=\"card\">\r\n\t\t\t<h5>Row Expand</h5>\r\n\t\t\t<p-toast></p-toast>\r\n\t\t\t<p-table [value]=\"products\" dataKey=\"name\" [expandedRowKeys]=\"expandedRows\" responsiveLayout=\"scroll\">\r\n\t\t\t\t<ng-template pTemplate=\"caption\">\r\n\t\t\t\t\t<button pButton icon=\"pi pi-fw {{isExpanded ? 'pi-minus' : 'pi-plus'}}\" label=\"{{isExpanded ? 'Collapse All' : 'Expand All'}}\" (click)=\"expandAll()\"></button>\r\n\t\t\t\t\t<div class=\"flex table-header\">\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</ng-template>\r\n\t\t\t\t<ng-template pTemplate=\"header\">\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th style=\"width: 3rem\"></th>\r\n\t\t\t\t\t\t<th pSortableColumn=\"name\">Name <p-sortIcon field=\"name\"></p-sortIcon></th>\r\n\t\t\t\t\t\t<th>Image</th>\r\n\t\t\t\t\t\t<th pSortableColumn=\"price\">Price <p-sortIcon field=\"price\"></p-sortIcon></th>\r\n\t\t\t\t\t\t<th pSortableColumn=\"category\">Category <p-sortIcon field=\"category\"></p-sortIcon></th>\r\n\t\t\t\t\t\t<th pSortableColumn=\"rating\">Reviews <p-sortIcon field=\"rating\"></p-sortIcon></th>\r\n\t\t\t\t\t\t<th pSortableColumn=\"inventoryStatus\">Status <p-sortIcon field=\"inventoryStatus\"></p-sortIcon></th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</ng-template>\r\n\t\t\t\t<ng-template pTemplate=\"body\" let-product let-expanded=\"expanded\">\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t<button type=\"button\" pButton pRipple [pRowToggler]=\"product\" class=\"p-button-text p-button-rounded p-button-plain\" [icon]=\"expanded ? 'pi pi-chevron-down' : 'pi pi-chevron-right'\"></button>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t<td style=\"min-width: 12rem;\">{{product.name}}</td>\r\n\t\t\t\t\t\t<td><img [src]=\"'assets/demo/images/product/' + product.image\" [alt]=\"product.name\" width=\"100\" class=\"shadow-4\" /></td>\r\n\t\t\t\t\t\t<td style=\"min-width: 8rem;\">{{product.price | currency:'USD'}}</td>\r\n\t\t\t\t\t\t<td style=\"min-width: 10rem;\">{{product.category}}</td>\r\n\t\t\t\t\t\t<td style=\"min-width: 10rem;\"><p-rating [ngModel]=\"product.rating\" [readonly]=\"true\" [cancel]=\"false\"></p-rating></td>\r\n\t\t\t\t\t\t<td><span [class]=\"'product-badge status-' + product.inventoryStatus.toLowerCase()\">{{product.inventoryStatus}}</span></td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</ng-template>\r\n\t\t\t\t<ng-template pTemplate=\"rowexpansion\" let-product>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td colspan=\"7\">\r\n\t\t\t\t\t\t\t<div class=\"p-3\">\r\n\t\t\t\t\t\t\t\t<p-table [value]=\"product.orders\" dataKey=\"id\" responsiveLayout=\"scroll\">\r\n\t\t\t\t\t\t\t\t\t<ng-template pTemplate=\"header\">\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th pSortableColumn=\"id\">Id <p-sortIcon field=\"price\"></p-sortIcon></th>\r\n\t\t\t\t\t\t<th pSortableColumn=\"customer\">Customer <p-sortIcon field=\"customer\"></p-sortIcon></th>\r\n\t\t\t\t\t\t<th pSortableColumn=\"date\">Date <p-sortIcon field=\"date\"></p-sortIcon></th>\r\n\t\t\t\t\t\t<th pSortableColumn=\"amount\">Amount <p-sortIcon field=\"amount\"></p-sortIcon></th>\r\n\t\t\t\t\t\t<th pSortableColumn=\"stats\">Status <p-sortIcon field=\"status\"></p-sortIcon></th>\r\n\t\t\t\t\t\t<th style=\"width: 4rem\"></th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</ng-template>\r\n\t\t\t\t<ng-template pTemplate=\"body\" let-order>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td>{{order.id}}</td>\r\n\t\t\t\t\t\t<td>{{order.customer}}</td>\r\n\t\t\t\t\t\t<td>{{order.date}}</td>\r\n\t\t\t\t\t\t<td>{{order.amount | currency:'USD'}}</td>\r\n\t\t\t\t\t\t<td><span [class]=\"'order-badge order-' + order.status.toLowerCase()\">{{order.status}}</span></td>\r\n\t\t\t\t\t\t<td><p-button type=\"button\" icon=\"pi pi-search\"></p-button></td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</ng-template>\r\n\t\t\t\t<ng-template pTemplate=\"emptymessage\">\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td colspan=\"6\">There are no order for this product yet.</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</ng-template>\r\n\t\t\t</p-table>\r\n\t\t</div>\r\n\t\t</td>\r\n\t\t</tr>\r\n\t\t</ng-template>\r\n\t\t</p-table>\r\n\t</div>\r\n\t</div>\r\n\r\n\t<div class=\"col-12\">\r\n\t\t<div class=\"card\">\r\n\t\t\t<h5>Subheader Grouping</h5>\r\n\t\t\t<p-table [value]=\"customers3\" rowGroupMode=\"subheader\" groupRowsBy=\"representative.name\" sortField=\"representative.name\" sortMode=\"single\" (onSort)=\"onSort()\" responsiveLayout=\"scroll\" [scrollable]=\"true\" scrollHeight=\"400px\">\r\n\t\t\t\t<ng-template pTemplate=\"header\">\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th>Name</th>\r\n\t\t\t\t\t\t<th>Country</th>\r\n\t\t\t\t\t\t<th>Company</th>\r\n\t\t\t\t\t\t<th>Status</th>\r\n\t\t\t\t\t\t<th>Date</th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</ng-template>\r\n\t\t\t\t<ng-template pTemplate=\"body\" let-customer let-rowIndex=\"rowIndex\">\r\n\t\t\t\t\t<tr pRowGroupHeader *ngIf=\"rowGroupMetadata[customer.representative.name].index === rowIndex\">\r\n\t\t\t\t\t\t<td colspan=\"5\" style=\"min-width: 200px;\">\r\n\t\t\t\t\t\t\t<img [alt]=\"customer.representative.name\" src=\"assets/demo/images/avatar/{{customer.representative.image}}\" width=\"32\" style=\"vertical-align: middle\" />\r\n\t\t\t\t\t\t\t<span class=\"font-bold ml-2\">{{customer.representative.name}}</span>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td style=\"min-width: 200px;\">\r\n\t\t\t\t\t\t\t{{customer.name}}\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t<td style=\"min-width: 200px;\">\r\n\t\t\t\t\t\t\t<img src=\"assets/demo/flags/flag_placeholder.png\" [class]=\"'flag flag-' + customer.country.code\" width=\"30\">\r\n\t\t\t\t\t\t\t<span class=\"image-text\" style=\"margin-left: .5em\">{{customer.country.name}}</span>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t<td style=\"min-width: 200px;\">\r\n\t\t\t\t\t\t\t{{customer.company}}\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t<td style=\"min-width: 200px;\">\r\n\t\t\t\t\t\t\t<span [class]=\"'customer-badge status-' + customer.status\">{{customer.status}}</span>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t<td style=\"min-width: 200px;\">\r\n\t\t\t\t\t\t\t{{customer.date}}\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</ng-template>\r\n\t\t\t</p-table>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n"
        },
        {
            "name": "TimelineComponent",
            "id": "component-TimelineComponent-f370a1b57d0d813ef4eda9af9cb3e941f8305dac99a297875ee112ba847f4d120d3dd3aacf06c5e802690a2d6ddcb622af7c4c5ab72328320ec661dd5d15a31f",
            "file": "src/app/showcase/components/timeline/timeline.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [
                "\n        .custom-marker {\n            display: flex;\n            width: 2rem;\n            height: 2rem;\n            align-items: center;\n            justify-content: center;\n            color: #ffffff;\n            border-radius: 50%;\n            z-index: 1;\n        }\n        \n        ::ng-deep {\n            .p-timeline-event-content,\n            .p-timeline-event-opposite {\n                line-height: 1;\n            }\n        }\n        \n        @media screen and (max-width: 960px) {\n            ::ng-deep {\n                .customized-timeline {\n                    .p-timeline-event:nth-child(even) {\n                        flex-direction: row !important;\n        \n                        .p-timeline-event-content {\n                            text-align: left !important;\n                        }\n                    }\n        \n                    .p-timeline-event-opposite {\n                        flex: 0;\n                    }\n        \n                    .p-card {\n                        margin-top: 1rem;\n                    }\n                }\n            }\n        }    \n    "
            ],
            "templateUrl": [
                "./timeline.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "customEvents",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "horizontalEvents",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 52
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { PrimeIcons } from 'primeng/api';\r\n\r\n@Component({\r\n    templateUrl: './timeline.component.html',\r\n    styles: [`\r\n        .custom-marker {\r\n            display: flex;\r\n            width: 2rem;\r\n            height: 2rem;\r\n            align-items: center;\r\n            justify-content: center;\r\n            color: #ffffff;\r\n            border-radius: 50%;\r\n            z-index: 1;\r\n        }\r\n        \r\n        ::ng-deep {\r\n            .p-timeline-event-content,\r\n            .p-timeline-event-opposite {\r\n                line-height: 1;\r\n            }\r\n        }\r\n        \r\n        @media screen and (max-width: 960px) {\r\n            ::ng-deep {\r\n                .customized-timeline {\r\n                    .p-timeline-event:nth-child(even) {\r\n                        flex-direction: row !important;\r\n        \r\n                        .p-timeline-event-content {\r\n                            text-align: left !important;\r\n                        }\r\n                    }\r\n        \r\n                    .p-timeline-event-opposite {\r\n                        flex: 0;\r\n                    }\r\n        \r\n                    .p-card {\r\n                        margin-top: 1rem;\r\n                    }\r\n                }\r\n            }\r\n        }    \r\n    `]\r\n})\r\nexport class TimelineComponent implements OnInit{\r\n\r\n    customEvents: any[];\r\n\r\n    horizontalEvents: any[];\r\n\r\n    ngOnInit() {\r\n        this.customEvents = [\r\n            {\r\n                status: 'Ordered',\r\n                date: '15/10/2020 10:30',\r\n                icon: PrimeIcons.SHOPPING_CART,\r\n                color: '#9C27B0',\r\n                image: 'game-controller.jpg'\r\n            },\r\n            {status: 'Processing', date: '15/10/2020 14:00', icon: PrimeIcons.COG, color: '#673AB7'},\r\n            {status: 'Shipped', date: '15/10/2020 16:15', icon: PrimeIcons.ENVELOPE, color: '#FF9800'},\r\n            {status: 'Delivered', date: '16/10/2020 10:00', icon: PrimeIcons.CHECK, color: '#607D8B'}\r\n        ];\r\n\r\n        this.horizontalEvents = [\r\n            '2020', '2021', '2022', '2023'\r\n        ];\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n        .custom-marker {\n            display: flex;\n            width: 2rem;\n            height: 2rem;\n            align-items: center;\n            justify-content: center;\n            color: #ffffff;\n            border-radius: 50%;\n            z-index: 1;\n        }\n        \n        ::ng-deep {\n            .p-timeline-event-content,\n            .p-timeline-event-opposite {\n                line-height: 1;\n            }\n        }\n        \n        @media screen and (max-width: 960px) {\n            ::ng-deep {\n                .customized-timeline {\n                    .p-timeline-event:nth-child(even) {\n                        flex-direction: row !important;\n        \n                        .p-timeline-event-content {\n                            text-align: left !important;\n                        }\n                    }\n        \n                    .p-timeline-event-opposite {\n                        flex: 0;\n                    }\n        \n                    .p-card {\n                        margin-top: 1rem;\n                    }\n                }\n            }\n        }    \n    \n",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"grid\">\r\n    <div class=\"col-12\">\r\n        <div class=\"card\">\r\n            <h4>Timeline</h4>\r\n\r\n            <h5>Custom Timeline</h5>\r\n            <p-timeline [value]=\"customEvents\" align=\"alternate\" styleClass=\"customized-timeline\">\r\n                <ng-template pTemplate=\"marker\" let-event>\r\n                <span class=\"custom-marker shadow-2\" [style.backgroundColor]=\"event.color\">\r\n                    <i [ngClass]=\"event.icon\"></i>\r\n                </span>\r\n                </ng-template>\r\n                <ng-template pTemplate=\"content\" let-event>\r\n                    <p-card [header]=\"event.status\" [subheader]=\"event.date\">\r\n                        <img *ngIf=\"event.image\" [src]=\"'assets/demo/images/product/' + event.image\" [alt]=\"event.name\" width=\"200\" class=\"shadow-2\" />\r\n                        <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Inventore sed consequuntur error repudiandae numquam deserunt\r\n                            quisquam repellat libero asperiores earum nam nobis, culpa ratione quam perferendis esse, cupiditate neque quas!</p>\r\n                        <button pButton label=\"Read more\" class=\"p-button-text\"></button>\r\n                    </p-card>\r\n                </ng-template>\r\n            </p-timeline>\r\n\r\n            <h5 style=\"margin-top: 5em\">Horizontal - Alternate Align</h5>\r\n            <p-timeline [value]=\"horizontalEvents\" layout=\"horizontal\" align=\"alternate\">\r\n                <ng-template pTemplate=\"content\" let-event>\r\n                    {{event}}\r\n                </ng-template>\r\n                <ng-template pTemplate=\"opposite\" let-event>\r\n                    &nbsp;\r\n                </ng-template>\r\n            </p-timeline>\r\n        </div>\r\n    </div>\r\n</div>\r\n"
        },
        {
            "name": "TodayLeaveDashboardComponent",
            "id": "component-TodayLeaveDashboardComponent-04cb0cd07076593852ccc9ffebe205b988ac88804e3315f0f93624497de9ca14320ce9ef3ff8fe14e753c856301484d3bc3fd0525151eddace30f32ff46529b6",
            "file": "src/app/core/dashboard/component/today-leave-dashboard/today-leave-dashboard.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-today-leave-dashboard",
            "styleUrls": [
                "./today-leave-dashboard.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./today-leave-dashboard.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { DashboardService } from '../../service/dashboard.service';\r\n\r\n@Component({\r\n  selector: 'app-today-leave-dashboard',\r\n  templateUrl: './today-leave-dashboard.component.html',\r\n  styleUrls: ['./today-leave-dashboard.component.scss']\r\n})\r\nexport class TodayLeaveDashboardComponent implements OnInit {\r\n\r\n  constructor(private srv:DashboardService) { }\r\n\r\n  data=[];\r\n\r\n  ngOnInit(): void {\r\n    this.srv.getLeaveToday().toPromise().then(res=>{\r\n      this.data=res;\r\n    })\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./today-leave-dashboard.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "srv",
                        "type": "DashboardService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "srv",
                        "type": "DashboardService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<h6 class=\"pt-2\">Cuti Hari Ini</h6>\r\n<div style=\"height: 250px;overflow-y:auto;\" *ngIf=\"data.length > 0 else noData\">\r\n    <div class=\"m-3 pb-2 grid field\" style=\"border-bottom: 1px solid #EBEBEB; \" *ngFor=\"let item of data\">\r\n        <img class=\"pr-2\" src=\"{{item.gender =='F' ? 'assets/F.png':'assets/M.png'}}\">\r\n        <span class=\"pt-1\">\r\n            <div class=\"label-normal\">{{item.name}}</div>\r\n            <div class=\"label-small\">{{item.date}}</div>\r\n        </span>\r\n    </div>\r\n</div>\r\n\r\n<ng-template #noData>\r\n    <div class=\"no-data-image\">\r\n    </div>\r\n</ng-template>\r\n"
        },
        {
            "name": "ToggleComponent",
            "id": "component-ToggleComponent-a505d88d3ef186cd8fb35a9b7c20e45c8744fbd0844f6839072ff502fe625c8e768fe804dc8274ac6fbefb46f95d9fc577c04a6e5a3fe9aa6696028d996754bd",
            "file": "src/stories/primeng/controls/toggle/toggle.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "toggle-custom",
            "styleUrls": [
                "./toggle.component.css"
            ],
            "styles": [],
            "template": "<div class=\"toggle-custom\">\n    <p-inputSwitch [(ngModel)]=\"value\" (onChange)=\"onChange()\"></p-inputSwitch>\n    <span>{{label}}</span>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "label",
                    "defaultValue": "'Label'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "select",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [
                {
                    "name": "onChange",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: 'toggle-custom',\r\n    template: `\r\n    <div class=\"toggle-custom\">\r\n        <p-inputSwitch [(ngModel)]=\"value\" (onChange)=\"onChange()\"></p-inputSwitch>\r\n        <span>{{label}}</span>\r\n    </div>\r\n    `,\r\n    styleUrls: ['./toggle.component.css']\r\n})\r\n\r\nexport class ToggleComponent{\r\n    @Input() label : string = 'Label';\r\n    @Output() select = new EventEmitter<any>();\r\n    value : boolean;\r\n\r\n    onChange(){\r\n        this.select.emit(this.value);\r\n    }\r\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host ::ng-deep .p-inputswitch.p-component{\r\n    width: 42px;\r\n    height: 24px;\r\n    margin-right: 0.5rem;\r\n}\r\n\r\n:host ::ng-deep .p-inputswitch.p-inputswitch-checked .p-inputswitch-slider{\r\n    background: #0E8EC5;\r\n}\r\n\r\n:host ::ng-deep .p-inputswitch.p-inputswitch-checked .p-inputswitch-slider:before{\r\n    transform: unset;\r\n    transform: translateX(2.4rem);\r\n}\r\n\r\ndiv.toggle-custom{\r\n    display: flex;\r\n    align-items: center;\r\n    font-size: 14px;\r\n    font-weight: 400;\r\n}",
                    "styleUrl": "./toggle.component.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "TreeComponent",
            "id": "component-TreeComponent-5a043b647531dd13d8f53a3e2316d1ee660b733ac63fc0af4608ab3ef2a84fd967af6e461e378410c87f63978c8beb964ee8796aa819e8333746719b80608404",
            "file": "src/app/showcase/components/tree/tree.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./tree.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "cols",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "files1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TreeNode[]",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "files2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TreeNode[]",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "files3",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TreeNode[]",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "selectedFiles1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TreeNode",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "selectedFiles2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TreeNode[]",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "selectedFiles3",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TreeNode",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { NodeService } from '../../service/nodeservice';\r\nimport { TreeNode } from 'primeng/api';\r\n\r\n@Component({\r\n    templateUrl: './tree.component.html'\r\n})\r\nexport class TreeComponent implements OnInit {\r\n\r\n\r\n    files1: TreeNode[];\r\n\r\n    files2: TreeNode[];\r\n\r\n    files3: TreeNode[];\r\n\r\n    selectedFiles1: TreeNode;\r\n\r\n    selectedFiles2: TreeNode[];\r\n\r\n    selectedFiles3: TreeNode;\r\n\r\n    cols: any[];\r\n\r\n    constructor(private nodeService: NodeService) {}\r\n\r\n    ngOnInit() {\r\n        this.nodeService.getFiles().then(files => this.files1 = files);\r\n        this.nodeService.getFilesystem().then(files => this.files2 = files);\r\n        this.nodeService.getFiles().then(files => {\r\n            this.files3 = [{\r\n                label: 'Root',\r\n                children: files\r\n            }];\r\n        });\r\n\r\n        this.cols = [\r\n            { field: 'name', header: 'Name' },\r\n            { field: 'size', header: 'Size' },\r\n            { field: 'type', header: 'Type' }\r\n        ];\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "nodeService",
                        "type": "NodeService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 23,
                "jsdoctags": [
                    {
                        "name": "nodeService",
                        "type": "NodeService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"grid\">\r\n\t<div class=\"col-12\">\r\n\t\t<div class=\"card\">\r\n\t\t\t<h4>Tree</h4>\r\n\t\t\t<p-tree [value]=\"files1\" selectionMode=\"checkbox\" [(selection)]=\"selectedFiles1\"></p-tree>\r\n\t\t</div>\r\n\t</div>\r\n\t<div class=\"col-12\">\r\n\t\t<div class=\"card\">\r\n\t\t\t<h4>TreeTable</h4>\r\n\t\t\t<p-treeTable [value]=\"files2\" [columns]=\"cols\" selectionMode=\"checkbox\" [(selection)]=\"selectedFiles2\">\r\n\t\t\t\t<ng-template pTemplate=\"caption\">\r\n\t\t\t\t\tFileSystem\r\n\t\t\t\t</ng-template>\r\n\t\t\t\t<ng-template pTemplate=\"header\" let-columns>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th *ngFor=\"let col of columns\">\r\n\t\t\t\t\t\t\t{{col.header}}\r\n\t\t\t\t\t\t</th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</ng-template>\r\n\t\t\t\t<ng-template pTemplate=\"body\" let-rowNode let-rowData=\"rowData\" let-columns=\"columns\">\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td *ngFor=\"let col of columns; let i = index\">\r\n\t\t\t\t\t\t\t<p-treeTableToggler [rowNode]=\"rowNode\" *ngIf=\"i == 0\"></p-treeTableToggler>\r\n\t\t\t\t\t\t\t<p-treeTableCheckbox [value]=\"rowNode\" *ngIf=\"i == 0\"></p-treeTableCheckbox>\r\n\t\t\t\t\t\t\t{{rowData[col.field]}}\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</ng-template>\r\n\t\t\t</p-treeTable>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n"
        },
        {
            "name": "UpdateDialogComponent",
            "id": "component-UpdateDialogComponent-883c43481fde5fad9209038ec9596045f694b0dfc323a04abf002272ba57fc67819485e9388f2bd1d65d04f157fc0f088ea862bed59bdfa7f047fdef442510ad",
            "file": "src/stories/primeng/confirm-dialogs/update-dialog/update-dialog.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "BrowserAnimationsModule",
                    "type": "module"
                }
            ],
            "selector": "update-dialog",
            "styleUrls": [
                "./update-dialog.component.css"
            ],
            "styles": [],
            "template": "<button pButton label=\"Show\" (click)=\"showDialog()\"></button>\n<p-dialog [(visible)]=\"display\" [baseZIndex]=\"10000\" [modal]=\"true\" [draggable]=\"false\">\n    <ng-template pTemplate=\"header\">\n        <div class=\"dialog-header\">\n            <div>\n                <svg width=\"24\" height=\"24\" viewBox=\"0 0 18 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M2.5 0C1.12109 0 0 1.12109 0 2.5V15C0 16.3789 1.12109 17.5 2.5 17.5H15C16.3789 17.5 17.5 16.3789 17.5 15V5.51953C17.5 4.85547 17.2383 4.21875 16.7695 3.75L13.75 0.730469C13.2812 0.261719 12.6445 0 11.9805 0H2.5ZM2.5 3.75C2.5 3.05859 3.05859 2.5 3.75 2.5H11.25C11.9414 2.5 12.5 3.05859 12.5 3.75V6.25C12.5 6.94141 11.9414 7.5 11.25 7.5H3.75C3.05859 7.5 2.5 6.94141 2.5 6.25V3.75ZM8.75 10C9.41304 10 10.0489 10.2634 10.5178 10.7322C10.9866 11.2011 11.25 11.837 11.25 12.5C11.25 13.163 10.9866 13.7989 10.5178 14.2678C10.0489 14.7366 9.41304 15 8.75 15C8.08696 15 7.45107 14.7366 6.98223 14.2678C6.51339 13.7989 6.25 13.163 6.25 12.5C6.25 11.837 6.51339 11.2011 6.98223 10.7322C7.45107 10.2634 8.08696 10 8.75 10Z\" fill=\"#0E8EC5\"/>\n                </svg>\n            </div>\n            <div>\n                <span>Update Data</span>\n            </div>\n        </div>\n    </ng-template>\n    <ng-template pTemplate=\"content\">\n        <span>\n            {{message}}\n        </span>\n    </ng-template>\n    <ng-template pTemplate=\"footer\">\n        <button pButton ngClass=\"secondary\" label=\"No\" (click)=\"onReject()\"></button>\n        <button pButton ngClass=\"primary\" label=\"Yes\" (click)=\"onAccept()\"></button>\n    </ng-template>\n</p-dialog>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "message",
                    "defaultValue": "\"Are you sure to update this data?\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "accept",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "display",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 39
                }
            ],
            "methodsClass": [
                {
                    "name": "onAccept",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onReject",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "showDialog",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\n\r\n@Component({\r\n    selector: 'update-dialog',\r\n    template: `\r\n    <button pButton label=\"Show\" (click)=\"showDialog()\"></button>\r\n    <p-dialog [(visible)]=\"display\" [baseZIndex]=\"10000\" [modal]=\"true\" [draggable]=\"false\">\r\n        <ng-template pTemplate=\"header\">\r\n            <div class=\"dialog-header\">\r\n                <div>\r\n                    <svg width=\"24\" height=\"24\" viewBox=\"0 0 18 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path d=\"M2.5 0C1.12109 0 0 1.12109 0 2.5V15C0 16.3789 1.12109 17.5 2.5 17.5H15C16.3789 17.5 17.5 16.3789 17.5 15V5.51953C17.5 4.85547 17.2383 4.21875 16.7695 3.75L13.75 0.730469C13.2812 0.261719 12.6445 0 11.9805 0H2.5ZM2.5 3.75C2.5 3.05859 3.05859 2.5 3.75 2.5H11.25C11.9414 2.5 12.5 3.05859 12.5 3.75V6.25C12.5 6.94141 11.9414 7.5 11.25 7.5H3.75C3.05859 7.5 2.5 6.94141 2.5 6.25V3.75ZM8.75 10C9.41304 10 10.0489 10.2634 10.5178 10.7322C10.9866 11.2011 11.25 11.837 11.25 12.5C11.25 13.163 10.9866 13.7989 10.5178 14.2678C10.0489 14.7366 9.41304 15 8.75 15C8.08696 15 7.45107 14.7366 6.98223 14.2678C6.51339 13.7989 6.25 13.163 6.25 12.5C6.25 11.837 6.51339 11.2011 6.98223 10.7322C7.45107 10.2634 8.08696 10 8.75 10Z\" fill=\"#0E8EC5\"/>\r\n                    </svg>\r\n                </div>\r\n                <div>\r\n                    <span>Update Data</span>\r\n                </div>\r\n            </div>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"content\">\r\n            <span>\r\n                {{message}}\r\n            </span>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"footer\">\r\n            <button pButton ngClass=\"secondary\" label=\"No\" (click)=\"onReject()\"></button>\r\n            <button pButton ngClass=\"primary\" label=\"Yes\" (click)=\"onAccept()\"></button>\r\n        </ng-template>\r\n    </p-dialog>\r\n    `,\r\n    styleUrls: ['./update-dialog.component.css'],\r\n    providers: [BrowserAnimationsModule]\r\n})\r\n\r\nexport class UpdateDialogComponent {\r\n    @Input() message: string = \"Are you sure to update this data?\";\r\n    @Output() accept = new EventEmitter<any>();\r\n    display: boolean = false;\r\n\r\n    showDialog() {\r\n        this.display = true;\r\n    }\r\n\r\n    onAccept(){\r\n        this.accept.emit(true);\r\n        this.display = false;\r\n    }\r\n\r\n    onReject(){\r\n        this.display = false;\r\n    }\r\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "div.dialog-header{\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n}\r\n\r\n:host ::ng-deep .p-dialog.p-component{\r\n    min-height: 196px;\r\n    min-width: 495px;\r\n}\r\n\r\n:host ::ng-deep .p-dialog-header{\r\n    padding: 3rem 3rem 1rem 3rem;\r\n    border-bottom: 1px solid #EEEEEE;\r\n}\r\n\r\n:host ::ng-deep .p-dialog-content{\r\n    padding-left: 3rem;\r\n    padding-right: 3rem;\r\n}\r\n\r\n:host ::ng-deep .p-dialog-footer{\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: end;\r\n    padding: 1rem 3rem 3rem 3rem;\r\n    border-top: 1px solid #EEEEEE;\r\n}\r\n\r\n:host ::ng-deep .p-dialog-header div div span{\r\n    font-size: 20px;\r\n    font-weight: 700;\r\n}\r\n\r\ndiv.dialog-header div svg{\r\n    margin-right: 1rem;\r\n}\r\n\r\n:host ::ng-deep .p-dialog-content span{\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n}\r\n\r\n:host ::ng-deep .p-element.secondary.p-button.p-component{\r\n    width: 128px;\r\n    height: 35px;\r\n    font-size: 14px;\r\n    font-weight: 700;\r\n    background-color: #E8F2FF;\r\n    color: #0E8EC5;\r\n    border: none;\r\n}\r\n\r\n:host ::ng-deep .p-element.primary.p-button.p-component{\r\n    width: 128px;\r\n    height: 35px;\r\n    font-size: 14px;\r\n    font-weight: 700;\r\n    background-color: #0E8EC5;\r\n    color: #FFFFFF;\r\n    border: none;\r\n}",
                    "styleUrl": "./update-dialog.component.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "UserAddComponent",
            "id": "component-UserAddComponent-8aa5ac306bc0d47a1b0e11a6b6d6d33142f1e5ef93cda673def3692a20d1278510ec74a370c3929c98cb006d9ec4eae2f372891be70cab4b1bf9e92f8466a9a8",
            "file": "src/app/util/user/add/user-add.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-user-add",
            "styleUrls": [
                "./user-add.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./user-add.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "formControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "password",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "null",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "rePassword",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "null",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "touched",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [
                {
                    "name": "createForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSave",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "selectEmp",
                    "args": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { UntypedFormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthenticationService } from 'src/app/core/service/authentication.service';\r\nimport { HelperService } from 'src/app/core/service/helper-service';\r\nimport { MessageBoxService } from 'src/app/core/service/message-box.service';\r\nimport { encryptionPassword } from 'src/app/layout/login/login.component';\r\nimport { UserService } from '../service/user.service';\r\n\r\n@Component({\r\n  selector: 'app-user-add',\r\n  templateUrl: './user-add.component.html',\r\n  styleUrls: ['./user-add.component.scss']\r\n})\r\nexport class UserAddComponent implements OnInit {\r\n  formControl;\r\n  password = null;\r\n  rePassword=null;\r\n  touched=false;\r\n  \r\n  constructor(private formBuilder: UntypedFormBuilder,\r\n    private srv: UserService,\r\n    private auth:AuthenticationService,\r\n    private help:HelperService,\r\n    private msg:MessageBoxService,\r\n    private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n  }\r\n  \r\n\r\n  createForm(): void {\r\n    this.formControl = this.formBuilder.group({\r\n      username: [\"\",Validators.required],\r\n      isGeneratedPassword: [true],\r\n      isActive:[true],\r\n      employee:[null],\r\n      effBegin:['',Validators.required],\r\n      effEnd:['',Validators.required],\r\n      email:['',[Validators.email,Validators.required]]\r\n    })\r\n  }\r\n  onSave(){\r\n    if(this.formControl.valid){\r\n      if(!this.formControl.value.isGeneratedPassword && (!this.password || this.password!=this.rePassword)){\r\n        this.touched=true;\r\n        return\r\n      }\r\n      let body = this.help.formatDate(this.formControl.getRawValue());\r\n      body.password = !body.isGeneratedPassword ? encryptionPassword(this.password) : null;\r\n      this.srv.save(body).subscribe((res)=>{\r\n        this.msg.showSuccess(res);\r\n        this.router.navigate(['util/user'])\r\n      });\r\n    }else{\r\n      this.formControl.markAllAsTouched();\r\n      this.touched=true;\r\n    }\r\n  }\r\n  selectEmp(e){\r\n    this.formControl.patchValue({\r\n      employee:e\r\n    })\r\n  }\r\n  \r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./user-add.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "UntypedFormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "srv",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "auth",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "help",
                        "type": "HelperService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "msg",
                        "type": "MessageBoxService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 19,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "UntypedFormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "srv",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "auth",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "help",
                        "type": "HelperService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "msg",
                        "type": "MessageBoxService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "\r\n<input type=\"text\"  style=\"opacity: 0;position: absolute;\">\r\n<input type=\"password\" style=\"opacity: 0;position: absolute;\">\r\n<div class=\"card\">\r\n    <div class=\"grid field\">\r\n        <div class=\"col-6 mt-2\">\r\n            <h5>Pengguna - Tambah</h5>\r\n        </div>\r\n        <div class=\"col-6\">\r\n            <div class=\"field text-right hide-mobile\">\r\n                <btn-kembali routeUrl=\"util/user\"></btn-kembali>\r\n                <btn-save (onClick)=\"onSave()\"></btn-save>\r\n            </div>\r\n            <div class=\"field text-right hide-desktop\">\r\n                <btn-save (onClick)=\"onSave()\"></btn-save>\r\n            </div>\r\n        </div>\r\n    </div>\r\n        <div class=\"grid p-fluid\" [formGroup]=\"formControl\">\r\n            <div class=\"col-12 md:col-6\">\r\n                <div class=\"field\">\r\n                    <label for=\"employee\">Karyawan</label>\r\n                    <div>\r\n                        <app-lov uri=\"lov/employees\" label=\"Pilih Karyawan\" (selected)=\"selectEmp($event)\"></app-lov>\r\n                    </div>\r\n                </div>\r\n                <div class=\"field\">\r\n                    <label for=\"name\" class=\"required\">Nama Pengguna</label>\r\n                    <div>\r\n                        <input id=\"name\" type=\"text\" formControlName=\"username\" placeholder=\"Isi Nama\" pInputText [ngClass]=\"{'ng-dirty ng-invalid' : (formControl.get('username').touched || formControl.get('username').dirty ) &&\r\n                        !formControl.get('username').valid}\">\r\n                        <app-error-field-helper [formControlKey]=\"formControl.get('username')\" ></app-error-field-helper>\r\n                    </div>\r\n                </div>\r\n                <div class=\"field\">\r\n                    <label for=\"surel\" class=\"required\">Email</label>\r\n                    <div>\r\n                        <input id=\"surel\" type=\"text\" formControlName=\"email\" placeholder=\"example@google.com\" pInputText [ngClass]=\"{'ng-dirty ng-invalid' : (formControl.get('email').touched || formControl.get('email').dirty ) &&\r\n                        !formControl.get('email').valid}\">\r\n                        <app-error-field-helper [formControlKey]=\"formControl.get('email')\" ></app-error-field-helper>\r\n                    </div>\r\n                </div>\r\n                <div class=\"field\">\r\n                    <label for=\"active\" >Aktif</label>\r\n                    <div>\r\n                        <p-inputSwitch name=\"active\"  formControlName=\"isActive\"></p-inputSwitch>\r\n                    </div>\r\n                </div>\r\n                <div class=\"field\">\r\n                    <label for=\"generate\" >Acak Kata Sandi</label>\r\n                    <div>\r\n                        <p-inputSwitch name=\"generate\"  formControlName=\"isGeneratedPassword\"></p-inputSwitch>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-12 md:col-6\">\r\n                <div class=\"field\">\r\n                    <label for=\"effBegin\" class=\"required\">Berlaku Dari</label>\r\n                    <div>\r\n                        <p-calendar id=\"effBegin\"  dateFormat=\"dd-mm-yy\" appendTo=\"body\" placeholder=\"Isi Tanggal Bergabung\" [ngClass]=\"{'ng-dirty ng-invalid' : (formControl.get('effBegin').touched || formControl.get('effBegin').dirty ) &&\r\n                        !formControl.get('effBegin').valid}\"\r\n                            formControlName=\"effBegin\"[showIcon]=\"true\">\r\n                        </p-calendar>\r\n                        <app-error-field-helper [formControlKey]=\"formControl.get('effBegin')\" ></app-error-field-helper>\r\n                    </div>\r\n                </div>\r\n                <div class=\"field\">\r\n                    <label for=\"effEnd\" class=\"required\">Berlaku Sampai</label>\r\n                    <div>\r\n                        <p-calendar id=\"effEnd\"  dateFormat=\"dd-mm-yy\" [minDate]=\"formControl.value.effBegin\" appendTo=\"body\" placeholder=\"Isi Tanggal Bergabung\" [ngClass]=\"{'ng-dirty ng-invalid' : (formControl.get('effEnd').touched || formControl.get('effEnd').dirty ) &&\r\n                        !formControl.get('effEnd').valid}\"\r\n                            formControlName=\"effEnd\"[showIcon]=\"true\">\r\n                        </p-calendar>\r\n                        <app-error-field-helper [formControlKey]=\"formControl.get('effEnd')\" ></app-error-field-helper>\r\n                    </div>\r\n                </div>\r\n                \r\n                <ng-container *ngIf=\"!formControl.value.isGeneratedPassword\">\r\n                    <div class=\"field\">\r\n                        <label for=\"pass\" class=\"required\">Sandi</label>\r\n                        <p-password [(ngModel)]=\"password\" #pass=\"ngModel\" required [ngClass]=\"{'ng-dirty ng-invalid' : pass.errors?.['required'] && (pass.dirty || pass.touched || touched)}\"\r\n                        [toggleMask]=\"true\" [ngModelOptions]=\"{standalone: true}\"></p-password>\r\n                        <small *ngIf=\"pass.errors?.['required'] && (pass.dirty || pass.touched || touched)\" class=\"p-error-empty text-left\"></small>\r\n                    </div>\r\n                    <div class=\"field\">\r\n                        <label for=\"rePass\" class=\"required\">Sandi Ulang</label>\r\n                        <p-password [(ngModel)]=\"rePassword\" #rePass=\"ngModel\" required [ngClass]=\"{'ng-dirty ng-invalid' : rePassword!=password || pass.errors?.['required'] && (rePass.dirty || touched || rePass.touched)}\"\r\n                        [toggleMask]=\"true\" [ngModelOptions]=\"{standalone: true}\"></p-password>\r\n                        <small *ngIf=\"rePass.errors?.['required'] && (rePass.dirty || rePass.touched || touched)\" class=\"p-error-empty text-left\"></small>\r\n                        <small *ngIf=\"rePassword != password && (rePass.dirty || rePass.touched || touched)\" style=\"color: red;\" class=\"p-error-empty text-left\"> password tidak sama.</small>\r\n                    </div>\r\n                </ng-container>\r\n            </div>\r\n        </div>\r\n</div>"
        },
        {
            "name": "UserDetailComponent",
            "id": "component-UserDetailComponent-4744f638d5a465ef9e95061ce826a2e21e324f9e5dc68d994bc921a8905de1b28896deb3ed6a5b740889efc15927c5b7b67e294c8641cf0340bf1af508f838a8",
            "file": "src/app/util/user/detail/user-detail.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-user-detail",
            "styleUrls": [
                "./user-detail.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./user-detail.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "formControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "isShow",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "loading",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "password",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "null",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "rePassword",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "null",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "touched",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "version",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                }
            ],
            "methodsClass": [
                {
                    "name": "click",
                    "args": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "createForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getDetail",
                    "args": [
                        {
                            "name": "id",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onEdit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 102,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onResetPass",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 96,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSave",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "selectEmp",
                    "args": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { UntypedFormBuilder, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AuthenticationService } from 'src/app/core/service/authentication.service';\r\nimport { HelperService } from 'src/app/core/service/helper-service';\r\nimport { MessageBoxService } from 'src/app/core/service/message-box.service';\r\nimport { encryptionPassword } from 'src/app/layout/login/login.component';\r\nimport { UserService } from '../service/user.service';\r\n\r\n@Component({\r\n  selector: 'app-user-detail',\r\n  templateUrl: './user-detail.component.html',\r\n  styleUrls: ['./user-detail.component.scss'],\r\n  \r\n})\r\nexport class UserDetailComponent implements OnInit {\r\n  formControl;\r\n  password = null;\r\n  rePassword=null;\r\n  touched=false;\r\n  loading=true;\r\n  isShow=false;\r\n  id;\r\n  version;\r\n  \r\n  constructor(private formBuilder: UntypedFormBuilder,\r\n    private srv: UserService,\r\n    private auth:AuthenticationService,\r\n    private route:ActivatedRoute,\r\n    private help:HelperService,\r\n    private msg:MessageBoxService,\r\n    private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.id = this.route.snapshot.paramMap.get('id');\r\n    this.createForm();\r\n    this.getDetail(this.id);\r\n  }\r\n\r\n  getDetail(id){\r\n    this.loading = true;\r\n    this.srv.getOne(id).subscribe(res=>{\r\n      this.version=res.version;\r\n      res.effBegin=res.effBegin?new Date(res.effBegin):null;\r\n      res.effEnd= res.effEnd?new Date(res.effEnd):null;\r\n      this.formControl.patchValue(res);\r\n      this.loading=false;\r\n    }, err => {\r\n      this.loading = false\r\n    })\r\n  }\r\n  createForm(): void {\r\n    this.formControl = this.formBuilder.group({\r\n      username: [{value:\"\",disabled:true}],\r\n      isActive:[''],\r\n      employee:[''],\r\n      effBegin:[{value:\"\",disabled:true}],\r\n      effEnd:[{value:\"\",disabled:true}],\r\n      email:[{value:\"\",disabled:true}]\r\n    })\r\n  }\r\n  onSave(){\r\n    if( this.password&& this.password==this.rePassword){\r\n      let form = this.formControl.getRawValue();\r\n      let body ={\r\n        newPassword: !form.isGeneratedPassword ? encryptionPassword(this.password) : null,\r\n        id:this.id,\r\n        version:this.version\r\n      }\r\n      this.srv.changePass(body).subscribe((res)=>{\r\n        this.msg.showSuccess(res);\r\n        this.getDetail(this.id);\r\n        this.isShow=false;\r\n      });\r\n    }else{\r\n      this.touched=true;\r\n    }\r\n  }\r\n  selectEmp(e){\r\n    this.formControl.patchValue({\r\n      employeeId:e.id\r\n    })\r\n  }\r\n  \r\n  click(e){\r\n    if(e == 'edit'){\r\n      this.onEdit()\r\n    }else if(e=='changePassword'){\r\n      this.password=null;\r\n      this.rePassword=null;\r\n      this.isShow=true;\r\n    }else{\r\n      this.onResetPass();\r\n    }\r\n  }\r\n  onResetPass(){\r\n    this.srv.resetPass({id:this.id,version:this.version}).subscribe(res=>{\r\n      this.msg.showSuccess(res);\r\n      this.getDetail(this.id);\r\n    })\r\n  }\r\n  onEdit(){\r\n    this.router.navigate(['/util/user/edit/'+this.id])\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./user-detail.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "UntypedFormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "srv",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "auth",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "help",
                        "type": "HelperService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "msg",
                        "type": "MessageBoxService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 24,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "UntypedFormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "srv",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "auth",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "help",
                        "type": "HelperService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "msg",
                        "type": "MessageBoxService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "\r\n<input type=\"text\"  style=\"opacity: 0;position: absolute;\">\r\n<input type=\"password\" style=\"opacity: 0;position: absolute;\">\r\n<div class=\"card\">\r\n    <div class=\"grid field\">\r\n        <div class=\"col-6 mt-2\">\r\n            <h5>Pengguna - Detil</h5>\r\n        </div>\r\n        <div class=\"col-6\">\r\n            <div class=\"field text-right hide-mobile\">\r\n                <btn-kembali routeUrl=\"util/user\"></btn-kembali>\r\n                <btn-multi-action [haveEdit]=\"true\" [haveChangePass]=\"true\" [haveResetPass]=\"true\" [multiple]=\"false\" (onClick)=\"click($event)\"></btn-multi-action>\r\n            </div>\r\n            <div class=\"field text-right hide-desktop\">\r\n                <btn-multi-action [haveEdit]=\"true\" [haveChangePass]=\"true\" [haveResetPass]=\"true\" [multiple]=\"false\" (onClick)=\"click($event)\"></btn-multi-action>\r\n            </div>\r\n        </div>\r\n    </div>\r\n        <div class=\"grid p-fluid\" [formGroup]=\"formControl\" *ngIf=\"!loading else skel\">\r\n            <div class=\"col-12 md:col-6\">\r\n                <div class=\"field\">\r\n                    <label for=\"employee\">Karyawan</label>\r\n                    <div>\r\n                        <app-lov uri=\"lov/employees\" label=\"-\" [value]=\"formControl.value?.employee?.id\" [disabled]=\"true\" [haveNullValue]=\"true\"></app-lov>\r\n                    </div>\r\n                </div>\r\n                <div class=\"field\">\r\n                    <label for=\"name\" >Nama Pengguna</label>\r\n                    <div>\r\n                        <input id=\"name\" type=\"text\" formControlName=\"username\" placeholder=\"Isi Nama\" pInputText [ngClass]=\"{'ng-dirty ng-invalid' : (formControl.get('username').touched || formControl.get('username').dirty ) &&\r\n                        !formControl.get('username').valid}\">\r\n                        <app-error-field-helper [formControlKey]=\"formControl.get('username')\" ></app-error-field-helper>\r\n                    </div>\r\n                </div>\r\n                <div class=\"field\">\r\n                    <label for=\"surel\" >Email</label>\r\n                    <div>\r\n                        <input id=\"surel\" type=\"text\" formControlName=\"email\" placeholder=\"example@google.com\" pInputText [ngClass]=\"{'ng-dirty ng-invalid' : (formControl.get('email').touched || formControl.get('email').dirty ) &&\r\n                        !formControl.get('email').valid}\">\r\n                        <app-error-field-helper [formControlKey]=\"formControl.get('email')\" ></app-error-field-helper>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-12 md:col-6\">\r\n                <div class=\"field\">\r\n                    <label for=\"effBegin\" >Berlaku Dari</label>\r\n                    <div>\r\n                        <p-calendar id=\"effBegin\"  dateFormat=\"dd-mm-yy\" appendTo=\"body\" placeholder=\"Isi Tanggal Bergabung\" [ngClass]=\"{'ng-dirty ng-invalid' : (formControl.get('effBegin').touched || formControl.get('effBegin').dirty ) &&\r\n                        !formControl.get('effBegin').valid}\"\r\n                            formControlName=\"effBegin\"[showIcon]=\"true\">\r\n                        </p-calendar>\r\n                        <app-error-field-helper [formControlKey]=\"formControl.get('effBegin')\" ></app-error-field-helper>\r\n                    </div>\r\n                </div>\r\n                <div class=\"field\">\r\n                    <label for=\"effEnd\" >Berlaku Sampai</label>\r\n                    <div>\r\n                        <p-calendar id=\"effEnd\"  dateFormat=\"dd-mm-yy\" [minDate]=\"formControl.value.effBegin\" appendTo=\"body\" placeholder=\"Isi Tanggal Bergabung\" [ngClass]=\"{'ng-dirty ng-invalid' : (formControl.get('effEnd').touched || formControl.get('effEnd').dirty ) &&\r\n                        !formControl.get('effEnd').valid}\"\r\n                            formControlName=\"effEnd\"[showIcon]=\"true\">\r\n                        </p-calendar>\r\n                        <app-error-field-helper [formControlKey]=\"formControl.get('effEnd')\" ></app-error-field-helper>\r\n                    </div>\r\n                </div>\r\n                <div class=\"field\">\r\n                    <label for=\"active\" >Aktif</label>\r\n                    <div style=\"pointer-events:none\">\r\n                        <p-inputSwitch name=\"active\"  formControlName=\"isActive\"></p-inputSwitch>\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n</div>\r\n\r\n\r\n<ng-template #skel>\r\n    <div class=\"custom-skeleton p-4\">\r\n        <p-skeleton width=\"100%\" height=\"150px\"></p-skeleton>\r\n    </div>\r\n</ng-template>\r\n\r\n\r\n\r\n<p-dialog header=\"Ganti Password\" [(visible)]=\"isShow\" modal=\"modal\" *ngIf=\"isShow\" showEffect=\"fade\" [contentStyle]=\"{'overflow-y': 'auto', 'overflow-x': 'hidden', \r\n'max-height': '80vh','min-height':'250px'}\"\r\n    [style]=\"{width: '30vw'}\" [breakpoints]=\"{'960px': '75vw'}\">\r\n    <div >\r\n        <div class=\"grid p-fluid\">\r\n            <div class=\"col-12\">             \r\n                <div class=\"field\">\r\n                    <label for=\"pass\" class=\"required\" >Sandi</label>\r\n                    <p-password [(ngModel)]=\"password\" #pass=\"ngModel\" required [ngClass]=\"{'ng-dirty ng-invalid' : (pass.dirty || pass.touched || touched) && pass.errors?.['required']}\"\r\n                    [toggleMask]=\"true\" [ngModelOptions]=\"{standalone: true}\"></p-password>\r\n                    <small *ngIf=\"pass.errors?.['required'] && (pass.dirty || pass.touched || touched)\" class=\"p-error-empty text-left\"></small>\r\n                </div>\r\n                <div class=\"field\">\r\n                    <label for=\"rePass\" class=\"required\" >Sandi Ulang</label>\r\n                    <p-password [(ngModel)]=\"rePassword\" #rePass=\"ngModel\" required [ngClass]=\"{'ng-dirty ng-invalid' : rePassword!=password || pass.errors?.['required'] && (rePass.dirty || touched || rePass.touched)}\"\r\n                    [toggleMask]=\"true\" [ngModelOptions]=\"{standalone: true}\"></p-password>\r\n                    <small *ngIf=\"rePass.errors?.['required'] && (rePass.dirty || rePass.touched || touched)\" class=\"p-error-empty text-left\"></small>\r\n                    <small *ngIf=\"rePassword != password && (rePass.dirty || rePass.touched || touched)\" style=\"color: red;\" class=\"p-error-empty text-left\"> password tidak sama.</small>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <ng-template pTemplate=\"footer\">\r\n        <btn-save (onClick)=\"onSave()\"></btn-save>\r\n    </ng-template>\r\n</p-dialog>"
        },
        {
            "name": "UserEditComponent",
            "id": "component-UserEditComponent-aa1d83c1215bbe5478c844a9de998b4fe9daa1daa0128d918022212e9f3797eca3496d9732d8549bb7e61fa1ae603dd52f3b97df59f6f48fda28c9c4c1155dd9",
            "file": "src/app/util/user/edit/user-edit.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-user-edit",
            "styleUrls": [
                "./user-edit.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./user-edit.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "formControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "loading",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "password",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "null",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "rePassword",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "null",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "touched",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "createForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getDetail",
                    "args": [
                        {
                            "name": "id",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSave",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "selectEmp",
                    "args": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { UntypedFormBuilder, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AuthenticationService } from 'src/app/core/service/authentication.service';\r\nimport { HelperService } from 'src/app/core/service/helper-service';\r\nimport { MessageBoxService } from 'src/app/core/service/message-box.service';\r\nimport { UserService } from '../service/user.service';\r\n\r\n@Component({\r\n  selector: 'app-user-edit',\r\n  templateUrl: './user-edit.component.html',\r\n  styleUrls: ['./user-edit.component.scss']\r\n})\r\nexport class UserEditComponent implements OnInit {\r\n  formControl;\r\n  password = null;\r\n  rePassword=null;\r\n  touched=false;\r\n  loading=true;\r\n  id;\r\n  \r\n  constructor(private formBuilder: UntypedFormBuilder,\r\n    private srv: UserService,\r\n    private auth:AuthenticationService,\r\n    private help:HelperService,\r\n    private route:ActivatedRoute,\r\n    private msg:MessageBoxService,\r\n    private router: Router) { }\r\n\r\n    ngOnInit(): void {\r\n      this.id = this.route.snapshot.paramMap.get('id');\r\n      this.createForm();\r\n      this.getDetail(this.id);\r\n    }\r\n  \r\n    getDetail(id){\r\n      this.loading = true;\r\n      this.srv.getOne(id).subscribe(res=>{\r\n        res.effBegin=res.effBegin?new Date(res.effBegin):null;\r\n        res.effEnd= res.effEnd?new Date(res.effEnd):null;\r\n        this.formControl.patchValue(res);\r\n        this.loading=false;\r\n      }, err => {\r\n        this.loading = false\r\n      })\r\n    }\r\n\r\n  createForm(): void {\r\n    this.formControl = this.formBuilder.group({\r\n      id:[''],\r\n      version:[''],\r\n      username: [{value:\"\",disabled:true}],\r\n      isActive:[true],\r\n      employee:[''],\r\n      effBegin:['',Validators.required],\r\n      effEnd:['',Validators.required],\r\n      email:['',[Validators.email,Validators.required]]\r\n    })\r\n  }\r\n  onSave(){\r\n    if(this.formControl.valid){\r\n      let body = this.help.formatDate(this.formControl.getRawValue());\r\n      this.srv.update(body).subscribe((res)=>{\r\n        this.msg.showSuccess(res);\r\n        this.router.navigate(['util/user'])\r\n      });\r\n    }else{\r\n      this.formControl.markAllAsTouched();\r\n      this.touched=true;\r\n    }\r\n  }\r\n  selectEmp(e){\r\n    this.formControl.patchValue({\r\n      employee:e\r\n    })\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./user-edit.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "UntypedFormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "srv",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "auth",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "help",
                        "type": "HelperService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "msg",
                        "type": "MessageBoxService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 20,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "UntypedFormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "srv",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "auth",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "help",
                        "type": "HelperService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "msg",
                        "type": "MessageBoxService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "\r\n<input type=\"text\"  style=\"opacity: 0;position: absolute;\">\r\n<input type=\"password\" style=\"opacity: 0;position: absolute;\">\r\n<div class=\"card\">\r\n    <div class=\"grid field\">\r\n        <div class=\"col-6 mt-2\">\r\n            <h5>Pengguna - Ubah</h5>\r\n        </div>\r\n        <div class=\"col-6\">\r\n            <div class=\"field text-right hide-mobile\">\r\n                <btn-cancel routeUrl=\"{{'util/user/'+id}}\"></btn-cancel>\r\n                <btn-update (onClick)=\"onSave()\"></btn-update>\r\n            </div>\r\n            <div class=\"field text-right hide-desktop\">\r\n                <btn-update (onClick)=\"onSave()\"></btn-update>\r\n            </div>\r\n        </div>\r\n    </div>\r\n        <div class=\"grid p-fluid\" [formGroup]=\"formControl\" *ngIf=\"!loading else skel\">\r\n            <div class=\"col-12 md:col-6\">\r\n                <div class=\"field\">\r\n                    <label for=\"employee\">Karyawan</label>\r\n                    <div>\r\n                        <app-lov uri=\"lov/employees\" label=\"Pilih Karyawan\" [value]=\"formControl.value?.employee?.id\" (selected)=\"selectEmp($event)\"></app-lov>\r\n                    </div>\r\n                </div>\r\n                <div class=\"field\">\r\n                    <label for=\"name\" >Nama Pengguna</label>\r\n                    <div>\r\n                        <input id=\"name\" type=\"text\" formControlName=\"username\" placeholder=\"Isi Nama\" pInputText>\r\n                        <app-error-field-helper [formControlKey]=\"formControl.get('username')\" ></app-error-field-helper>\r\n                    </div>\r\n                </div>\r\n                <div class=\"field\">\r\n                    <label for=\"surel\" class=\"required\">Email</label>\r\n                    <div>\r\n                        <input id=\"surel\" type=\"text\" formControlName=\"email\" placeholder=\"example@google.com\" pInputText [ngClass]=\"{'ng-dirty ng-invalid' : (formControl.get('email').touched || formControl.get('email').dirty ) &&\r\n                        !formControl.get('email').valid}\">\r\n                        <app-error-field-helper [formControlKey]=\"formControl.get('email')\" ></app-error-field-helper>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-12 md:col-6\">\r\n                <div class=\"field\">\r\n                    <label for=\"effBegin\" class=\"required\">Berlaku Dari</label>\r\n                    <div>\r\n                        <p-calendar id=\"effBegin\"  dateFormat=\"dd-mm-yy\" appendTo=\"body\" placeholder=\"Isi Tanggal Bergabung\" [ngClass]=\"{'ng-dirty ng-invalid' : (formControl.get('effBegin').touched || formControl.get('effBegin').dirty ) &&\r\n                        !formControl.get('effBegin').valid}\"\r\n                            formControlName=\"effBegin\"[showIcon]=\"true\">\r\n                        </p-calendar>\r\n                        <app-error-field-helper [formControlKey]=\"formControl.get('effBegin')\" ></app-error-field-helper>\r\n                    </div>\r\n                </div>\r\n                <div class=\"field\">\r\n                    <label for=\"effEnd\" class=\"required\">Berlaku Sampai</label>\r\n                    <div>\r\n                        <p-calendar id=\"effEnd\"  dateFormat=\"dd-mm-yy\" [minDate]=\"formControl.value.effBegin\" appendTo=\"body\" placeholder=\"Isi Tanggal Bergabung\" [ngClass]=\"{'ng-dirty ng-invalid' : (formControl.get('effEnd').touched || formControl.get('effEnd').dirty ) &&\r\n                        !formControl.get('effEnd').valid}\"\r\n                            formControlName=\"effEnd\"[showIcon]=\"true\">\r\n                        </p-calendar>\r\n                        <app-error-field-helper [formControlKey]=\"formControl.get('effEnd')\" ></app-error-field-helper>\r\n                    </div>\r\n                </div>\r\n                <div class=\"field\">\r\n                    <label for=\"active\" >Aktif</label>\r\n                    <div>\r\n                        <p-inputSwitch name=\"active\"  formControlName=\"isActive\"></p-inputSwitch>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n</div>\r\n\r\n\r\n<ng-template #skel>\r\n    <div class=\"custom-skeleton p-4\">\r\n        <p-skeleton width=\"100%\" height=\"150px\"></p-skeleton>\r\n    </div>\r\n</ng-template>"
        },
        {
            "name": "UserListComponent",
            "id": "component-UserListComponent-8f4ca4290cf018c920091c3096fbf42482d4f805fef23d56f7283d5d97d879b57535ffe739374ecbdbfab49321054b8977373bdb341f9ed318d3ae03d5619662",
            "file": "src/app/util/user/list/user-list.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-user-list",
            "styleUrls": [
                "./user-list.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./user-list.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "body",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "count",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "first",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "list",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "selected",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 29
                }
            ],
            "methodsClass": [
                {
                    "name": "act",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "aksi",
                    "args": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "deact",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getList",
                    "args": [
                        {
                            "name": "pi",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "pi",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onAdd",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onEdit",
                    "args": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onSearch",
                    "args": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onTableLazyLoad",
                    "args": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n    ChangeDetectionStrategy,\r\n    ChangeDetectorRef,\r\n    Component,\r\n    OnInit,\r\n} from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { PageInfo } from 'src/app/core/model/page-info';\r\nimport { MessageBoxService } from 'src/app/core/service/message-box.service';\r\nimport { UserService } from '../service/user.service';\r\n\r\n@Component({\r\n    selector: 'app-user-list',\r\n    templateUrl: './user-list.component.html',\r\n    styleUrls: ['./user-list.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class UserListComponent implements OnInit {\r\n    list = [];\r\n    count = 0;\r\n    first = 0;\r\n    constructor(\r\n        private router: Router,\r\n        private srv: UserService,\r\n        private cd: ChangeDetectorRef,\r\n        private msg: MessageBoxService\r\n    ) {}\r\n    loading = false;\r\n    selected = [];\r\n    body;\r\n    ngOnInit(): void {}\r\n\r\n    onSearch(e) {\r\n        this.body = e;\r\n        this.getList(new PageInfo(1, 10));\r\n    }\r\n    onTableLazyLoad(e) {\r\n        const page = e.first / e.rows + 1;\r\n        const limit = e.rows;\r\n        this.getList(new PageInfo(page, limit));\r\n    }\r\n    getList(pi) {\r\n        this.first = pi.page - 1;\r\n        this.loading = true;\r\n        this.list = [];\r\n        this.srv.getAll(pi, this.body).subscribe(\r\n            (res) => {\r\n                if (res) {\r\n                    this.loading = false;\r\n                    this.list = res.data;\r\n                    this.count = res.count;\r\n                    this.cd.detectChanges();\r\n                }\r\n            },\r\n            (err) => {\r\n                this.loading = false;\r\n                this.cd.detectChanges();\r\n            }\r\n        );\r\n    }\r\n    onAdd() {\r\n        this.router.navigate(['/util/user/add']);\r\n    }\r\n    aksi(e) {\r\n        if (e == 'add') {\r\n            this.onAdd();\r\n        } else if (e == 'activate') {\r\n            this.act();\r\n        } else if (e == 'deactivate') {\r\n            this.deact();\r\n        }\r\n    }\r\n    onEdit(e) {\r\n        this.router.navigate(['/util/user/' + e.id]);\r\n    }\r\n\r\n    act() {\r\n        this.srv.act(this.selected).subscribe((res) => {\r\n            this.msg.showSuccess(res);\r\n            this.selected = [];\r\n            this.getList(new PageInfo(1, 10));\r\n        });\r\n    }\r\n\r\n    deact() {\r\n        this.srv.deact(this.selected).subscribe((res) => {\r\n            this.msg.showSuccess(res);\r\n            this.selected = [];\r\n            this.getList(new PageInfo(1, 10));\r\n        });\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./user-list.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "srv",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "msg",
                        "type": "MessageBoxService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "srv",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "msg",
                        "type": "MessageBoxService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"card\">\r\n    <div class=\"grid field\">\r\n        <div class=\"col-6 mt-2\">\r\n            <h5>Daftar Pengguna</h5>\r\n        </div>\r\n        <div class=\"col-6\">\r\n            <div class=\"field text-right hide-mobile\">\r\n                <btn-multi-action [haveDeact]=\"true\" [haveAct]=\"true\" [selected]=\"selected\" (onClick)=\"aksi($event)\" ></btn-multi-action>\r\n                <btn-add (onClick)=\"onAdd()\"></btn-add>\r\n            </div>\r\n            <div class=\"field text-right hide-desktop\">\r\n                <btn-multi-action [haveDeact]=\"true\" [haveAct]=\"true\" [haveAdd]=\"true\" [selected]=\"selected\" (onClick)=\"aksi($event)\" ></btn-multi-action>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <p-table [value]=\"list\" [(first)]='first' [totalRecords]=\"count\" [lazy]=\"true\" (onLazyLoad)=\"onTableLazyLoad($event)\" dataKey=\"id\" [rows]=\"10\" [loading]=\"loading\" styleClass=\"p-datatable-gridlines\" [paginator]=\"true\" pageLinks=\"3\" responsiveLayout=\"scroll\"\r\n    [(selection)]=\"selected\">\r\n        <ng-template pTemplate=\"caption\">\r\n            <div class=\"justify-content-between flex-column sm:flex-row\">\r\n                <app-search [isFilter]=\"true\" (search)=\"onSearch($event)\"></app-search>\r\n            </div>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"header\">\r\n            <tr>\r\n                <th style=\"width: 3em\">\r\n                    <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\r\n                </th>\r\n                <th style=\"width: 3rem;\">\r\n                    <div class=\"flex justify-content-between align-items-center\">\r\n                        No\r\n                    </div>\r\n                </th>\r\n                <th style=\"width: 8rem\">\r\n                    <div class=\"flex justify-content-between align-items-center\">\r\n                        Nama Pengguna\r\n                    </div>\r\n                </th>\r\n                <th style=\"width: 8rem\">\r\n                    <div class=\"flex justify-content-between align-items-center\">\r\n                        Aplikasi\r\n                    </div>\r\n                </th>\r\n                <th style=\"width: 8rem\">\r\n                    <div class=\"flex justify-content-between align-items-center\">\r\n                        Berlaku Dari\r\n                    </div>\r\n                </th>\r\n                <th style=\"width: 8rem\">\r\n                    <div class=\"flex justify-content-between align-items-center\">\r\n                        Berlaku Sampai\r\n                    </div>\r\n                </th>\r\n                <th style=\"width: 3rem\">\r\n                    <div class=\"flex justify-content-between align-items-center\">\r\n                        Aktif\r\n                    </div>\r\n                </th>\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-data let-rowIndex=\"rowIndex\">\r\n            <tr [pSelectableRow]=\"data\">\r\n                <td>\r\n                    <p-tableCheckbox [value]=\"data\"></p-tableCheckbox>\r\n                </td>\r\n                <td (click)=\"onEdit(data)\" style=\"width: 3rem;\">\r\n                    {{rowIndex+1}}\r\n                </td>\r\n                <td (click)=\"onEdit(data)\" style=\"min-width: 12rem;\">\r\n                    {{data.username}}\r\n                </td>\r\n                <td (click)=\"onEdit(data)\" style=\"min-width: 12rem;\">\r\n                    {{data.applicationName}}\r\n                </td>\r\n                <td (click)=\"onEdit(data)\" style=\"min-width: 12rem;\">\r\n                    {{data.effBegin |formatDate}}\r\n                </td>\r\n                <td (click)=\"onEdit(data)\" style=\"min-width: 12rem;\">\r\n                    {{data.effEnd |formatDate}}\r\n                </td>\r\n                <td class=\"text-center\">\r\n                    <i class=\"pi\"\r\n                        [ngClass]=\"{'true-icon pi-check-circle text-green-500': data.activeAccount, 'false-icon pi-times-circle text-pink-500 ': !data.activeAccount}\"></i>\r\n                </td>\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"emptymessage\">\r\n            <tr>\r\n                <td class=\"text-center\" colspan=\"7\">No data found.</td>\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"loadingbody\">\r\n            <tr>\r\n                <td class=\"text-center\" colspan=\"7\">Loading data. Please wait.</td>\r\n            </tr>\r\n        </ng-template>\r\n    </p-table>\r\n</div>\r\n"
        },
        {
            "name": "UtilCompanyAddComponent",
            "id": "component-UtilCompanyAddComponent-53012167f0d9902491bc80c715da37717cef2a4a1dd06b68fccc0d31da1fff6ffbe0f72b915f368cbd684d5fa13b7f5fc335212eecd2be9b03851858c3c0454f",
            "file": "src/app/util/company/add/util-company-add.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-util-company-add",
            "styleUrls": [
                "./util-company-add.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./util-company-add.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "companyId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "formControl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "isNpwp",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "selected",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "uploadedFiles",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "createForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onFileChange",
                    "args": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 108,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onSave",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "selectCT",
                    "args": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 80,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectGender",
                    "args": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 101,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectReligion",
                    "args": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectScale",
                    "args": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 94,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { UntypedFormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthenticationService } from 'src/app/core/service/authentication.service';\r\nimport { HelperService } from 'src/app/core/service/helper-service';\r\nimport { MessageBoxService } from 'src/app/core/service/message-box.service';\r\nimport { UtilCompanyService } from '../service/util-company.service';\r\n\r\n@Component({\r\n    selector: 'app-util-company-add',\r\n    templateUrl: './util-company-add.component.html',\r\n    styleUrls: ['./util-company-add.component.scss'],\r\n})\r\nexport class UtilCompanyAddComponent implements OnInit {\r\n    formControl;\r\n    companyId;\r\n    selected = [];\r\n    uploadedFiles;\r\n    isNpwp;\r\n\r\n    constructor(\r\n        private formBuilder: UntypedFormBuilder,\r\n        private srv: UtilCompanyService,\r\n        private messageBoxService: MessageBoxService,\r\n        private auth: AuthenticationService,\r\n        private help: HelperService,\r\n        private msg: MessageBoxService,\r\n        private router: Router\r\n    ) {}\r\n\r\n    ngOnInit(): void {\r\n        this.companyId = this.auth.getSession().selectedCompanyId;\r\n        this.createForm();\r\n    }\r\n\r\n    createForm(): void {\r\n        this.formControl = this.formBuilder.group({\r\n            name: ['', Validators.required],\r\n            address: [''],\r\n            phone: [''],\r\n            fax: [''],\r\n            email: ['', [Validators.email, Validators.required]],\r\n            scale: ['',Validators.required],\r\n            companyType: ['', Validators.required],\r\n            ownerName: ['', Validators.required],\r\n            ownerAddress: [''],\r\n            ownerBirth: ['', Validators.required],\r\n            ownerGender: ['', Validators.required],\r\n            ownerNumberId: ['', Validators.required],\r\n            ownerEmail: ['', Validators.email],\r\n            ownerReligion: ['', Validators.required],\r\n            companyTaxNumber: [''],\r\n        });\r\n    }\r\n    onSave() {\r\n        if (this.formControl.valid) {\r\n            const formData: FormData = new FormData();\r\n\r\n            if (this.uploadedFiles) {\r\n                formData.append('logo', this.uploadedFiles);\r\n            }\r\n            let obj = this.formControl.getRawValue();\r\n            if(!this.isNpwp){\r\n                obj.companyTaxNumber=null;\r\n            }\r\n            formData.append(\r\n                'company',\r\n                JSON.stringify(\r\n                    this.help.formatDate(obj)\r\n                )\r\n            );\r\n            this.srv.save(formData).subscribe((res) => {\r\n                this.msg.showSuccess(res);\r\n                this.router.navigate(['util/company']);\r\n            });\r\n        } else {\r\n            this.formControl.markAllAsTouched();\r\n        }\r\n    }\r\n    selectCT(e) {\r\n        this.formControl.patchValue({\r\n            companyType: {\r\n                id: e.id,\r\n            },\r\n        });\r\n    }\r\n    selectReligion(e) {\r\n        this.formControl.patchValue({\r\n            ownerReligion: {\r\n                id: e.id,\r\n            },\r\n        });\r\n    }\r\n    selectScale(e) {\r\n        this.formControl.patchValue({\r\n            scale: {\r\n                id: e.id,\r\n            },\r\n        });\r\n    }\r\n    selectGender(e) {\r\n        this.formControl.patchValue({\r\n            ownerGender: {\r\n                id: e.id,\r\n            },\r\n        });\r\n    }\r\n    onFileChange(e) {\r\n        this.uploadedFiles = e;\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./util-company-add.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "UntypedFormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "srv",
                        "type": "UtilCompanyService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "messageBoxService",
                        "type": "MessageBoxService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "auth",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "help",
                        "type": "HelperService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "msg",
                        "type": "MessageBoxService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 19,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "UntypedFormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "srv",
                        "type": "UtilCompanyService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "messageBoxService",
                        "type": "MessageBoxService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "auth",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "help",
                        "type": "HelperService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "msg",
                        "type": "MessageBoxService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"card\">\r\n    <div class=\"grid field\">\r\n        <div class=\"col-6 mt-2\">\r\n            <h5>Perusahaan - Daftar</h5>\r\n        </div>\r\n        <div class=\"col-6\">\r\n            <div class=\"field text-right hide-mobile\">\r\n                <btn-kembali routeUrl=\"util/company\"></btn-kembali>\r\n                <btn-save (onClick)=\"onSave()\"></btn-save>\r\n            </div>\r\n            <div class=\"field text-right hide-desktop\">\r\n                <btn-save (onClick)=\"onSave()\"></btn-save>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <ng-container [formGroup]=\"formControl\">\r\n        <div class=\"grid p-fluid\">\r\n            <div class=\"col-12 md:col-6\">\r\n                <div class=\"field\">\r\n                    <label for=\"name\" class=\"required\">Nama Perusahaan</label>\r\n                    <div>\r\n                        <input id=\"name\" type=\"text\" formControlName=\"name\" placeholder=\"Isi Nama Perusahaan\" pInputText\r\n                            [ngClass]=\"{'ng-dirty ng-invalid' : (formControl.get('name').touched || formControl.get('name').dirty ) &&\r\n                        !formControl.get('name').valid}\">\r\n                        <app-error-field-helper [formControlKey]=\"formControl.get('name')\"></app-error-field-helper>\r\n                    </div>\r\n                </div>\r\n                <div class=\"field\">\r\n                    <label for=\"jenis-usaha\" class=\"required\">Jenis Usaha</label>\r\n                    <div>\r\n                        <app-lov uri=\"lov/company-types\" label=\"Pilih Tipe Perusahaan\" (selected)=\"selectCT($event)\"\r\n                            [ngClass]=\"{'ng-dirty ng-invalid' : (formControl.get('companyType').touched || formControl.get('companyType').dirty ) &&\r\n                        !formControl.get('companyType').valid}\"></app-lov>\r\n                        <app-error-field-helper [formControlKey]=\"formControl.get('companyType')\">\r\n                        </app-error-field-helper>\r\n                    </div>\r\n                </div>\r\n                <div class=\"field\">\r\n                    <label for=\"scale\" class=\"required\">Jumlah Karyawan</label>\r\n                    <div>\r\n                        <app-lov uri=\"lov/company-scales\" label=\"Pilih Jumlah Karyawan\" (selected)=\"selectScale($event)\"\r\n                            [ngClass]=\"{'ng-dirty ng-invalid' : (formControl.get('scale').touched || formControl.get('scale').dirty ) &&\r\n                        !formControl.get('scale').valid}\"></app-lov>\r\n                        <app-error-field-helper [formControlKey]=\"formControl.get('scale')\">\r\n                        </app-error-field-helper>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"field\">\r\n                    <label for=\"address\">Alamat Perusahaan</label>\r\n                    <div>\r\n                        <textarea id=\"address\" class=\"custom-input\" formControlName=\"address\"\r\n                            placeholder=\"Isi Alamat Perusahaan\" rows=\"4\" cols=\"33\" pInputTextarea\r\n                            autoResize=\"autoResize\" [ngClass]=\"{'ng-dirty ng-invalid' : (formControl.get('address').touched || formControl.get('address').dirty ) &&\r\n                        !formControl.get('address').valid}\"></textarea>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"field\">\r\n                    <label for=\"npwp\">NPWP</label>\r\n                    <div>\r\n                        <p-inputSwitch name=\"npwp\" [(ngModel)]=\"isNpwp\" [ngModelOptions]=\"{standalone: true}\">\r\n                        </p-inputSwitch>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"field\" *ngIf=\"isNpwp\">\r\n                    <label for=\"companyTaxNumber\">No. NPWP</label>\r\n                    <div>\r\n                        <p-inputMask styleClass=\"label-custom-form custom-input\" formControlName=\"companyTaxNumber\"\r\n                            unmask=\"true\" mask=\"99.999.999.9-999-999\"\r\n                            [ngClass]=\"{'ng-dirty ng-invalid' : (formControl.get('companyTaxNumber').touched || formControl.get('companyTaxNumber').dirty ) && !formControl.get('companyTaxNumber').valid}\">\r\n                        </p-inputMask>\r\n                        <app-error-field-helper [formControlKey]=\"formControl.get('companyTaxNumber')\">\r\n                        </app-error-field-helper>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-12 md:col-6\">\r\n\r\n                <div class=\"field\">\r\n                    <label for=\"phone\">Telpon</label>\r\n                    <div>\r\n                        <input id=\"phone\" type=\"text\" placeholder=\"Isi No Telpon\" onlyNumber formControlName=\"phone\"\r\n                            pInputText [ngClass]=\"{'ng-dirty ng-invalid' : (formControl.get('phone').touched || formControl.get('phone').dirty ) &&\r\n                        !formControl.get('phone').valid}\">\r\n                    </div>\r\n                </div>\r\n                <div class=\"field\">\r\n                    <label for=\"fax\">Fax</label>\r\n                    <div>\r\n                        <input id=\"fax\" type=\"text\" onlyNumber placeholder=\"Isi No Fax\" formControlName=\"fax\" pInputText\r\n                            [ngClass]=\"{'ng-dirty ng-invalid' : (formControl.get('fax').touched || formControl.get('fax').dirty ) &&\r\n                        !formControl.get('fax').valid}\">\r\n                    </div>\r\n                </div>\r\n                <div class=\"field\">\r\n                    <label for=\"email\" class=\"required\">Email</label>\r\n                    <div>\r\n                        <input id=\"email\" type=\"email\" formControlName=\"email\" placeholder=\"Isi Email Perusahaan\"\r\n                            pInputText [ngClass]=\"{'ng-dirty ng-invalid' : (formControl.get('email').touched || formControl.get('email').dirty ) &&\r\n                        !formControl.get('email').valid}\">\r\n                        <app-error-field-helper [formControlKey]=\"formControl.get('email')\"></app-error-field-helper>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"field\">\r\n                    <label for=\"logo\">Logo</label>\r\n                    <div>\r\n                        <app-linov-upload [isImage]=\"true\" (onChange)=\"onFileChange($event)\"></app-linov-upload>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"grid field\">\r\n            <div class=\"col-12 border-bottom-1 mt-2\">\r\n                <h6>{{ isNpwp === true ? 'Detil Admin' : 'Detil Pemilik'}} </h6>\r\n            </div>\r\n        </div>\r\n        <div class=\"grid p-fluid\">\r\n            <div class=\"col-12 md:col-6\">\r\n                <div class=\"field\">\r\n                    <label for=\"numberId\" class=\"required\">No. KTP</label>\r\n                    <div>\r\n                        <input id=\"numberId\" onlyNumber type=\"text\" placeholder=\"Isi No KTP\"\r\n                            formControlName=\"ownerNumberId\" pInputText [ngClass]=\"{'ng-dirty ng-invalid' : (formControl.get('ownerNumberId').touched || formControl.get('ownerNumberId').dirty ) &&\r\n                        !formControl.get('ownerNumberId').valid}\">\r\n                        <app-error-field-helper [formControlKey]=\"formControl.get('ownerNumberId')\">\r\n                        </app-error-field-helper>\r\n                    </div>\r\n                </div>\r\n                <div class=\"field\">\r\n                    <label for=\"own-name\" class=\"required\">Nama</label>\r\n                    <div>\r\n                        <input id=\"own-name\" type=\"text\" formControlName=\"ownerName\" placeholder=\"Isi Nama Pemilik\"\r\n                            pInputText [ngClass]=\"{'ng-dirty ng-invalid' : (formControl.get('ownerName').touched || formControl.get('ownerName').dirty ) &&\r\n                        !formControl.get('ownerName').valid}\">\r\n                        <app-error-field-helper [formControlKey]=\"formControl.get('ownerName')\">\r\n                        </app-error-field-helper>\r\n                    </div>\r\n                </div>\r\n                <div class=\"field\">\r\n                    <label for=\"birthDate\" class=\"required\">Tanggal Lahir</label>\r\n                    <div>\r\n\r\n                        <p-calendar id=\"birthDate\" dateFormat=\"dd-mm-yy\" appendTo=\"body\" [ngClass]=\"{'ng-dirty ng-invalid' : (formControl.get('ownerBirth').touched || formControl.get('ownerBirth').dirty ) &&\r\n                        !formControl.get('ownerBirth').valid}\" formControlName=\"ownerBirth\" [showIcon]=\"true\">\r\n                        </p-calendar>\r\n                        <app-error-field-helper [formControlKey]=\"formControl.get('ownerBirth')\">\r\n                        </app-error-field-helper>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"field\">\r\n                    <label for=\"own-address\">Alamat</label>\r\n                    <div>\r\n                        <textarea id=\"own-address\" class=\"custom-input\" formControlName=\"ownerAddress\"\r\n                            placeholder=\"Isi Alamat Pemilik\" rows=\"4\" cols=\"33\" pInputTextarea\r\n                            autoResize=\"autoResize\"></textarea>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-12 md:col-6\">\r\n                <div class=\"field\">\r\n                    <label for=\"gender\" class=\"required\">Jenis Kelamin</label>\r\n                    <div>\r\n                        <app-lov uri=\"lov/genders\" label=\"Pilih Jenis Kelamin\" (selected)=\"selectGender($event)\"\r\n                            [ngClass]=\"{'ng-dirty ng-invalid' : (formControl.get('ownerGender').touched || formControl.get('ownerGender').dirty ) &&\r\n                        !formControl.get('ownerGender').valid}\"></app-lov>\r\n                        <app-error-field-helper [formControlKey]=\"formControl.get('ownerGender')\">\r\n                        </app-error-field-helper>\r\n                    </div>\r\n                </div>\r\n                <div class=\"field\">\r\n                    <label for=\"ownerReligion\" class=\"required\">Agama</label>\r\n                    <div>\r\n                        <app-lov uri=\"lov/religions\" label=\"Pilih Agama\" (selected)=\"selectReligion($event)\" [ngClass]=\"{'ng-dirty ng-invalid' : (formControl.get('ownerReligion').touched || formControl.get('ownerReligion').dirty ) &&\r\n                        !formControl.get('ownerReligion').valid}\"></app-lov>\r\n                        <app-error-field-helper [formControlKey]=\"formControl.get('ownerReligion')\">\r\n                        </app-error-field-helper>\r\n                    </div>\r\n                </div>\r\n                <div class=\"field\">\r\n                    <label for=\"own-email\">Email</label>\r\n                    <div>\r\n                        <input id=\"own-email\" type=\"email\" formControlName=\"ownerEmail\" pInputText\r\n                            placeholder=\"Isi Email Pemilik\">\r\n                        <app-error-field-helper [formControlKey]=\"formControl.get('ownerEmail')\">\r\n                        </app-error-field-helper>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </ng-container>\r\n</div>"
        },
        {
            "name": "UtilCompanyDetailComponent",
            "id": "component-UtilCompanyDetailComponent-34f6cb3ef528c856df35f6512de294b605a24f9503a2844265e9bdd828c6f710bd455b0534836c8c1f94e333a09bbe2780704045c5af6ecbc40649bb76b59818",
            "file": "src/app/util/company/detail/util-company-detail.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-util-company-detail",
            "styleUrls": [
                "./util-company-detail.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./util-company-detail.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "bankForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UntypedFormGroup",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "companyId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "form",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UntypedFormGroup",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "formGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UntypedFormGroup",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "imgSrc",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "isNpwp",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "isShow",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "isShowExtend",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "isShowTermit",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "loading",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "selected",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [
                {
                    "name": "click",
                    "args": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 127,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "createForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getDetail",
                    "args": [
                        {
                            "name": "id",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleChange",
                    "args": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 191,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onAdd",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 117,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onDelete",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 120,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onEdit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 142,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSave",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 150,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSaveExtend",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 161,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSaveTermit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 175,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "selectCompSubs",
                    "args": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 146,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { UntypedFormGroup, UntypedFormBuilder, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { id } from 'date-fns/locale';\r\nimport { HelperService } from 'src/app/core/service/helper-service';\r\nimport { MessageBoxService } from 'src/app/core/service/message-box.service';\r\nimport { UtilCompanyService } from '../service/util-company.service';\r\n\r\n@Component({\r\n    selector: 'app-util-company-detail',\r\n    templateUrl: './util-company-detail.component.html',\r\n    styleUrls: ['./util-company-detail.component.scss'],\r\n})\r\nexport class UtilCompanyDetailComponent implements OnInit {\r\n    loading = true;\r\n    formGroup: UntypedFormGroup;\r\n    companyId;\r\n    imgSrc;\r\n    selected = [];\r\n    isShow = false;\r\n    bankForm: UntypedFormGroup;\r\n    form: UntypedFormGroup;\r\n    isShowExtend = false;\r\n    isShowTermit = false;\r\n    isNpwp;\r\n\r\n    constructor(\r\n        private formBuilder: UntypedFormBuilder,\r\n        private srv: UtilCompanyService,\r\n        private messageBoxService: MessageBoxService,\r\n        private route: ActivatedRoute,\r\n        private help: HelperService,\r\n        private router: Router\r\n    ) {}\r\n\r\n    ngOnInit(): void {\r\n        this.companyId = this.route.snapshot.paramMap.get('id');\r\n        this.createForm();\r\n        this.getDetail(this.companyId);\r\n    }\r\n    getDetail(id) {\r\n        this.loading = true;\r\n        this.srv.getOne(id).subscribe(\r\n            (res) => {\r\n                res.effBegin = res.effBegin ? new Date(res.effBegin) : null;\r\n                res.effEnd = res.effEnd ? new Date(res.effEnd) : null;\r\n                if (res.owner) {\r\n                    res.owner.birthDate = res.owner.birthDate\r\n                        ? new Date(res.owner.birthDate)\r\n                        : null;\r\n                }\r\n\r\n                if (res.companyTaxNumber === null) {\r\n                    this.isNpwp = false;\r\n                } else {\r\n                    this.isNpwp = true;\r\n                }\r\n\r\n                this.formGroup.patchValue(res);\r\n\r\n                this.imgSrc =\r\n                    'data:image/' +\r\n                    res.fileLogo.ext +\r\n                    ';base64,' +\r\n                    res.fileLogo.base;\r\n                this.loading = false;\r\n            },\r\n            (err) => {\r\n                this.loading = false;\r\n            }\r\n        );\r\n    }\r\n\r\n    createForm(): void {\r\n        this.formGroup = this.formBuilder.group({\r\n            code: [{ value: '', disabled: true }],\r\n            name: [{ value: '', disabled: true }],\r\n            address: [{ value: '', disabled: true }],\r\n            effBegin: [{ value: '', disabled: true }],\r\n            effEnd: [{ value: '', disabled: true }],\r\n            phone: [{ value: '', disabled: true }],\r\n            fax: [{ value: '', disabled: true }],\r\n            email: [{ value: '', disabled: true }],\r\n            scale: [{ value: '', disabled: true }],\r\n            companyType: [''],\r\n            fileLogo: [''],\r\n            companyBank: [''],\r\n            companyTaxNumber: [{ value: null, disabled: true }],\r\n            owner: this.formBuilder.group({\r\n                name: [{ value: '', disabled: true }],\r\n                address: [{ value: '', disabled: true }],\r\n                birthDate: [{ value: '', disabled: true }],\r\n                gender: [{ value: '', disabled: true }],\r\n                numberId: [{ value: '', disabled: true }],\r\n                email: [{ value: '', disabled: true }],\r\n                religion: [{ value: '', disabled: true }],\r\n            }),\r\n        });\r\n        this.bankForm = this.formBuilder.group({\r\n            bankName: ['', Validators.required],\r\n            accountName: ['', Validators.required],\r\n            accountNumber: ['', Validators.required],\r\n            company: {\r\n                id: this.companyId,\r\n            },\r\n        });\r\n        this.form = this.formBuilder.group({\r\n            date: ['', Validators.required],\r\n            companySubscription: [\r\n                {\r\n                    id: ['', Validators.required],\r\n                },\r\n            ],\r\n            compId: [[this.companyId]],\r\n        });\r\n    }\r\n    onAdd() {\r\n        this.isShow = true;\r\n    }\r\n    onDelete() {\r\n        this.srv.deleteBank(this.selected).subscribe((res) => {\r\n            this.messageBoxService.showSuccess(res);\r\n            this.getDetail(this.companyId);\r\n            this.selected = [];\r\n        });\r\n    }\r\n    click(e) {\r\n        if (e == 'edit') {\r\n            this.onEdit();\r\n        } else if (e == 'extend') {\r\n            this.isShowExtend = true;\r\n            this.form.get('date').reset();\r\n        } else if (e == 'terminate') {\r\n            this.isShowTermit = true;\r\n            this.form.get('date').reset();\r\n        } else if (e == 'add') {\r\n            this.onAdd();\r\n        } else if (e == 'delete') {\r\n            this.onDelete();\r\n        }\r\n    }\r\n    onEdit() {\r\n        this.router.navigate(['/util/company/edit/' + this.companyId]);\r\n    }\r\n\r\n    selectCompSubs(e) {\r\n        this.form.get('companySubscription').patchValue({ id: e.id });\r\n    }\r\n\r\n    onSave() {\r\n        if (this.bankForm.valid) {\r\n            this.srv.saveBank(this.bankForm.getRawValue()).subscribe((res) => {\r\n                this.messageBoxService.showSuccess(res);\r\n                this.isShow = false;\r\n                this.getDetail(this.companyId);\r\n            });\r\n        } else {\r\n            this.bankForm.markAllAsTouched();\r\n        }\r\n    }\r\n    onSaveExtend() {\r\n        if (this.form.valid) {\r\n            const data = this.form.getRawValue();\r\n            data.date = this.help.formatDate(data.date);\r\n\r\n            this.srv.extend(data).subscribe((res) => {\r\n                this.messageBoxService.showSuccess(res);\r\n                this.isShowExtend = false;\r\n                this.getDetail(this.companyId);\r\n            });\r\n        } else {\r\n            this.form.markAllAsTouched();\r\n        }\r\n    }\r\n    onSaveTermit() {\r\n        if (this.form.valid) {\r\n            const data = this.form.getRawValue();\r\n            data.date = this.help.formatDate(data.date);\r\n            data.companySubscription = null;\r\n\r\n            this.srv.terminate(data).subscribe((res) => {\r\n                this.messageBoxService.showSuccess(res);\r\n                this.isShowTermit = false;\r\n                this.getDetail(this.companyId);\r\n            });\r\n        } else {\r\n            this.form.markAllAsTouched();\r\n        }\r\n    }\r\n\r\n    handleChange(e) {\r\n        if (e.checked) {\r\n            this.formGroup.get('companyTaxNumber').enable();\r\n        } else {\r\n            this.formGroup.get('companyTaxNumber').disable();\r\n            this.formGroup.get('companyTaxNumber').reset();\r\n        }\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./util-company-detail.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "UntypedFormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "srv",
                        "type": "UtilCompanyService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "messageBoxService",
                        "type": "MessageBoxService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "help",
                        "type": "HelperService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 25,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "UntypedFormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "srv",
                        "type": "UtilCompanyService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "messageBoxService",
                        "type": "MessageBoxService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "help",
                        "type": "HelperService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"card\">\r\n    <div class=\"grid field\">\r\n        <div class=\"col-6 mt-2\">\r\n            <h5>Perusahaan - Detil</h5>\r\n        </div>\r\n\r\n        <div class=\"col-6\">\r\n            <div class=\"field text-right hide-mobile\">\r\n                <btn-kembali routeUrl=\"util/company\"></btn-kembali>\r\n                <btn-multi-action [haveEdit]=\"true\" [haveExtend]=\"true\" [haveTerminate]=\"true\" [multiple]=\"false\"\r\n                    (onClick)=\"click($event)\"></btn-multi-action>\r\n            </div>\r\n            <div class=\"field text-right hide-desktop\">\r\n                <btn-multi-action [haveEdit]=\"true\" [haveExtend]=\"true\" [haveTerminate]=\"true\" [multiple]=\"false\"\r\n                    (onClick)=\"click($event)\"></btn-multi-action>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"grid field\">\r\n        <div class=\"col-12 border-bottom-1 mt-2\">\r\n            <h6>Detil Perusahaan</h6>\r\n        </div>\r\n    </div>\r\n    <ng-container [formGroup]=\"formGroup\">\r\n        <div class=\"grid p-fluid\" *ngIf=\"!loading else skel\">\r\n            <div class=\"col-12 md:col-6\">\r\n                <div class=\"field\">\r\n                    <label for=\"code\">Kode</label>\r\n                    <div>\r\n                        <input id=\"code\" type=\"text\" formControlName=\"code\" pInputText>\r\n                    </div>\r\n                </div>\r\n                <div class=\"field\">\r\n                    <label for=\"name\">Nama Perusahaan</label>\r\n                    <div>\r\n                        <input id=\"name\" type=\"text\" formControlName=\"name\" pInputText [ngClass]=\"{'ng-dirty ng-invalid' : (formGroup.get('name').touched || formGroup.get('name').dirty ) &&\r\n                        !formGroup.get('name').valid}\">\r\n                    </div>\r\n                </div>\r\n                <div class=\"field\">\r\n                    <label for=\"name\">Jenis Usaha</label>\r\n                    <div>\r\n                        <input id=\"name\" type=\"text\" disabled [value]=\"formGroup.value.companyType.valData\" pInputText\r\n                            [ngClass]=\"{'ng-dirty ng-invalid' : (formGroup.get('name').touched || formGroup.get('name').dirty ) &&\r\n                        !formGroup.get('name').valid}\">\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"field\">\r\n                    <label for=\"effBegin\">Bergabung</label>\r\n                    <div>\r\n                        <p-calendar id=\"effBegin\" dateFormat=\"dd-mm-yy\" appendTo=\"body\" formControlName=\"effBegin\"\r\n                            [showIcon]=\"true\">\r\n                        </p-calendar>\r\n                    </div>\r\n                </div>\r\n                <div class=\"field\">\r\n                    <label for=\"effEnd\">Berlaku Sampai</label>\r\n                    <div>\r\n                        <p-calendar id=\"effEnd\" dateFormat=\"dd-mm-yy\" appendTo=\"body\" formControlName=\"effEnd\"\r\n                            [showIcon]=\"true\">\r\n                        </p-calendar>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"field\">\r\n                    <label for=\"address\">Alamat Perusahaan</label>\r\n                    <div>\r\n                        <textarea id=\"address\" class=\"custom-input\" formControlName=\"address\" rows=\"4\" cols=\"33\"\r\n                            pInputTextarea autoResize=\"autoResize\" [ngClass]=\"{'ng-dirty ng-invalid' : (formGroup.get('address').touched || formGroup.get('address').dirty ) &&\r\n                        !formGroup.get('address').valid}\"></textarea>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"field\" *ngIf=\"isNpwp\">\r\n                    <label for=\"companyTaxNumber\">No. NPWP</label>\r\n                    <div>\r\n                        <p-inputMask styleClass=\"label-custom-form custom-input\" formControlName=\"companyTaxNumber\"\r\n                            unmask=\"true\" mask=\"99.999.999.9-999-999\"\r\n                            [ngClass]=\"{'ng-dirty ng-invalid' : (formGroup.get('companyTaxNumber').touched || formGroup.get('companyTaxNumber').dirty ) && !formGroup.get('companyTaxNumber').valid}\">\r\n                        </p-inputMask>\r\n                        <app-error-field-helper [formControlKey]=\"formGroup.get('companyTaxNumber')\">\r\n                        </app-error-field-helper>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-12 md:col-6\">\r\n                <div class=\"field\">\r\n                    <label for=\"scale\">Jumlah Karyawan</label>\r\n                    <div>\r\n                        <input id=\"scale\" type=\"text\" formControlName=\"scale\" pInputText [ngClass]=\"{'ng-dirty ng-invalid' : (formGroup.get('scale').touched || formGroup.get('scale').dirty ) &&\r\n                        !formGroup.get('scale').valid}\">\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"field\">\r\n                    <label for=\"phone\">Telpon</label>\r\n                    <div>\r\n                        <input id=\"phone\" type=\"text\" formControlName=\"phone\" pInputText [ngClass]=\"{'ng-dirty ng-invalid' : (formGroup.get('phone').touched || formGroup.get('phone').dirty ) &&\r\n                        !formGroup.get('phone').valid}\">\r\n                    </div>\r\n                </div>\r\n                <div class=\"field\">\r\n                    <label for=\"fax\">Fax</label>\r\n                    <div>\r\n                        <input id=\"fax\" type=\"text\" formControlName=\"fax\" pInputText [ngClass]=\"{'ng-dirty ng-invalid' : (formGroup.get('fax').touched || formGroup.get('fax').dirty ) &&\r\n                        !formGroup.get('fax').valid}\">\r\n                    </div>\r\n                </div>\r\n                <div class=\"field\">\r\n                    <label for=\"email\">Email</label>\r\n                    <div>\r\n                        <input id=\"email\" type=\"text\" formControlName=\"email\" pInputText [ngClass]=\"{'ng-dirty ng-invalid' : (formGroup.get('email').touched || formGroup.get('email').dirty ) &&\r\n                        !formGroup.get('email').valid}\">\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"field\">\r\n                    <label for=\"logo\">Logo</label>\r\n                    <div>\r\n                        <img [src]=\"imgSrc\" style='width: 75%' />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"grid field\">\r\n            <div class=\"col-12 border-bottom-1 mt-2\">\r\n                <h6>{{ isNpwp === true ? 'Detil Admin' : 'Detil Pemilik'}}</h6>\r\n            </div>\r\n        </div>\r\n        <div class=\"grid p-fluid\" formGroupName=\"owner\" *ngIf=\"!loading else skel\">\r\n            <div class=\"col-12 md:col-6\">\r\n                <div class=\"field\">\r\n                    <label for=\"numberId\">No. KTP</label>\r\n                    <div>\r\n                        <input id=\"numberId\" type=\"text\" formControlName=\"numberId\" pInputText>\r\n                    </div>\r\n                </div>\r\n                <div class=\"field\">\r\n                    <label for=\"own-name\">Nama</label>\r\n                    <div>\r\n                        <input id=\"own-name\" type=\"text\" formControlName=\"name\" pInputText>\r\n                    </div>\r\n                </div>\r\n                <div class=\"field\">\r\n                    <label for=\"birthDate\">Tanggal Lahir</label>\r\n                    <div>\r\n\r\n                        <p-calendar id=\"birthDate\" dateFormat=\"dd-mm-yy\" appendTo=\"body\" formControlName=\"birthDate\"\r\n                            [showIcon]=\"true\">\r\n                        </p-calendar>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"field\">\r\n                    <label for=\"own-address\">Alamat</label>\r\n                    <div>\r\n                        <textarea id=\"own-address\" class=\"custom-input\" formControlName=\"address\" rows=\"4\" cols=\"33\"\r\n                            pInputTextarea autoResize=\"autoResize\"></textarea>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-12 md:col-6\">\r\n                <div class=\"field\">\r\n                    <label for=\"gender\">Jenis Kelamin</label>\r\n                    <div>\r\n                        <input id=\"gender\" type=\"text\" formControlName=\"gender\" pInputText>\r\n                    </div>\r\n                </div>\r\n                <div class=\"field\">\r\n                    <label for=\"religion\">Agama</label>\r\n                    <div>\r\n                        <input id=\"religion\" type=\"text\" formControlName=\"religion\" pInputText>\r\n                    </div>\r\n                </div>\r\n                <div class=\"field\">\r\n                    <label for=\"own-email\">Email</label>\r\n                    <div>\r\n                        <input id=\"own-email\" type=\"text\" formControlName=\"email\" pInputText>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"grid field mt-2\">\r\n            <div class=\"col-6\">\r\n                <h6>Daftar Bank Perusahaan</h6>\r\n            </div>\r\n            <div class=\"col-6\">\r\n                <div class=\"field text-right hide-mobile\">\r\n                    <btn-delete [selected]=\"selected\" (onClick)=\"onDelete()\"></btn-delete>\r\n                    <btn-add (onClick)=\"onAdd()\"></btn-add>\r\n                </div>\r\n                <div class=\"field text-right hide-desktop\">\r\n                    <btn-multi-action [haveAdd]=\"true\" [haveDel]=\"true\" [selected]=\"selected\" (onClick)=\"click($event)\">\r\n                    </btn-multi-action>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-12\">\r\n            <p-table [value]=\"formGroup.value.companyBank\" [(selection)]=\"selected\" styleClass=\"p-datatable-gridlines\"\r\n                responsiveLayout=\"scroll\">\r\n                <ng-template pTemplate=\"header\">\r\n                    <tr>\r\n                        <th style=\"width: 3em\">\r\n                            <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\r\n                        </th>\r\n                        <th>\r\n                            <div class=\"flex justify-content-between align-items-center\">\r\n                                No\r\n                            </div>\r\n                        </th>\r\n                        <th>\r\n                            <div class=\"flex justify-content-between align-items-center\">\r\n                                Nama Bank\r\n                            </div>\r\n                        </th>\r\n                        <th>\r\n                            <div class=\"flex justify-content-between align-items-center\">\r\n                                Nama Akun\r\n                            </div>\r\n                        </th>\r\n                        <th>\r\n                            <div class=\"flex justify-content-between align-items-center\">\r\n                                Nomor Akun\r\n                            </div>\r\n                        </th>\r\n                    </tr>\r\n                </ng-template>\r\n                <ng-template pTemplate=\"body\" let-data let-rowIndex=\"rowIndex\">\r\n                    <tr [pSelectableRow]=\"data\">\r\n                        <td>\r\n                            <p-tableCheckbox [value]=\"data\"></p-tableCheckbox>\r\n                        </td>\r\n                        <td style=\"width: 3rem;\">\r\n                            {{rowIndex+1}}\r\n                        </td>\r\n                        <td style=\"min-width: 12rem;\">\r\n                            {{data.bankName}}\r\n                        </td>\r\n                        <td style=\"min-width: 12rem;\">\r\n                            {{data.accountName}}\r\n                        </td>\r\n                        <td style=\"min-width: 12rem;\">\r\n                            {{data.accountNumber}}\r\n                        </td>\r\n                    </tr>\r\n                </ng-template>\r\n                <ng-template pTemplate=\"emptymessage\">\r\n                    <tr>\r\n                        <td class=\"text-center\" colspan=\"5\">No data found.</td>\r\n                    </tr>\r\n                </ng-template>\r\n                <ng-template pTemplate=\"loadingbody\">\r\n                    <tr>\r\n                        <td class=\"text-center\" colspan=\"5\">Loading data. Please wait.</td>\r\n                    </tr>\r\n                </ng-template>\r\n            </p-table>\r\n        </div>\r\n    </ng-container>\r\n    <ng-template #skel>\r\n        <div class=\"custom-skeleton p-4\">\r\n            <p-skeleton width=\"100%\" height=\"150px\"></p-skeleton>\r\n        </div>\r\n    </ng-template>\r\n</div>\r\n\r\n<p-dialog header=\"Tambah Bank\" [(visible)]=\"isShow\" modal=\"modal\" showEffect=\"fade\" [contentStyle]=\"{'overflow-y': 'auto', 'overflow-x': 'hidden', \r\n'max-height': '80vh','min-height':'250px'}\" [style]=\"{width: '45vw'}\" [breakpoints]=\"{'960px': '75vw'}\">\r\n    <div class=\"grid p-fluid\" [formGroup]=\"bankForm\">\r\n        <div class=\"col-12 md:col-6\">\r\n            <div class=\"field\">\r\n                <label for=\"bankName\" class=\"required\">Nama Bank</label>\r\n                <div>\r\n                    <input id=\"bankName\" type=\"text\" formControlName=\"bankName\" placeholder=\"Isi Nama Bank\" pInputText\r\n                        [ngClass]=\"{'ng-dirty ng-invalid' : (bankForm.get('bankName').touched || bankForm.get('bankName').dirty ) &&\r\n                        !bankForm.get('bankName').valid}\">\r\n                    <app-error-field-helper [formControlKey]=\"bankForm.get('bankName')\"></app-error-field-helper>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"field\">\r\n                <label for=\"accountName\" class=\"required\">Nama Akun</label>\r\n                <div>\r\n                    <input id=\"accountName\" type=\"text\" formControlName=\"accountName\" placeholder=\"Isi Nama Akun\"\r\n                        pInputText [ngClass]=\"{'ng-dirty ng-invalid' : (bankForm.get('accountName').touched || bankForm.get('accountName').dirty ) &&\r\n                        !bankForm.get('accountName').valid}\">\r\n                    <app-error-field-helper [formControlKey]=\"bankForm.get('accountName')\"></app-error-field-helper>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"field\">\r\n                <label for=\"accountNumber\" class=\"required\">No Akun</label>\r\n                <div>\r\n                    <input id=\"accountNumber\" onlyNumber type=\"text\" formControlName=\"accountNumber\"\r\n                        placeholder=\"Isi Nomor Akun\" pInputText [ngClass]=\"{'ng-dirty ng-invalid' : (bankForm.get('accountNumber').touched || bankForm.get('accountNumber').dirty ) &&\r\n                        !bankForm.get('accountNumber').valid}\">\r\n                    <app-error-field-helper [formControlKey]=\"bankForm.get('accountNumber')\"></app-error-field-helper>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <ng-template pTemplate=\"footer\">\r\n        <btn-save (onClick)=\"onSave()\"></btn-save>\r\n    </ng-template>\r\n</p-dialog>\r\n\r\n<p-dialog header=\"Perpanjang\" [(visible)]=\"isShowExtend\" *ngIf=\"isShowExtend\" modal=\"modal\" showEffect=\"fade\"\r\n    [contentStyle]=\"{'overflow-y': 'auto', 'overflow-x': 'hidden', \r\n'max-height': '80vh','min-height':'250px'}\" [style]=\"{width: '50vw'}\" [breakpoints]=\"{'960px': '75vw'}\">\r\n    <div [formGroup]=\"form\">\r\n        <div class=\"grid p-fluid\">\r\n            <div class=\"col-12 md:col-6 \">\r\n                <div class=\"field\">\r\n                    <label for=\"extDate\" class=\"required\">Sampai Tanggal</label>\r\n                    <div>\r\n                        <p-calendar id=\"extDate\" dateFormat=\"dd-mm-yy\" appendTo=\"body\"\r\n                            [minDate]=\"formGroup.get('effEnd').value\" formControlName=\"date\" [showIcon]=\"true\"\r\n                            [ngClass]=\"{'ng-dirty ng-invalid' : (form.get('date').touched || form.get('date').dirty ) &&\r\n                            !form.get('date').valid}\">\r\n                        </p-calendar>\r\n                        <app-error-field-helper [formControlKey]=\"form.get('date')\"></app-error-field-helper>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-12 md:col-6 \">\r\n                <div class=\"field\">\r\n                    <label for=\"companySubscription\" class=\"required\">Status Berlangganan</label>\r\n                    <div>\r\n                        <app-lov id=\"companySubscription\" label=\"Pilih Status Berlangganan\" appendTo=\"body\"\r\n                            (selected)=\"selectCompSubs($event)\"\r\n                            [ngClass]=\"{'ng-dirty ng-invalid' : (form.get('companySubscription').touched || form.get('companySubscription').dirty ) && !form.get('companySubscription').valid}\"\r\n                            uri=\"lov/company-subscriptions\">\r\n                        </app-lov>\r\n                        <app-error-field-helper [formControlKey]=\"form.get('companySubscription')\">\r\n                        </app-error-field-helper>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <ng-template pTemplate=\"footer\">\r\n        <btn-save (onClick)=\"onSaveExtend()\"></btn-save>\r\n    </ng-template>\r\n</p-dialog>\r\n\r\n\r\n<p-dialog header=\"Berhentikan\" [(visible)]=\"isShowTermit\" *ngIf=\"isShowTermit\" modal=\"modal\" showEffect=\"fade\"\r\n    [contentStyle]=\"{'overflow-y': 'auto', 'overflow-x': 'hidden', \r\n'max-height': '80vh','min-height':'250px'}\" [style]=\"{width: '30vw'}\" [breakpoints]=\"{'960px': '75vw'}\">\r\n    <div [formGroup]=\"form\">\r\n        <div class=\"grid p-fluid\">\r\n            <div class=\"col-12\">\r\n                <div class=\"field\">\r\n                    <label for=\"extDate\" class=\"required\">Tanggal Berhenti</label>\r\n                    <div>\r\n                        <p-calendar id=\"extDate\" dateFormat=\"dd-mm-yy\" appendTo=\"body\" [ngClass]=\"{'ng-dirty ng-invalid' : (form.get('date').touched || form.get('date').dirty ) &&\r\n                        !form.get('date').valid}\" formControlName=\"date\" [showIcon]=\"true\">\r\n                        </p-calendar>\r\n                        <app-error-field-helper [formControlKey]=\"form.get('date')\"></app-error-field-helper>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <ng-template pTemplate=\"footer\">\r\n        <btn-save (onClick)=\"onSaveTermit()\"></btn-save>\r\n    </ng-template>\r\n</p-dialog>"
        },
        {
            "name": "UtilCompanyEditComponent",
            "id": "component-UtilCompanyEditComponent-d41da84765680837851b2db17f7c8dd1a179e1352823eed2c3e14174d4823c5a9ff3852854147fb26a88045c6afded94105ffc4e825a378982196655960ca963",
            "file": "src/app/util/company/edit/util-company-edit.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-util-company-edit",
            "styleUrls": [
                "./util-company-edit.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./util-company-edit.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "bankForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UntypedFormGroup",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "companyId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "formGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UntypedFormGroup",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "imgSrc",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "isNpwp",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "isShow",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "loading",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "selected",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "uploadedFiles",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methodsClass": [
                {
                    "name": "createForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getDetail",
                    "args": [
                        {
                            "name": "id",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onFileChange",
                    "args": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 117,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onUpdate",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 89,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "selectCT",
                    "args": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 110,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectScale",
                    "args": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 121,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { UntypedFormGroup, UntypedFormBuilder, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AuthenticationService } from 'src/app/core/service/authentication.service';\r\nimport { HelperService } from 'src/app/core/service/helper-service';\r\nimport { MessageBoxService } from 'src/app/core/service/message-box.service';\r\nimport { UtilCompanyService } from '../service/util-company.service';\r\n\r\n@Component({\r\n    selector: 'app-util-company-edit',\r\n    templateUrl: './util-company-edit.component.html',\r\n    styleUrls: ['./util-company-edit.component.scss'],\r\n})\r\nexport class UtilCompanyEditComponent implements OnInit {\r\n    loading = true;\r\n    formGroup: UntypedFormGroup;\r\n    companyId;\r\n    imgSrc;\r\n    selected = [];\r\n    isShow = false;\r\n    bankForm: UntypedFormGroup;\r\n    uploadedFiles;\r\n    isNpwp;\r\n\r\n    constructor(\r\n        private formBuilder: UntypedFormBuilder,\r\n        private srv: UtilCompanyService,\r\n        private messageBoxService: MessageBoxService,\r\n        private auth: AuthenticationService,\r\n        private route: ActivatedRoute,\r\n        private help: HelperService,\r\n        private router: Router\r\n    ) {}\r\n\r\n    ngOnInit(): void {\r\n        this.companyId = this.route.snapshot.paramMap.get('id');\r\n        this.createForm();\r\n        this.getDetail(this.companyId);\r\n    }\r\n    getDetail(id) {\r\n        this.loading = true;\r\n        this.srv.getOne(id).subscribe(\r\n            (res) => {\r\n                res.effBegin = res.effBegin ? new Date(res.effBegin) : null;\r\n                res.effEnd = res.effEnd ? new Date(res.effEnd) : null;\r\n                if (res.owner) {\r\n                    res.owner.birthDate = res.owner.birthDate\r\n                        ? new Date(res.owner.birthDate)\r\n                        : null;\r\n                }\r\n\r\n                if (res.companyTaxNumber === null) {\r\n                    this.isNpwp = false;\r\n                } else {\r\n                    this.isNpwp = true;\r\n                }\r\n                this.formGroup.patchValue(res);\r\n\r\n                this.imgSrc =\r\n                    'data:image/' +\r\n                    res.fileLogo.ext +\r\n                    ';base64,' +\r\n                    res.fileLogo.base;\r\n                this.loading = false;\r\n            },\r\n            (err) => {\r\n                this.loading = false;\r\n            }\r\n        );\r\n    }\r\n\r\n    createForm(): void {\r\n        this.formGroup = this.formBuilder.group({\r\n            id: [''],\r\n            version: [''],\r\n            code: [{ value: '', disabled: true }],\r\n            name: [{ value: '', disabled: true }],\r\n            address: [''],\r\n            effBegin: [{ value: '', disabled: true }],\r\n            effEnd: [{ value: '', disabled: true }],\r\n            phone: [''],\r\n            fax: [''],\r\n            email: ['', [Validators.email,Validators.required]],\r\n            scale: ['',Validators.required],\r\n            companyType: [''],\r\n            companyTaxNumber: [null],\r\n        });\r\n    }\r\n    onUpdate() {\r\n        if (this.formGroup.valid) {\r\n            const formData: FormData = new FormData();\r\n\r\n            if (this.uploadedFiles) {\r\n                formData.append('logo', this.uploadedFiles);\r\n            }\r\n            formData.append(\r\n                'company',\r\n                JSON.stringify(\r\n                    this.help.formatDate(this.formGroup.getRawValue())\r\n                )\r\n            );\r\n            this.srv.update(formData).subscribe((res) => {\r\n                this.messageBoxService.showSuccess(res);\r\n                this.router.navigate(['util/company']);\r\n            });\r\n        } else {\r\n            this.formGroup.markAllAsTouched();\r\n        }\r\n    }\r\n    selectCT(e) {\r\n        this.formGroup.patchValue({\r\n            companyType: {\r\n                id: e.id,\r\n            },\r\n        });\r\n    }\r\n    onFileChange(e) {\r\n        this.uploadedFiles = e;\r\n    }\r\n\r\n    selectScale(e) {\r\n        this.formGroup.patchValue({\r\n            scale: e.value,\r\n        });\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./util-company-edit.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "formBuilder",
                        "type": "UntypedFormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "srv",
                        "type": "UtilCompanyService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "messageBoxService",
                        "type": "MessageBoxService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "auth",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "help",
                        "type": "HelperService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 23,
                "jsdoctags": [
                    {
                        "name": "formBuilder",
                        "type": "UntypedFormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "srv",
                        "type": "UtilCompanyService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "messageBoxService",
                        "type": "MessageBoxService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "auth",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "help",
                        "type": "HelperService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"card\">\r\n    <div class=\"grid field\">\r\n        <div class=\"col-6 mt-2\">\r\n            <h5>Perusahaan - Edit</h5>\r\n        </div>\r\n\r\n        <div class=\"col-6\">\r\n            <div class=\"field text-right hide-mobile\">\r\n                <btn-cancel [routeUrl]=\"'util/company/'+companyId\"></btn-cancel>\r\n                <btn-update (onClick)=\"onUpdate()\"></btn-update>\r\n            </div>\r\n            <div class=\"field text-right hide-desktop\">\r\n                <btn-update (onClick)=\"onUpdate()\"></btn-update>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"grid field\">\r\n        <div class=\"col-12 border-bottom-1 mt-2\">\r\n            <h6>Detil Perusahaan</h6>\r\n        </div>\r\n    </div>\r\n    <ng-container [formGroup]=\"formGroup\">\r\n        <div class=\"grid p-fluid\" *ngIf=\"!loading else skel\">\r\n            <div class=\"col-12 md:col-6\">\r\n                <div class=\"field\">\r\n                    <label for=\"code\">Kode</label>\r\n                    <div>\r\n                        <input id=\"code\" type=\"text\" formControlName=\"code\" pInputText>\r\n                    </div>\r\n                </div>\r\n                <div class=\"field\">\r\n                    <label for=\"name\">Nama Perusahaan</label>\r\n                    <div>\r\n                        <input id=\"name\" type=\"text\" formControlName=\"name\" pInputText>\r\n                    </div>\r\n                </div>\r\n                <div class=\"field\">\r\n                    <label for=\"jenis-usaha\" class=\"required\">Jenis Usaha</label>\r\n                    <div>\r\n                        <app-lov uri=\"lov/company-types\" label=\"Pilih Tipe Perusahaan\"\r\n                            [value]=\"formGroup.value.companyType.id\" (selected)=\"selectCT($event)\" [ngClass]=\"{'ng-dirty ng-invalid' : (formGroup.get('companyType').touched || formGroup.get('companyType').dirty ) &&\r\n                        !formGroup.get('companyType').valid}\"></app-lov>\r\n                        <app-error-field-helper [formControlKey]=\"formGroup.get('companyType')\">\r\n                        </app-error-field-helper>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"field\">\r\n                    <label for=\"effBegin\">Bergabung</label>\r\n                    <div>\r\n                        <p-calendar id=\"effBegin\" dateFormat=\"dd-mm-yy\" appendTo=\"body\" formControlName=\"effBegin\"\r\n                            [showIcon]=\"true\">\r\n                        </p-calendar>\r\n                    </div>\r\n                </div>\r\n                <div class=\"field\">\r\n                    <label for=\"effEnd\">Berlaku Sampai</label>\r\n                    <div>\r\n                        <p-calendar id=\"effEnd\" dateFormat=\"dd-mm-yy\" appendTo=\"body\" formControlName=\"effEnd\"\r\n                            [showIcon]=\"true\">\r\n                        </p-calendar>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"field\">\r\n                    <label for=\"address\">Alamat Perusahaan</label>\r\n                    <div>\r\n                        <textarea id=\"address\" class=\"custom-input\" formControlName=\"address\" rows=\"4\" cols=\"33\"\r\n                            pInputTextarea autoResize=\"autoResize\" [ngClass]=\"{'ng-dirty ng-invalid' : (formGroup.get('address').touched || formGroup.get('address').dirty ) &&\r\n                        !formGroup.get('address').valid}\"></textarea>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"field\" *ngIf=\"isNpwp\">\r\n                    <label for=\"companyTaxNumber\">No. NPWP</label>\r\n                    <div>\r\n                        <p-inputMask styleClass=\"label-custom-form custom-input\" formControlName=\"companyTaxNumber\"\r\n                            unmask=\"true\" mask=\"99.999.999.9-999-999\"\r\n                            [ngClass]=\"{'ng-dirty ng-invalid' : (formGroup.get('companyTaxNumber').touched || formGroup.get('companyTaxNumber').dirty ) && !formGroup.get('companyTaxNumber').valid}\">\r\n                        </p-inputMask>\r\n                        <app-error-field-helper [formControlKey]=\"formGroup.get('companyTaxNumber')\">\r\n                        </app-error-field-helper>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-12 md:col-6\">\r\n                <div class=\"field\">\r\n                    <label for=\"scale\" class=\"required\">Jumlah Karyawan</label>\r\n                    <div>\r\n                        <app-lov uri=\"lov/company-scales\" label=\"Pilih Jumlah Karyawan\" [value]=\"formGroup.value.scale\"\r\n                            [isValueLabel]=\"true\" (selected)=\"selectScale($event)\"></app-lov>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"field\">\r\n                    <label for=\"phone\">Telpon</label>\r\n                    <div>\r\n                        <input id=\"phone\" onlyNumber type=\"text\" formControlName=\"phone\" pInputText [ngClass]=\"{'ng-dirty ng-invalid' : (formGroup.get('phone').touched || formGroup.get('phone').dirty ) &&\r\n                        !formGroup.get('phone').valid}\">\r\n                    </div>\r\n                </div>\r\n                <div class=\"field\">\r\n                    <label for=\"fax\">Fax</label>\r\n                    <div>\r\n                        <input id=\"fax\" onlyNumber type=\"text\" formControlName=\"fax\" pInputText [ngClass]=\"{'ng-dirty ng-invalid' : (formGroup.get('fax').touched || formGroup.get('fax').dirty ) &&\r\n                        !formGroup.get('fax').valid}\">\r\n                    </div>\r\n                </div>\r\n                <div class=\"field\">\r\n                    <label for=\"email\" class=\"required\">Email</label>\r\n                    <div>\r\n                        <input id=\"email\" type=\"email\" formControlName=\"email\" placeholder=\"Isi Email Perusahaan\"\r\n                            pInputText [ngClass]=\"{'ng-dirty ng-invalid' : (formGroup.get('email').touched || formGroup.get('email').dirty ) &&\r\n                        !formGroup.get('email').valid}\">\r\n                        <app-error-field-helper [formControlKey]=\"formGroup.get('email')\"></app-error-field-helper>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"field\">\r\n                    <label for=\"logo\">Logo</label>\r\n                    <div>\r\n                        <app-linov-upload [isImage]=\"true\" [src]=\"imgSrc\" (onChange)=\"onFileChange($event)\">\r\n                        </app-linov-upload>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </ng-container>\r\n    <ng-template #skel>\r\n        <div class=\"custom-skeleton p-4\">\r\n            <p-skeleton width=\"100%\" height=\"150px\"></p-skeleton>\r\n        </div>\r\n    </ng-template>\r\n</div>"
        },
        {
            "name": "UtilCompanyListComponent",
            "id": "component-UtilCompanyListComponent-dc736d1bb412d0439980ae3668f32910951e8ec32b893ee445e8077e328367750d48a96147e47ce4a246aac4a38f80cea634118d032a62069c2803e3340d7ada",
            "file": "src/app/util/company/list/util-company-list.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-util-company-list",
            "styleUrls": [
                "./util-company-list.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./util-company-list.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "body",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "count",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "first",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "form",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UntypedFormGroup",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "isShowExtend",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "isShowTermit",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "list",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "listFilter",
                    "defaultValue": "[\r\n        { label: 'Semua', value: '' },\r\n        { label: 'Aktif', value: 'Active' },\r\n        { label: 'Non Aktif', value: 'Stop' },\r\n    ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "selected",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 41
                }
            ],
            "methodsClass": [
                {
                    "name": "aksi",
                    "args": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 97,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getList",
                    "args": [
                        {
                            "name": "pi",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "pi",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onAdd",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 93,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onEdit",
                    "args": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 108,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onModal",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 89,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSave",
                    "args": [
                        {
                            "name": "isExtend",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 112,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isExtend",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onSaveExtend",
                    "args": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 130,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onSaveTermit",
                    "args": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 141,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onSearch",
                    "args": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onTableLazyLoad",
                    "args": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectCompSubs",
                    "args": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n    ChangeDetectionStrategy,\r\n    ChangeDetectorRef,\r\n    Component,\r\n    OnInit,\r\n} from '@angular/core';\r\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { PageInfo } from 'src/app/core/model/page-info';\r\nimport { HelperService } from 'src/app/core/service/helper-service';\r\nimport { MessageBoxService } from 'src/app/core/service/message-box.service';\r\nimport { UtilCompanyService } from '../service/util-company.service';\r\n\r\n@Component({\r\n    selector: 'app-util-company-list',\r\n    templateUrl: './util-company-list.component.html',\r\n    styleUrls: ['./util-company-list.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class UtilCompanyListComponent implements OnInit {\r\n    list = [];\r\n    listFilter = [\r\n        { label: 'Semua', value: '' },\r\n        { label: 'Aktif', value: 'Active' },\r\n        { label: 'Non Aktif', value: 'Stop' },\r\n    ];\r\n    isShowExtend = false;\r\n    isShowTermit = false;\r\n    count = 0;\r\n    first = 0;\r\n    form: UntypedFormGroup;\r\n    constructor(\r\n        private router: Router,\r\n        private srv: UtilCompanyService,\r\n        private cd: ChangeDetectorRef,\r\n        private msg: MessageBoxService,\r\n        private formBuilder: UntypedFormBuilder,\r\n        private help: HelperService\r\n    ) {}\r\n    loading = false;\r\n    selected = [];\r\n    body;\r\n    ngOnInit(): void {\r\n        this.form = this.formBuilder.group({\r\n            date: ['', Validators.required],\r\n            companySubscription: [\r\n                {\r\n                    id: ['', Validators.required],\r\n                },\r\n            ],\r\n        });\r\n    }\r\n\r\n    onSearch(e) {\r\n        this.body = e;\r\n        this.getList(new PageInfo(1, 10));\r\n    }\r\n\r\n    onTableLazyLoad(e) {\r\n        const page = e.first / e.rows + 1;\r\n        const limit = e.rows;\r\n        this.getList(new PageInfo(page, limit));\r\n    }\r\n\r\n    getList(pi) {\r\n        this.first = pi.page - 1;\r\n        this.loading = true;\r\n        this.list = [];\r\n        this.srv.getAll(pi, this.body).subscribe(\r\n            (res) => {\r\n                if (res) {\r\n                    this.loading = false;\r\n                    this.list = res.data;\r\n                    this.count = res.count;\r\n                    this.cd.detectChanges();\r\n                }\r\n            },\r\n            (err) => {\r\n                this.loading = false;\r\n                this.cd.detectChanges();\r\n            }\r\n        );\r\n    }\r\n\r\n    selectCompSubs(e) {\r\n        this.form.get('companySubscription').patchValue({ id: e.id });\r\n    }\r\n\r\n    onModal() {\r\n        this.isShowExtend = true;\r\n    }\r\n\r\n    onAdd() {\r\n        this.router.navigate(['/util/company/add']);\r\n    }\r\n\r\n    aksi(e) {\r\n        if (e == 'add') {\r\n            this.onAdd();\r\n        } else if (e == 'extend') {\r\n            this.isShowExtend = true;\r\n            this.form.reset();\r\n        } else if (e == 'terminate') {\r\n            this.isShowTermit = true;\r\n            this.form.reset();\r\n        }\r\n    }\r\n    onEdit(e) {\r\n        this.router.navigate(['/util/company/' + e.id]);\r\n    }\r\n\r\n    onSave(isExtend) {\r\n        if (this.form.valid) {\r\n            let idList = [];\r\n            this.selected.forEach((e) => {\r\n                idList.push(e.id);\r\n            });\r\n            let body = this.form.getRawValue();\r\n            body.compId = idList;\r\n            if (isExtend) {\r\n                this.onSaveExtend(this.help.formatDate(body));\r\n            } else {\r\n                this.onSaveTermit(this.help.formatDate(body));\r\n            }\r\n        } else {\r\n            this.form.markAllAsTouched();\r\n        }\r\n    }\r\n\r\n    onSaveExtend(e) {\r\n        this.srv.extend(e).subscribe((res) => {\r\n            this.selected = [];\r\n            this.msg.showSuccess(res);\r\n            this.isShowExtend = false;\r\n            this.getList(new PageInfo(1, 10));\r\n            this.isShowExtend = false;\r\n            this.cd.detectChanges();\r\n        });\r\n    }\r\n\r\n    onSaveTermit(e) {\r\n        this.srv.terminate(e).subscribe((res) => {\r\n            this.selected = [];\r\n            this.msg.showSuccess(res);\r\n            this.isShowTermit = false;\r\n            this.getList(new PageInfo(1, 10));\r\n            this.isShowTermit = false;\r\n            this.cd.detectChanges();\r\n        });\r\n    }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./util-company-list.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "srv",
                        "type": "UtilCompanyService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "msg",
                        "type": "MessageBoxService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "formBuilder",
                        "type": "UntypedFormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "help",
                        "type": "HelperService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 31,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "srv",
                        "type": "UtilCompanyService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cd",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "msg",
                        "type": "MessageBoxService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "formBuilder",
                        "type": "UntypedFormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "help",
                        "type": "HelperService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"card\">\r\n    <div class=\"grid field\">\r\n        <div class=\"col-6 mt-2\">\r\n            <h5>Daftar Perusahaan</h5>\r\n        </div>\r\n        <div class=\"col-6\">\r\n            <div class=\"field text-right hide-mobile\">\r\n                <btn-multi-action [haveExtend]=\"true\" [haveTerminate]=\"true\" [selected]=\"selected\"\r\n                    (onClick)=\"aksi($event)\"></btn-multi-action>\r\n                <btn-add (onClick)=\"onAdd()\"></btn-add>\r\n            </div>\r\n            <div class=\"field text-right hide-desktop\">\r\n                <btn-multi-action [haveExtend]=\"true\" [haveTerminate]=\"true\" [haveAdd]=\"true\" [selected]=\"selected\"\r\n                    (onClick)=\"aksi($event)\">\r\n                </btn-multi-action>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <p-table [value]=\"list\" [totalRecords]=\"count\" [lazy]=\"true\" (onLazyLoad)=\"onTableLazyLoad($event)\" dataKey=\"id\"\r\n        [rows]=\"10\" [loading]=\"loading\" [(first)]='first' styleClass=\"p-datatable-gridlines\" [paginator]=\"true\"\r\n        pageLinks=\"3\" responsiveLayout=\"scroll\" [(selection)]=\"selected\">\r\n        <ng-template pTemplate=\"caption\">\r\n            <div class=\"justify-content-between flex-column sm:flex-row\">\r\n                <app-search [isFilter]=\"true\" [customFilterLabel]=\"listFilter\" (search)=\"onSearch($event)\"></app-search>\r\n            </div>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"header\">\r\n            <tr>\r\n                <th style=\"width: 3em\">\r\n                    <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\r\n                </th>\r\n                <th>\r\n                    <div class=\"flex justify-content-between align-items-center\">\r\n                        No\r\n                    </div>\r\n                </th>\r\n                <th>\r\n                    <div class=\"flex justify-content-between align-items-center\">\r\n                        Kode\r\n                    </div>\r\n                </th>\r\n                <th>\r\n                    <div class=\"flex justify-content-between align-items-center\">\r\n                        Nama\r\n                    </div>\r\n                </th>\r\n                <th>\r\n                    <div class=\"flex justify-content-between align-items-center\">\r\n                        Email\r\n                    </div>\r\n                </th>\r\n                <th style=\"width: 8rem\">\r\n                    <div class=\"flex justify-content-between align-items-center\">\r\n                        Telepon\r\n                    </div>\r\n                </th>\r\n                <th style=\"width: 8rem\">\r\n                    <div class=\"flex justify-content-between align-items-center\">\r\n                        Jenis Usaha\r\n                    </div>\r\n                </th>\r\n                <th style=\"width: 8rem\">\r\n                    <div class=\"flex justify-content-between align-items-center\">\r\n                        Jumlah Karyawan\r\n                    </div>\r\n                </th>\r\n                <th style=\"width: 8rem\">\r\n                    <div class=\"flex justify-content-between align-items-center\">\r\n                        Berlaku Sampai\r\n                    </div>\r\n                </th>\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"body\" let-data let-rowIndex=\"rowIndex\">\r\n            <tr [pSelectableRow]=\"data\">\r\n                <td>\r\n                    <p-tableCheckbox [value]=\"data\"></p-tableCheckbox>\r\n                </td>\r\n                <td (click)=\"onEdit(data)\" style=\"width: 3rem;\">\r\n                    {{rowIndex+1}}\r\n                </td>\r\n                <td (click)=\"onEdit(data)\" style=\"min-width: 12rem;\">\r\n                    {{data.code}}\r\n                </td>\r\n                <td (click)=\"onEdit(data)\" style=\"min-width: 12rem;\">\r\n                    {{data.name}}\r\n                </td>\r\n                <td (click)=\"onEdit(data)\" style=\"min-width: 12rem;\">\r\n                    {{data.email}}\r\n                </td>\r\n                <td (click)=\"onEdit(data)\" style=\"min-width: 12rem;\">\r\n                    {{data.phone}}\r\n                </td>\r\n                <td (click)=\"onEdit(data)\" style=\"min-width: 12rem;\">\r\n                    {{data.type}}\r\n                </td>\r\n                <td (click)=\"onEdit(data)\" style=\"min-width: 12rem;\">\r\n                    {{data.totalEmp}}\r\n                </td>\r\n                <td (click)=\"onEdit(data)\" style=\"min-width: 12rem;\">\r\n                    {{data.endDate |formatDate}}\r\n                </td>\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"emptymessage\">\r\n            <tr>\r\n                <td class=\"text-center\" colspan=\"9\">No data found.</td>\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"loadingbody\">\r\n            <tr>\r\n                <td class=\"text-center\" colspan=\"9\">Loading data. Please wait.</td>\r\n            </tr>\r\n        </ng-template>\r\n    </p-table>\r\n</div>\r\n\r\n<p-dialog header=\"Perpanjang\" *ngIf=\"isShowExtend\" [(visible)]=\"isShowExtend\" modal=\"true\" showEffect=\"fade\"\r\n    [contentStyle]=\"{'overflow-y': 'auto', 'overflow-x': 'hidden', \r\n'max-height': '80vh','min-height':'250px'}\" [style]=\"{width: '50vw'}\" [breakpoints]=\"{'960px': '75vw'}\"\r\n    [draggable]=\"false\" [resizable]=\"false\" [baseZIndex]=\"10000\">\r\n    <div [formGroup]=\"form\">\r\n        <div class=\"grid p-fluid\">\r\n            <div class=\"col-12  md:col-6 \">\r\n                <div class=\"field\">\r\n                    <label for=\"extDate\" class=\"required\">Sampai Tanggal</label>\r\n                    <div>\r\n                        <p-calendar id=\"extDate\" dateFormat=\"dd-mm-yy\" appendTo=\"body\" formControlName=\"date\"\r\n                            [showIcon]=\"true\" [ngClass]=\"{'ng-dirty ng-invalid' : (form.get('date').touched || form.get('date').dirty ) &&\r\n                            !form.get('date').valid}\">\r\n                        </p-calendar>\r\n                        <app-error-field-helper [formControlKey]=\"form.get('date')\"></app-error-field-helper>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-12  md:col-6\">\r\n                <div class=\"field\">\r\n                    <label for=\"companySubscription\" class=\"required\">Status Berlangganan</label>\r\n                    <div>\r\n                        <app-lov id=\"companySubscription\" label=\"Pilih Status Berlangganan\" appendTo=\"body\"\r\n                            (selected)=\"selectCompSubs($event)\" [ngClass]=\"{'ng-dirty ng-invalid' : (form.get('companySubscription').touched || form.get('companySubscription').dirty ) &&\r\n                                                                    !form.get('companySubscription').valid}\"\r\n                            uri=\"lov/company-subscriptions\">\r\n                        </app-lov>\r\n                        <app-error-field-helper [formControlKey]=\"form.get('companySubscription')\">\r\n                        </app-error-field-helper>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <ng-template pTemplate=\"footer\">\r\n        <btn-save (onClick)=\"onSave(true)\"></btn-save>\r\n    </ng-template>\r\n</p-dialog>\r\n\r\n\r\n<p-dialog header=\"Berhentikan\" [(visible)]=\"isShowTermit\" *ngIf=\"isShowTermit\" modal=\"modal\" showEffect=\"fade\"\r\n    [contentStyle]=\"{'overflow-y': 'auto', 'overflow-x': 'hidden', \r\n'max-height': '80vh','min-height':'250px'}\" [style]=\"{width: '30vw'}\" [breakpoints]=\"{'960px': '75vw'}\">\r\n    <div [formGroup]=\"form\">\r\n        <div class=\"grid p-fluid\">\r\n            <div class=\"col-12\">\r\n                <div class=\"field\">\r\n                    <label for=\"extDate\" class=\"required\">Tanggal Berhenti</label>\r\n                    <div>\r\n                        <p-calendar id=\"extDate\" dateFormat=\"dd-mm-yy\" appendTo=\"body\" [ngClass]=\"{'ng-dirty ng-invalid' : (form.get('date').touched || form.get('date').dirty ) &&\r\n                        !form.get('date').valid}\" formControlName=\"date\" [showIcon]=\"true\">\r\n                        </p-calendar>\r\n                        <app-error-field-helper [formControlKey]=\"form.get('date')\"></app-error-field-helper>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <ng-template pTemplate=\"footer\">\r\n        <btn-save (onClick)=\"onSave(false)\"></btn-save>\r\n    </ng-template>\r\n</p-dialog>"
        }
    ],
    "modules": [
        {
            "name": "AppCodeModule",
            "id": "module-AppCodeModule-fde079404210779a790dca45ef70175262568a9503c145a54857b0d54e1a6cc7e9b5a75129a95708cde5c777b3d94b3a9e92010ac05a46f61d73d232d69da0d5",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/showcase/components/app-code/app.code.component.ts",
            "methods": [],
            "sourceCode": "import { Component, ElementRef, AfterViewInit, Input, NgModule, ViewChild } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({\r\n    selector: 'app-code',\r\n    template: `\r\n        <pre [ngClass]=\"'language-' + lang\"><code #code><ng-content></ng-content>\r\n</code></pre>\r\n    `,\r\n})\r\nexport class AppCodeComponent implements AfterViewInit {\r\n\r\n    @Input() lang = 'markup';\r\n\r\n    @ViewChild('code') codeViewChild: ElementRef;\r\n\r\n    constructor(public el: ElementRef) { }\r\n\r\n    ngAfterViewInit() {\r\n        // @ts-ignore\r\n        if (window['Prism']) {\r\n            // @ts-ignore\r\n            window['Prism'].highlightElement(this.codeViewChild.nativeElement);\r\n        }\r\n    }\r\n}\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    exports: [AppCodeComponent],\r\n    declarations: [AppCodeComponent]\r\n})\r\nexport class AppCodeModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppCodeComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AppCodeComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppModule",
            "id": "module-AppModule-faefadaa60b782221d4526e73084177ff611b0bd3b92db20946e7ea937ea7b3e5571367b18592c563679c8780510bf1c807f29365fcd32a1077f423272d73d6d",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { HttpClient, HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { MessageService } from 'primeng/api';\r\nimport { ToastModule } from 'primeng/toast';\r\nimport { AppRoutingModule } from './app-routing.module';\r\n\r\n \r\nimport { AppComponent } from './app.component';\r\nimport { DashboardModule } from './core/dashboard/dashboard.module';\r\nimport { HttpErrorInterceptor } from './core/interceptor/http-error.interceptor';\r\nimport { LayoutModule } from './layout/layout.module';\r\n\r\n\r\nexport const interceptorProviders = [\r\n    {\r\n        provide: HTTP_INTERCEPTORS,\r\n        useClass: HttpErrorInterceptor,\r\n        multi: true,\r\n    }\r\n  ];\r\n  export function createTranslateLoader(http: HttpClient) {\r\n    return new TranslateHttpLoader(http, './assets/', '.json');\r\n}\r\n@NgModule({\r\n    imports: [\r\n        AppRoutingModule,\r\n        BrowserModule,\r\n        TranslateModule.forRoot({\r\n            defaultLanguage: 'id',\r\n            loader: {\r\n                provide: TranslateLoader,\r\n                useFactory: (createTranslateLoader),\r\n                deps: [HttpClient],\r\n            }\r\n        }),\r\n        BrowserAnimationsModule,\r\n        HttpClientModule,\r\n        LayoutModule,\r\n        ToastModule,\r\n        DashboardModule\r\n    ],\r\n    declarations: [\r\n        AppComponent,\r\n    ],\r\n    providers: [MessageService,interceptorProviders],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "DashboardModule"
                        },
                        {
                            "name": "LayoutModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-cfa37d882e813a487175138f30817d28670fd5bddd752e5b387c244730645786a265272f5c4d3422d1711d7f79510efd107ae843bca23746dd16ff6bc8968ec4",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppMainComponent } from './layout/component/app.main.component';\r\nimport { PageNotFoundComponent } from './layout/page-not-found/page-not-found.component';\r\nimport { PageForbiddenComponent } from './layout/page-forbidden/page-forbidden.component';\r\nimport { LoginComponent } from './layout/login/login.component';\r\nimport { AuthGuard } from './core/auth.guard';\r\nimport { DashboardComponent } from './core/dashboard/dashboard.component';\r\nimport { PermisionGuard } from './core/permision.guard';\r\nimport { RedirectComponent } from './layout/redirect/redirect.component';\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forRoot([\r\n            {\r\n                path: 'dashboard',component: AppMainComponent,\r\n                children:[\r\n                    { path: '',component: DashboardComponent, },\r\n                ],\r\n                canActivate: [AuthGuard],\r\n            },\r\n            {\r\n                path: 'login',component: LoginComponent,canActivate: [PermisionGuard],\r\n            },\r\n            {\r\n                path: 'redirect',\r\n                component: RedirectComponent,\r\n            },\r\n            {\r\n                path: '404',\r\n                component: PageNotFoundComponent,\r\n            },\r\n            {\r\n                path: '403',\r\n                component: PageForbiddenComponent,\r\n            },\r\n            {\r\n                path: 'util',component: AppMainComponent, loadChildren: () => import('./util/util.module').then(m => m.UtilModule),\r\n                canActivate: [AuthGuard]\r\n            },\r\n            {\r\n                path: 'showcase',component: AppMainComponent, loadChildren: () => import('./showcase/showcase.module').then(m => m.ShowcaseModule),\r\n                canActivate: [AuthGuard]\r\n            },\r\n            {\r\n                path: '' ,pathMatch: 'prefix',redirectTo: 'dashboard'\r\n            },\r\n            {\r\n                path: 'time',component: AppMainComponent, loadChildren: () => import('@time/time.module').then(m => m.TimeModule),\r\n                canActivate: [AuthGuard]\r\n            },\r\n            {\r\n                path: 'organization',component: AppMainComponent, loadChildren: () => import('@organization/organization.module').then(m => m.OrganizationModule),\r\n                canActivate: [AuthGuard]\r\n            },\r\n            {path: '**', redirectTo: '404'},\r\n        ], {scrollPositionRestoration: 'enabled'})\r\n    ],\r\n    exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {\r\n}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ButtonsModule",
            "id": "module-ButtonsModule-9f7ce2b639615c72cb8bd680d1fa796c55d18416a9308c3b0be096b597087812eb3047ec964b9316ab0acc2bfd21d043a2e659ea6d2b1e25e4cb0b43e2a46ca7",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/stories/primeng/buttons/buttons.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport MainButton from './main-button/main-button.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\r\nimport { DialogModule } from 'primeng/dialog';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { SplitButtonModule } from 'primeng/splitbutton';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport GhostButton from './ghost-button/ghost-button.component';\r\n\r\n@NgModule({\r\n    declarations : [\r\n        MainButton,\r\n        GhostButton,\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        ConfirmDialogModule,\r\n        DialogModule,\r\n        ButtonModule,\r\n        SplitButtonModule,\r\n        TranslateModule,\r\n    ],\r\n    exports: [\r\n        MainButton,\r\n        GhostButton,\r\n    ]\r\n\r\n})\r\n\r\nexport class ButtonsModule{}",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "GhostButton"
                        },
                        {
                            "name": "MainButton"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "GhostButton"
                        },
                        {
                            "name": "MainButton"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ControlsModule",
            "id": "module-ControlsModule-a6745deb478c19d3557f4c96c652bb02d5ed135049ca76f22abfe6c3238d3badd5f04e7691285ee38c79569a66936ba61b544cde1907c1827568718a9a57be81",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/stories/primeng/confirm-dialogs/confirm-dialogs.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { SaveDialogComponent } from './save-dialog/save-dialog.component';\r\nimport { DeleteDialogComponent } from './delete-dialog/delete-dialog.component';\r\nimport { DialogModule } from 'primeng/dialog';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { UpdateDialogComponent } from './update-dialog/update-dialog.component';\r\nimport { LeaveDialogComponent } from './leave-dialog/leave-dialog.component';\r\n\r\n@NgModule({\r\n    declarations : [\r\n        SaveDialogComponent,\r\n        DeleteDialogComponent,\r\n        UpdateDialogComponent,\r\n        LeaveDialogComponent,\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        DialogModule,\r\n        ButtonModule\r\n    ],\r\n    exports: [\r\n        SaveDialogComponent,\r\n        DeleteDialogComponent,\r\n        UpdateDialogComponent,\r\n        LeaveDialogComponent,\r\n    ],\r\n    providers: [BrowserAnimationsModule]\r\n})\r\n\r\nexport class ControlsModule{}",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "DeleteDialogComponent"
                        },
                        {
                            "name": "LeaveDialogComponent"
                        },
                        {
                            "name": "SaveDialogComponent"
                        },
                        {
                            "name": "UpdateDialogComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "DeleteDialogComponent"
                        },
                        {
                            "name": "LeaveDialogComponent"
                        },
                        {
                            "name": "SaveDialogComponent"
                        },
                        {
                            "name": "UpdateDialogComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ControlsModule",
            "id": "module-ControlsModule-e68cfee2a77b8026f67bcc056b42b721897ec12ffa35aa23b96a25d4e5b8b3a4cd6b341c5c537c3765dc403f84af0bf991e676e87894f9ae98b9112a1de8489d-1",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/stories/primeng/controls/controls.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { CheckboxModule } from 'primeng/checkbox';\r\nimport { CheckboxComponent } from './checkbox/checkbox.component';\r\nimport { RadioButtonComponent } from './radio-button/radio-button.component';\r\nimport { RadioButtonModule } from 'primeng/radiobutton';\r\nimport { InputSwitchModule } from 'primeng/inputswitch';\r\nimport { ToggleComponent } from './toggle/toggle.component';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n    declarations : [\r\n        CheckboxComponent,\r\n        RadioButtonComponent,\r\n        ToggleComponent,\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        TranslateModule,\r\n        CheckboxModule,\r\n        RadioButtonModule,\r\n        InputSwitchModule,\r\n        FormsModule\r\n    ],\r\n    exports: [\r\n        CheckboxComponent,\r\n        RadioButtonComponent,\r\n        ToggleComponent,\r\n    ]\r\n})\r\n\r\nexport class ControlsModule{}",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CheckboxComponent"
                        },
                        {
                            "name": "RadioButtonComponent"
                        },
                        {
                            "name": "ToggleComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CheckboxComponent"
                        },
                        {
                            "name": "RadioButtonComponent"
                        },
                        {
                            "name": "ToggleComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "DashboardModule",
            "id": "module-DashboardModule-08974692bdc4c63838a83ab6ed024bdaee1f4a6e0580fe5c6b7da8b6c057e2901120edd09157350362e43f63b27b0f486fa37b1eefd095ceeaf6e385d6585ea1",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/core/dashboard/dashboard.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DashboardComponent } from './dashboard.component';\r\nimport { BirthdayDashboardComponent } from './component/birthday-dashboard/birthday-dashboard.component';\r\nimport { NgApexchartsModule } from 'ng-apexcharts';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { SharedComponentModule } from '../shared-component/shared-component.module';\r\nimport { LeaveRequestDashboardComponent } from './component/leave-request-dashboard/leave-request-dashboard.component';\r\nimport { AttendanceDashboardComponent } from './component/attendance-dashboard/attendance-dashboard.component';\r\nimport { TodayLeaveDashboardComponent } from './component/today-leave-dashboard/today-leave-dashboard.component';\r\nimport { NewEmployeeDashboardComponent } from './component/new-employee-dashboard/new-employee-dashboard.component';\r\nimport { LateLoanPaymentDashboardComponent } from './component/late-loan-payment-dashboard/late-loan-payment-dashboard.component';\r\nimport { EmployeeInfoDashboardComponent } from './component/employee-info-dashboard/employee-info-dashboard.component';\r\nimport { LoanInfoDashboardComponent } from './component/loan-info-dashboard/loan-info-dashboard.component';\r\nimport { ReimburseInfoDashboardComponent } from './component/reimburse-info-dashboard/reimburse-info-dashboard.component';\r\nimport { RequestInfoDashboardComponent } from './component/request-info-dashboard/request-info-dashboard.component';\r\nimport { PayrollInfoDashboardComponent } from './component/payroll-info-dashboard/payroll-info-dashboard.component';\r\nimport { ConfirmationDashboardComponent } from './component/confirmation-dashboard/confirmation-dashboard.component';\r\nimport { TabViewModule } from 'primeng/tabview';\r\nimport { PayrollMonthlyDashboardComponent } from './component/payroll-monthly-dashboard/payroll-monthly-dashboard.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        DashboardComponent,\r\n        BirthdayDashboardComponent,\r\n        LeaveRequestDashboardComponent,\r\n        AttendanceDashboardComponent,\r\n        TodayLeaveDashboardComponent,\r\n        NewEmployeeDashboardComponent,\r\n        LateLoanPaymentDashboardComponent,\r\n        EmployeeInfoDashboardComponent,\r\n        LoanInfoDashboardComponent,\r\n        ReimburseInfoDashboardComponent,\r\n        RequestInfoDashboardComponent,\r\n        PayrollInfoDashboardComponent,\r\n        ConfirmationDashboardComponent,\r\n        PayrollMonthlyDashboardComponent,\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        NgApexchartsModule,\r\n        FormsModule,\r\n        SharedComponentModule,\r\n        TabViewModule,\r\n    ],\r\n})\r\nexport class DashboardModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AttendanceDashboardComponent"
                        },
                        {
                            "name": "BirthdayDashboardComponent"
                        },
                        {
                            "name": "ConfirmationDashboardComponent"
                        },
                        {
                            "name": "DashboardComponent"
                        },
                        {
                            "name": "EmployeeInfoDashboardComponent"
                        },
                        {
                            "name": "LateLoanPaymentDashboardComponent"
                        },
                        {
                            "name": "LeaveRequestDashboardComponent"
                        },
                        {
                            "name": "LoanInfoDashboardComponent"
                        },
                        {
                            "name": "NewEmployeeDashboardComponent"
                        },
                        {
                            "name": "PayrollInfoDashboardComponent"
                        },
                        {
                            "name": "PayrollMonthlyDashboardComponent"
                        },
                        {
                            "name": "ReimburseInfoDashboardComponent"
                        },
                        {
                            "name": "RequestInfoDashboardComponent"
                        },
                        {
                            "name": "TodayLeaveDashboardComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "DirectiveModule",
            "id": "module-DirectiveModule-560b21d94acec39bcfb8d7564e3205554ca62a46f8963fcd218a80e56d85c53ed0ba396490c6687621e40104f3d20c8b6a46bea838515659e744cc32d91b84da",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/core/directive/directive.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { AutocompleteOffDirective } from './autocomplete-off.directive';\r\nimport { OnlyNumberDirective } from './only-number.directive';\r\n\r\n@NgModule({\r\n    imports: [],\r\n    declarations: [OnlyNumberDirective,AutocompleteOffDirective],\r\n    providers: [],\r\n    exports: [OnlyNumberDirective,AutocompleteOffDirective],\r\n})\r\nexport class DirectiveModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AutocompleteOffDirective"
                        },
                        {
                            "name": "OnlyNumberDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AutocompleteOffDirective"
                        },
                        {
                            "name": "OnlyNumberDirective"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "InputFieldsModule",
            "id": "module-InputFieldsModule-0dd9d734ee3e67e4f30f4c97a9202245dbff37e184e40f6bcad87f0a20fa7a614b428577e0f21a649da8abe165990a5b549d4bc3be90c10b030355103c8845d8",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/stories/primeng/input-fields/input-fields.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\r\nimport { DialogModule } from 'primeng/dialog';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport InputText from './input-text/input-text.component';\r\nimport InputTextArea from './input-text-area/input-text-area.component';\r\nimport InputNumber from './input-number/input-number.component';\r\nimport InputCalendar from './input-calendar/input-calendar.component';\r\nimport InputDropdown from './input-dropdown/input-dropdown.component';\r\nimport InputUpload from './input-file-upload/input-file-upload.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        InputText,\r\n        InputTextArea,\r\n        InputNumber,\r\n        InputCalendar,\r\n        InputDropdown,\r\n        InputUpload,\r\n    ],\r\n    imports: [CommonModule, ConfirmDialogModule, DialogModule, TranslateModule],\r\n    exports: [\r\n        InputText,\r\n        InputTextArea,\r\n        InputNumber,\r\n        InputCalendar,\r\n        InputDropdown,\r\n        InputUpload,\r\n    ],\r\n})\r\nexport class InputFieldsModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "InputCalendar"
                        },
                        {
                            "name": "InputDropdown"
                        },
                        {
                            "name": "InputNumber"
                        },
                        {
                            "name": "InputText"
                        },
                        {
                            "name": "InputTextArea"
                        },
                        {
                            "name": "InputUpload"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "InputCalendar"
                        },
                        {
                            "name": "InputDropdown"
                        },
                        {
                            "name": "InputNumber"
                        },
                        {
                            "name": "InputText"
                        },
                        {
                            "name": "InputTextArea"
                        },
                        {
                            "name": "InputUpload"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "LayoutModule",
            "id": "module-LayoutModule-cf41ba0acd56d83e20516d195ccf76526667f5f395c5c7d84caf7bc40c5cf3b11cc9cab34600a189d3a204f6e6b0b90bedd121c7a17c3f119ca8e023dc63a6f0",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/layout/layout.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AppConfigComponent } from './component/app.config.component';\r\nimport { AppFooterComponent } from './component/app.footer.component';\r\nimport { AppMainComponent } from './component/app.main.component';\r\nimport { AppMenuComponent } from './component/app.menu.component';\r\nimport { AppMenuitemComponent } from './component/app.menuitem.component';\r\nimport { AppTopBarComponent } from './component/app.topbar.component';\r\nimport { ConfigService } from '../core/service/app.config.service';\r\nimport { MenuService } from '../showcase/service/app.menu.service';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { InputSwitchModule } from 'primeng/inputswitch';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { NgxSpinnerModule } from \"ngx-spinner\";\r\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\r\nimport { PageForbiddenComponent } from './page-forbidden/page-forbidden.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { PasswordModule } from 'primeng/password';\r\nimport { SharedComponentModule } from '../core/shared-component/shared-component.module';\r\nimport { GalleriaModule } from 'primeng/galleria';\r\nimport { RedirectComponent } from './redirect/redirect.component';\r\nimport { MenubarModule } from 'primeng/menubar';\r\nimport { MultiSelectModule } from 'primeng/multiselect';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppMainComponent,\r\n    AppTopBarComponent,\r\n    AppFooterComponent,\r\n    AppConfigComponent,\r\n    AppMenuComponent,\r\n    AppMenuitemComponent,\r\n    PageNotFoundComponent,\r\n    PageForbiddenComponent,\r\n    LoginComponent,\r\n    RedirectComponent],\r\n  imports: [\r\n    RouterModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    InputSwitchModule,\r\n    ButtonModule,\r\n    NgxSpinnerModule,\r\n    InputTextModule,\r\n    PasswordModule,\r\n    ReactiveFormsModule,\r\n    SharedComponentModule,\r\n    GalleriaModule,\r\n    MenubarModule,\r\n    MultiSelectModule\r\n  ],\r\n  providers:[MenuService, ConfigService]\r\n})\r\nexport class LayoutModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "ConfigService"
                        },
                        {
                            "name": "MenuService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppConfigComponent"
                        },
                        {
                            "name": "AppFooterComponent"
                        },
                        {
                            "name": "AppMainComponent"
                        },
                        {
                            "name": "AppMenuComponent"
                        },
                        {
                            "name": "AppMenuitemComponent"
                        },
                        {
                            "name": "AppTopBarComponent"
                        },
                        {
                            "name": "LoginComponent"
                        },
                        {
                            "name": "PageForbiddenComponent"
                        },
                        {
                            "name": "PageNotFoundComponent"
                        },
                        {
                            "name": "RedirectComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "LinovButtonModule",
            "id": "module-LinovButtonModule-252752380a175dc3423e58ab0d113d9465096e23e07aca25dbe5bf481db4d9f0b30e1bc9df7a5c8b4abe68fd4f2b5a0eb604a51fadd2f4a4973828202afdbe60",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/core/shared-component/linov-button/linov-button.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ButtonCancelComponent } from './button-cancel/button-cancel.component';\r\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { ButtonDownloadLaporanComponent } from './button-download-laporan/button-download-laporan.component';\r\nimport { ButtonDownloadComponent } from './button-download/button-download.component';\r\nimport { ButtonMultiActionComponent } from './button-multi-action/button-multi-action.component';\r\nimport { SplitButtonModule } from 'primeng/splitbutton';\r\nimport { ButtonAddComponent } from './button-add/button-add.component';\r\nimport { DialogModule } from 'primeng/dialog';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { ButtonSaveComponent } from './button-save/button-save.component';\r\nimport { ButtonUpdateComponent } from './button-update/button-update.component';\r\nimport { ButtonEditComponent } from './button-edit/button-edit.component';\r\nimport { ButtonProcessComponent } from './button-process/button-process.component';\r\nimport { ButtonKembaliComponent } from './button-kembali/button-kembali.component';\r\nimport { ButtonDeleteComponent } from './button-delete/button-delete.component';\r\nimport { ButtonTerminateComponent } from './button-terminate/button-terminate.component';\r\nimport { ButtonReportComponent } from './button-report/button-report.component';\r\nimport { ButtonGenerateComponent } from './button-generate/button-generate.component';\r\nimport { ButtonSendComponent } from './button-send/button-send.component';\r\nimport { ButtonRenewComponent } from './button-renew/button-renew.component';\r\nimport { ButtonBackComponent } from './button-back-general/button-back-general.component';\r\n@NgModule({\r\n    declarations: [\r\n        ButtonCancelComponent,\r\n        ButtonDownloadLaporanComponent,\r\n        ButtonMultiActionComponent,\r\n        ButtonDownloadComponent,\r\n        ButtonAddComponent,\r\n        ButtonSaveComponent,\r\n        ButtonUpdateComponent,\r\n        ButtonEditComponent,\r\n        ButtonProcessComponent,\r\n        ButtonKembaliComponent,\r\n        ButtonDeleteComponent,\r\n        ButtonTerminateComponent,\r\n        ButtonReportComponent,\r\n        ButtonGenerateComponent,\r\n        ButtonSendComponent,\r\n        ButtonRenewComponent,\r\n        ButtonBackComponent,\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        ConfirmDialogModule,\r\n        DialogModule,\r\n        ButtonModule,\r\n        SplitButtonModule,\r\n        TranslateModule,\r\n    ],\r\n    exports: [\r\n        ButtonCancelComponent,\r\n        ButtonDownloadLaporanComponent,\r\n        ButtonAddComponent,\r\n        ButtonDownloadComponent,\r\n        ButtonMultiActionComponent,\r\n        ButtonSaveComponent,\r\n        ButtonUpdateComponent,\r\n        ButtonEditComponent,\r\n        ButtonProcessComponent,\r\n        ButtonKembaliComponent,\r\n        ButtonDeleteComponent,\r\n        ButtonTerminateComponent,\r\n        ButtonReportComponent,\r\n        ButtonGenerateComponent,\r\n        ButtonSendComponent,\r\n        ButtonRenewComponent,\r\n        ButtonBackComponent\r\n    ],\r\n})\r\nexport class LinovButtonModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ButtonAddComponent"
                        },
                        {
                            "name": "ButtonBackComponent"
                        },
                        {
                            "name": "ButtonCancelComponent"
                        },
                        {
                            "name": "ButtonDeleteComponent"
                        },
                        {
                            "name": "ButtonDownloadComponent"
                        },
                        {
                            "name": "ButtonDownloadLaporanComponent"
                        },
                        {
                            "name": "ButtonEditComponent"
                        },
                        {
                            "name": "ButtonGenerateComponent"
                        },
                        {
                            "name": "ButtonKembaliComponent"
                        },
                        {
                            "name": "ButtonMultiActionComponent"
                        },
                        {
                            "name": "ButtonProcessComponent"
                        },
                        {
                            "name": "ButtonRenewComponent"
                        },
                        {
                            "name": "ButtonReportComponent"
                        },
                        {
                            "name": "ButtonSaveComponent"
                        },
                        {
                            "name": "ButtonSendComponent"
                        },
                        {
                            "name": "ButtonTerminateComponent"
                        },
                        {
                            "name": "ButtonUpdateComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ButtonAddComponent"
                        },
                        {
                            "name": "ButtonBackComponent"
                        },
                        {
                            "name": "ButtonCancelComponent"
                        },
                        {
                            "name": "ButtonDeleteComponent"
                        },
                        {
                            "name": "ButtonDownloadComponent"
                        },
                        {
                            "name": "ButtonDownloadLaporanComponent"
                        },
                        {
                            "name": "ButtonEditComponent"
                        },
                        {
                            "name": "ButtonGenerateComponent"
                        },
                        {
                            "name": "ButtonKembaliComponent"
                        },
                        {
                            "name": "ButtonMultiActionComponent"
                        },
                        {
                            "name": "ButtonProcessComponent"
                        },
                        {
                            "name": "ButtonRenewComponent"
                        },
                        {
                            "name": "ButtonReportComponent"
                        },
                        {
                            "name": "ButtonSaveComponent"
                        },
                        {
                            "name": "ButtonSendComponent"
                        },
                        {
                            "name": "ButtonTerminateComponent"
                        },
                        {
                            "name": "ButtonUpdateComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "LinovTableModule",
            "id": "module-LinovTableModule-f9d7359af45bfaa364f06dc88d737c6875ecc42d3249572b72038f6485beaa6ae77c602eb522cfa495910d2759e2f27f3e64ddc25227eca55654e6ddd0a7d1f1",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/core/shared-component/table/table.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PipeModule } from '../../pipe/pipe.module';\nimport { TableModule } from 'primeng/table';\nimport { TableComponent } from './table.component';\n\n@NgModule({\n    declarations: [TableComponent],\n    imports: [CommonModule,TableModule,PipeModule],\n    exports: [TableComponent],\n})\nexport class LinovTableModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "TableComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "TableComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "LovModule",
            "id": "module-LovModule-9c1f30a1258db3468f67b007baebe55d5eb56470acea8e97d541e19a3836cf513dcc0d2859c44f3d6afcf3d5c9f262272bb58aa556c0585ea7a2e62d8d1bc9b1",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/core/shared-component/lov/lov.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ProgressBarModule } from 'primeng/progressbar';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { FormsModule } from '@angular/forms';\nimport { LovComponent } from './lov.component';\n\n@NgModule({\n  declarations: [LovComponent],\n  imports: [\n    CommonModule,\n    DropdownModule,\n    FormsModule,\n    ProgressBarModule,\n  ],\n  exports:[LovComponent]\n})\nexport class LovModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "LovComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "LovComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "MenusModule",
            "id": "module-MenusModule-18dbd1c1b8266c884cf0497b436bcc194a469ca5a4b41c209640f6af3b30c1be9ef6bed7274c819829469c83ec4722851ac79daa9e71c45784445b9841a642aa",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/showcase/components/menus/menus.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { PaymentComponent } from './payment.component';\r\nimport { SeatComponent } from './seat.component';\r\nimport { PersonalComponent } from './personal.component';\r\nimport { ConfirmationComponent } from './confirmation.component';\r\nimport { MenusComponent } from './menus.component';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild([\r\n        {path:'',component: MenusComponent, children:[\r\n\t\t\t\t{path:'', redirectTo: 'personal', pathMatch: 'full'},\r\n\t\t\t\t{path: 'personal', component: PersonalComponent},\r\n\t\t\t\t{path: 'confirmation', component: ConfirmationComponent},\r\n\t\t\t\t{path: 'seat', component: SeatComponent},\r\n\t\t\t\t{path: 'payment', component: PaymentComponent}\r\n        ]}\r\n    ])\r\n  ],\r\n  exports: [RouterModule]\r\n})\r\nexport class MenusModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PipeModule",
            "id": "module-PipeModule-f4d4a27f8c0d3e402ef73c3ff2ce4c332764992dca2323c1ac80aeee7e990ea198ad22c4bf568e81550d3c28097066c571b953a654d2b3af589e64ca78796298",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/core/pipe/pipe.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CheckDateValidPipe } from './check-date.pipe';\r\nimport { CurrPipe } from './curr.pipe';\r\nimport { FormatDatePipe } from './date-format.pipe';\r\nimport { SpaceToCommaPipe } from './space-to-comma.pipe';\r\nimport { FormatTimePipe } from './time-format.pipe';\r\nimport { FormatDateTimeZonePipe } from './dateTimeZone-format.pipe';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        FormatDatePipe,\r\n        SpaceToCommaPipe,\r\n        FormatTimePipe,\r\n        CheckDateValidPipe,\r\n        FormatDateTimeZonePipe,\r\n        CurrPipe,\r\n    ],\r\n    exports: [\r\n        FormatDatePipe,\r\n        SpaceToCommaPipe,\r\n        FormatTimePipe,\r\n        CheckDateValidPipe,\r\n        FormatDateTimeZonePipe,\r\n        CurrPipe,\r\n    ],\r\n})\r\nexport class PipeModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CheckDateValidPipe"
                        },
                        {
                            "name": "CurrPipe"
                        },
                        {
                            "name": "FormatDatePipe"
                        },
                        {
                            "name": "FormatDateTimeZonePipe"
                        },
                        {
                            "name": "FormatTimePipe"
                        },
                        {
                            "name": "SpaceToCommaPipe"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CheckDateValidPipe"
                        },
                        {
                            "name": "CurrPipe"
                        },
                        {
                            "name": "FormatDatePipe"
                        },
                        {
                            "name": "FormatDateTimeZonePipe"
                        },
                        {
                            "name": "FormatTimePipe"
                        },
                        {
                            "name": "SpaceToCommaPipe"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "RoleModule",
            "id": "module-RoleModule-e2a17db8f6a7c189fe74ce702e0197df21afb1b1cf79f745d0e2ea449a62133a5b860b0b1160d4c71638024e37a937f654713311259348d3e9829b2db731a444",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/util/role/role.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RoleListComponent } from './list/role-list.component';\r\nimport { SharedComponentModule } from 'src/app/core/shared-component/shared-component.module';\r\nimport { DialogModule } from 'primeng/dialog';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    RoleListComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SharedComponentModule,\r\n    DialogModule\r\n  ]\r\n})\r\nexport class RoleModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "RoleListComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SharedComponentModule",
            "id": "module-SharedComponentModule-f7e62e58f6a44351485f099b5ee955c2c6728f4443a7f78fb378e2a9a3627c5de1a6adedb03c8fdc961fab8ecbd349f33c1a02666ad5bda124a3a6a36c699531",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/core/shared-component/shared-component.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ErrorFieldHelperComponent } from './error-field-helper/error-field-helper.component';\r\nimport { LinovButtonModule } from './linov-button/linov-button.module';\r\nimport { LovModule } from './lov/lov.module';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { PipeModule } from '../pipe/pipe.module';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { SearchComponent } from './search/search.component';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { ConfirmationService } from 'primeng/api';\r\nimport { TableModule } from 'primeng/table';\r\nimport { DummyService } from '../service/dummy.service';\r\nimport { InputTextareaModule } from 'primeng/inputtextarea';\r\nimport { CalendarModule } from 'primeng/calendar';\r\nimport { ApprovalStatusComponent } from './approval-status/approval-status.component';\r\nimport { DirectiveModule } from '../directive/directive.module';\r\nimport { SkeletonModule } from 'primeng/skeleton';\r\nimport { CheckboxModule } from 'primeng/checkbox';\r\nimport { LinovUploadComponent } from './linov-upload/linov-upload.component';\r\nimport { DialogModule } from 'primeng/dialog';\r\nimport { ProgressBarModule } from 'primeng/progressbar';\r\nimport { InformationViewComponent } from './information-view/information-view.component';\r\nimport { CheckboxAllComponent } from './checkbox-all/checkbox-all.component';\r\nimport { LinovTableModule } from './table/table.module';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        ErrorFieldHelperComponent,\r\n        SearchComponent,\r\n        ApprovalStatusComponent,\r\n        LinovUploadComponent,\r\n        InformationViewComponent,\r\n        CheckboxAllComponent,\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        PipeModule,\r\n        FormsModule,\r\n        DropdownModule,\r\n        TranslateModule,\r\n        ReactiveFormsModule,\r\n        ButtonModule,\r\n        InputTextModule,\r\n        ProgressBarModule,\r\n        CalendarModule,\r\n        TableModule,\r\n        CheckboxModule,\r\n        LinovTableModule\r\n    ],\r\n    exports: [\r\n        LovModule,\r\n        LinovButtonModule,\r\n        PipeModule,\r\n        ErrorFieldHelperComponent,\r\n        TranslateModule,\r\n        SearchComponent,\r\n        ReactiveFormsModule,\r\n        ButtonModule,\r\n        InputTextModule,\r\n        TableModule,\r\n        InputTextareaModule,\r\n        CalendarModule,\r\n        ApprovalStatusComponent,\r\n        DirectiveModule,\r\n        SkeletonModule,\r\n        CheckboxModule,\r\n        FormsModule,\r\n        LinovUploadComponent,\r\n        DirectiveModule,\r\n        DialogModule,\r\n        DropdownModule,\r\n        InformationViewComponent,\r\n        CheckboxAllComponent,\r\n        LinovTableModule\r\n    ],\r\n    providers: [ConfirmationService, DummyService],\r\n})\r\nexport class SharedComponentModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "DummyService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ApprovalStatusComponent"
                        },
                        {
                            "name": "CheckboxAllComponent"
                        },
                        {
                            "name": "ErrorFieldHelperComponent"
                        },
                        {
                            "name": "InformationViewComponent"
                        },
                        {
                            "name": "LinovUploadComponent"
                        },
                        {
                            "name": "SearchComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "LinovTableModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ApprovalStatusComponent"
                        },
                        {
                            "name": "CheckboxAllComponent"
                        },
                        {
                            "name": "DirectiveModule"
                        },
                        {
                            "name": "DirectiveModule"
                        },
                        {
                            "name": "ErrorFieldHelperComponent"
                        },
                        {
                            "name": "InformationViewComponent"
                        },
                        {
                            "name": "LinovButtonModule"
                        },
                        {
                            "name": "LinovTableModule"
                        },
                        {
                            "name": "LinovUploadComponent"
                        },
                        {
                            "name": "LovModule"
                        },
                        {
                            "name": "SearchComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ShowcaseModule",
            "id": "module-ShowcaseModule-c359da065a251ae463171a2158d0a59d373071729b0293d109b8e46223fbd5f9afab17819dc27504f5ac3aacadc99757c2c42a1089da6677b5fc4d934411570b",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/showcase/showcase.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BlocksComponent } from './components/blocks/blocks.component';\r\nimport { BlockViewer } from './components/blockviewer/blockviewer.component';\r\nimport { ButtonComponent } from './components/button/button.component';\r\nimport { ChartsComponent } from './components/charts/charts.component';\r\nimport { CrudComponent } from './components/crud/crud.component';\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\nimport { DocumentationComponent } from './components/documentation/documentation.component';\r\nimport { EmptyComponent } from './components/empty/empty.component';\r\nimport { FileComponent } from './components/file/file.component';\r\nimport { FloatLabelComponent } from './components/floatlabel/floatlabel.component';\r\nimport { FormLayoutComponent } from './components/formlayout/formlayout.component';\r\nimport { IconsComponent } from './components/icons/icons.component';\r\nimport { InputComponent } from './components/input/input.component';\r\nimport { InvalidStateComponent } from './components/invalidstate/invalidstate.component';\r\nimport { ListComponent } from './components/list/list.component';\r\nimport { MediaComponent } from './components/media/media.component';\r\nimport { ConfirmationComponent } from './components/menus/confirmation.component';\r\nimport { MenusComponent } from './components/menus/menus.component';\r\nimport { PaymentComponent } from './components/menus/payment.component';\r\nimport { PersonalComponent } from './components/menus/personal.component';\r\nimport { SeatComponent } from './components/menus/seat.component';\r\nimport { MessagesComponent } from './components/messages/messages.component';\r\nimport { MiscComponent } from './components/misc/misc.component';\r\nimport { OverlaysComponent } from './components/overlays/overlays.component';\r\nimport { PanelsComponent } from './components/panels/panels.component';\r\nimport { TableComponent } from './components/table/table.component';\r\nimport { TimelineComponent } from './components/timeline/timeline.component';\r\nimport { TreeComponent } from './components/tree/tree.component';\r\nimport { CountryService } from './service/countryservice';\r\nimport { CustomerService } from './service/customerservice';\r\nimport { EventService } from './service/eventservice';\r\nimport { IconService } from './service/iconservice';\r\nimport { NodeService } from './service/nodeservice';\r\nimport { PhotoService } from './service/photoservice';\r\nimport { ProductService } from './service/productservice';\r\nimport { AccordionModule } from 'primeng/accordion';\r\nimport { AutoCompleteModule } from 'primeng/autocomplete';\r\nimport { AvatarModule } from 'primeng/avatar';\r\nimport { AvatarGroupModule } from 'primeng/avatargroup';\r\nimport { BadgeModule } from 'primeng/badge';\r\nimport { BreadcrumbModule } from 'primeng/breadcrumb';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { CalendarModule } from 'primeng/calendar';\r\nimport { CardModule } from 'primeng/card';\r\nimport { CarouselModule } from 'primeng/carousel';\r\nimport { CascadeSelectModule } from 'primeng/cascadeselect';\r\nimport { ChartModule } from 'primeng/chart';\r\nimport { CheckboxModule } from 'primeng/checkbox';\r\nimport { ChipModule } from 'primeng/chip';\r\nimport { ChipsModule } from 'primeng/chips';\r\nimport { ColorPickerModule } from 'primeng/colorpicker';\r\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\r\nimport { ConfirmPopupModule } from 'primeng/confirmpopup';\r\nimport { ContextMenuModule } from 'primeng/contextmenu';\r\nimport { DataViewModule } from 'primeng/dataview';\r\nimport { DialogModule } from 'primeng/dialog';\r\nimport { DividerModule } from 'primeng/divider';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { FieldsetModule } from 'primeng/fieldset';\r\nimport { FileUploadModule } from 'primeng/fileupload';\r\nimport { GalleriaModule } from 'primeng/galleria';\r\nimport { ImageModule } from 'primeng/image';\r\nimport { InplaceModule } from 'primeng/inplace';\r\nimport { InputMaskModule } from 'primeng/inputmask';\r\nimport { InputNumberModule } from 'primeng/inputnumber';\r\nimport { InputSwitchModule } from 'primeng/inputswitch';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { InputTextareaModule } from 'primeng/inputtextarea';\r\nimport { KnobModule } from 'primeng/knob';\r\nimport { ListboxModule } from 'primeng/listbox';\r\nimport { MegaMenuModule } from 'primeng/megamenu';\r\nimport { MenuModule } from 'primeng/menu';\r\nimport { MenubarModule } from 'primeng/menubar';\r\nimport { MessageModule } from 'primeng/message';\r\nimport { MessagesModule } from 'primeng/messages';\r\nimport { MultiSelectModule } from 'primeng/multiselect';\r\nimport { OrderListModule } from 'primeng/orderlist';\r\nimport { OrganizationChartModule } from 'primeng/organizationchart';\r\nimport { OverlayPanelModule } from 'primeng/overlaypanel';\r\nimport { PaginatorModule } from 'primeng/paginator';\r\nimport { PanelModule } from 'primeng/panel';\r\nimport { PanelMenuModule } from 'primeng/panelmenu';\r\nimport { PasswordModule } from 'primeng/password';\r\nimport { PickListModule } from 'primeng/picklist';\r\nimport { ProgressBarModule } from 'primeng/progressbar';\r\nimport { RadioButtonModule } from 'primeng/radiobutton';\r\nimport { RatingModule } from 'primeng/rating';\r\nimport { RippleModule } from 'primeng/ripple';\r\nimport { ScrollPanelModule } from 'primeng/scrollpanel';\r\nimport { ScrollTopModule } from 'primeng/scrolltop';\r\nimport { SelectButtonModule } from 'primeng/selectbutton';\r\nimport { SidebarModule } from 'primeng/sidebar';\r\nimport { SkeletonModule } from 'primeng/skeleton';\r\nimport { SlideMenuModule } from 'primeng/slidemenu';\r\nimport { SliderModule } from 'primeng/slider';\r\nimport { SplitButtonModule } from 'primeng/splitbutton';\r\nimport { SplitterModule } from 'primeng/splitter';\r\nimport { StepsModule } from 'primeng/steps';\r\nimport { TableModule } from 'primeng/table';\r\nimport { TabMenuModule } from 'primeng/tabmenu';\r\nimport { TabViewModule } from 'primeng/tabview';\r\nimport { TagModule } from 'primeng/tag';\r\nimport { TerminalModule } from 'primeng/terminal';\r\nimport { TieredMenuModule } from 'primeng/tieredmenu';\r\nimport { TimelineModule } from 'primeng/timeline';\r\nimport { ToastModule } from 'primeng/toast';\r\nimport { ToggleButtonModule } from 'primeng/togglebutton';\r\nimport { ToolbarModule } from 'primeng/toolbar';\r\nimport { TooltipModule } from 'primeng/tooltip';\r\nimport { TreeModule } from 'primeng/tree';\r\nimport { TreeSelectModule } from 'primeng/treeselect';\r\nimport { TreeTableModule } from 'primeng/treetable';\r\nimport { VirtualScrollerModule } from 'primeng/virtualscroller';\r\nimport { AppCodeModule } from './components/app-code/app.code.component';\r\nimport { ShowcaseRoutingModule } from './showcase.routing.module';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ShowcaseRoutingModule,\r\n    AccordionModule,\r\n    AutoCompleteModule,\r\n    AvatarModule,\r\n    AvatarGroupModule,\r\n    BadgeModule,\r\n    BreadcrumbModule,\r\n    ButtonModule,\r\n    CalendarModule,\r\n    CardModule,\r\n    CarouselModule,\r\n    CascadeSelectModule,\r\n    ChartModule,\r\n    CheckboxModule,\r\n    ChipsModule,\r\n    ChipModule,\r\n    ConfirmDialogModule,\r\n    ConfirmPopupModule,\r\n    ColorPickerModule,\r\n    ContextMenuModule,\r\n    DataViewModule,\r\n    DialogModule,\r\n    DividerModule,\r\n    DropdownModule,\r\n    FieldsetModule,\r\n    FileUploadModule,\r\n    GalleriaModule,\r\n    ImageModule,\r\n    InplaceModule,\r\n    InputNumberModule,\r\n    InputMaskModule,\r\n    InputSwitchModule,\r\n    InputTextModule,\r\n    InputTextareaModule,\r\n    KnobModule,\r\n    ListboxModule,\r\n    MegaMenuModule,\r\n    MenuModule,\r\n    MenubarModule,\r\n    MessageModule,\r\n    MessagesModule,\r\n    MultiSelectModule,\r\n    OrderListModule,\r\n    OrganizationChartModule,\r\n    OverlayPanelModule,\r\n    PaginatorModule,\r\n    PanelModule,\r\n    PanelMenuModule,\r\n    PasswordModule,\r\n    PickListModule,\r\n    ProgressBarModule,\r\n    RadioButtonModule,\r\n    RatingModule,\r\n    RippleModule,\r\n    ScrollPanelModule,\r\n    ScrollTopModule,\r\n    SelectButtonModule,\r\n    SidebarModule,\r\n    SkeletonModule,\r\n    SlideMenuModule,\r\n    SliderModule,\r\n    SplitButtonModule,\r\n    SplitterModule,\r\n    StepsModule,\r\n    TagModule,\r\n    TableModule,\r\n    TabMenuModule,\r\n    TabViewModule,\r\n    TerminalModule,\r\n    TieredMenuModule,\r\n    TimelineModule,\r\n    ToastModule,\r\n    ToggleButtonModule,\r\n    ToolbarModule,\r\n    TooltipModule,\r\n    TreeModule,\r\n    TreeSelectModule,\r\n    TreeTableModule,\r\n    VirtualScrollerModule,\r\n    AppCodeModule],\r\n  declarations: [\r\n    DashboardComponent,\r\n    FormLayoutComponent,\r\n    FloatLabelComponent,\r\n    InvalidStateComponent,\r\n    InputComponent,\r\n    ButtonComponent,\r\n    TableComponent,\r\n    ListComponent,\r\n    TreeComponent,\r\n    PanelsComponent,\r\n    OverlaysComponent,\r\n    MenusComponent,\r\n    MessagesComponent,\r\n    MessagesComponent,\r\n    MiscComponent,\r\n    ChartsComponent,\r\n    EmptyComponent,\r\n    FileComponent,\r\n    IconsComponent,\r\n    DocumentationComponent,\r\n    CrudComponent,\r\n    TimelineComponent,\r\n    BlocksComponent,\r\n    BlockViewer,\r\n    MediaComponent,\r\n    PaymentComponent,\r\n    ConfirmationComponent,\r\n    PersonalComponent,\r\n    SeatComponent,\r\n  ],providers:[\r\n    CountryService, CustomerService, EventService, IconService, NodeService,\r\n    PhotoService, ProductService]\r\n})\r\nexport class ShowcaseModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "CountryService"
                        },
                        {
                            "name": "CustomerService"
                        },
                        {
                            "name": "EventService"
                        },
                        {
                            "name": "IconService"
                        },
                        {
                            "name": "NodeService"
                        },
                        {
                            "name": "PhotoService"
                        },
                        {
                            "name": "ProductService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "BlockViewer"
                        },
                        {
                            "name": "BlocksComponent"
                        },
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "ChartsComponent"
                        },
                        {
                            "name": "ConfirmationComponent"
                        },
                        {
                            "name": "CrudComponent"
                        },
                        {
                            "name": "DocumentationComponent"
                        },
                        {
                            "name": "EmptyComponent"
                        },
                        {
                            "name": "FileComponent"
                        },
                        {
                            "name": "FloatLabelComponent"
                        },
                        {
                            "name": "FormLayoutComponent"
                        },
                        {
                            "name": "IconsComponent"
                        },
                        {
                            "name": "InputComponent"
                        },
                        {
                            "name": "InvalidStateComponent"
                        },
                        {
                            "name": "ListComponent"
                        },
                        {
                            "name": "MediaComponent"
                        },
                        {
                            "name": "MenusComponent"
                        },
                        {
                            "name": "MessagesComponent"
                        },
                        {
                            "name": "MessagesComponent"
                        },
                        {
                            "name": "MiscComponent"
                        },
                        {
                            "name": "OverlaysComponent"
                        },
                        {
                            "name": "PanelsComponent"
                        },
                        {
                            "name": "PaymentComponent"
                        },
                        {
                            "name": "PersonalComponent"
                        },
                        {
                            "name": "SeatComponent"
                        },
                        {
                            "name": "TimelineComponent"
                        },
                        {
                            "name": "TreeComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppCodeModule"
                        },
                        {
                            "name": "ShowcaseRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ShowcaseRoutingModule",
            "id": "module-ShowcaseRoutingModule-83b69176439f10d5c159e3b3fc949d704cb52b4b97ba39902fb0d67929b049183a01988c52a31970f0d39e237fd083182c6d114720fdfe530af2c7099ed4c114",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/showcase/showcase.routing.module.ts",
            "methods": [],
            "sourceCode": "import { RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { BlocksComponent } from './components/blocks/blocks.component';\r\nimport { ButtonComponent } from './components/button/button.component';\r\nimport { ChartsComponent } from './components/charts/charts.component';\r\nimport { CrudComponent } from './components/crud/crud.component';\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\nimport { DocumentationComponent } from './components/documentation/documentation.component';\r\nimport { EmptyComponent } from './components/empty/empty.component';\r\nimport { FileComponent } from './components/file/file.component';\r\nimport { FloatLabelComponent } from './components/floatlabel/floatlabel.component';\r\nimport { FormLayoutComponent } from './components/formlayout/formlayout.component';\r\nimport { IconsComponent } from './components/icons/icons.component';\r\nimport { InputComponent } from './components/input/input.component';\r\nimport { InvalidStateComponent } from './components/invalidstate/invalidstate.component';\r\nimport { ListComponent } from './components/list/list.component';\r\nimport { MediaComponent } from './components/media/media.component';\r\nimport { MessagesComponent } from './components/messages/messages.component';\r\nimport { MiscComponent } from './components/misc/misc.component';\r\nimport { OverlaysComponent } from './components/overlays/overlays.component';\r\nimport { PanelsComponent } from './components/panels/panels.component';\r\nimport { TableComponent } from './components/table/table.component';\r\nimport { TimelineComponent } from './components/timeline/timeline.component';\r\nimport { TreeComponent } from './components/tree/tree.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild([\r\n            {path: '', component: DashboardComponent},\r\n            {path: 'uikit/formlayout', component: FormLayoutComponent},\r\n            {path: 'uikit/input', component: InputComponent},\r\n            {path: 'uikit/floatlabel', component: FloatLabelComponent},\r\n            {path: 'uikit/invalidstate', component: InvalidStateComponent},\r\n            {path: 'uikit/button', component: ButtonComponent},\r\n            {path: 'uikit/table', component: TableComponent},\r\n            {path: 'uikit/list', component: ListComponent},\r\n            {path: 'uikit/tree', component: TreeComponent},\r\n            {path: 'uikit/panel', component: PanelsComponent},\r\n            {path: 'uikit/overlay', component: OverlaysComponent},\r\n            {path: 'uikit/media', component: MediaComponent},\r\n            {path: 'uikit/menu', loadChildren: () => import('./components/menus/menus.module').then(m => m.MenusModule)},\r\n            {path: 'uikit/message', component: MessagesComponent},\r\n            {path: 'uikit/misc', component: MiscComponent},\r\n            {path: 'uikit/charts', component: ChartsComponent},\r\n            {path: 'uikit/file', component: FileComponent},\r\n            {path: 'pages/crud', component: CrudComponent},\r\n            {path: 'pages/timeline', component: TimelineComponent},\r\n            {path: 'pages/empty', component: EmptyComponent},\r\n            {path: 'icons', component: IconsComponent},\r\n            {path: 'blocks', component: BlocksComponent},\r\n            {path: 'documentation', component: DocumentationComponent}\r\n        ])\r\n    ],\r\n    exports: [RouterModule]\r\n})\r\nexport class ShowcaseRoutingModule {\r\n}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "UserModule",
            "id": "module-UserModule-335cfc4189869bee244334c7d086630358ddeb5c9975cf630fd42f5e7f25cb4f82a2fe9567808e932459dc24bb8c7149241bdf9ea8c4cf3910a849feebcc04df",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/util/user/user.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { UserListComponent } from './list/user-list.component';\r\nimport { UserAddComponent } from './add/user-add.component';\r\nimport { UserEditComponent } from './edit/user-edit.component';\r\nimport { UserDetailComponent } from './detail/user-detail.component';\r\nimport { SharedComponentModule } from 'src/app/core/shared-component/shared-component.module';\r\nimport { PasswordModule } from 'primeng/password';\r\nimport { InputSwitchModule } from 'primeng/inputswitch';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    UserListComponent,\r\n    UserAddComponent,\r\n    UserEditComponent,\r\n    UserDetailComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SharedComponentModule,\r\n    PasswordModule,\r\n    InputSwitchModule\r\n  ]\r\n})\r\nexport class UserModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "UserAddComponent"
                        },
                        {
                            "name": "UserDetailComponent"
                        },
                        {
                            "name": "UserEditComponent"
                        },
                        {
                            "name": "UserListComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "UtilCompanyModule",
            "id": "module-UtilCompanyModule-3ca6a6fc58e93536da5c3d56e4fffaf011f867796bf38486f7eb80b7481365bafd53eb0c4392c2759b74577cbdc4ecd2d18e2f1113ac000eea1ed8fe84bc5659",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/util/company/util-company.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { UtilCompanyListComponent } from './list/util-company-list.component';\r\nimport { UtilCompanyAddComponent } from './add/util-company-add.component';\r\nimport { UtilCompanyDetailComponent } from './detail/util-company-detail.component';\r\nimport { UtilCompanyEditComponent } from './edit/util-company-edit.component';\r\nimport { SharedComponentModule } from 'src/app/core/shared-component/shared-component.module';\r\nimport { DialogModule } from 'primeng/dialog';\r\nimport { CalendarModule } from 'primeng/calendar';\r\nimport { InputSwitchModule } from 'primeng/inputswitch';\r\nimport { InputMaskModule } from 'primeng/inputmask';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        UtilCompanyListComponent,\r\n        UtilCompanyAddComponent,\r\n        UtilCompanyDetailComponent,\r\n        UtilCompanyEditComponent,\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        SharedComponentModule,\r\n        DialogModule,\r\n        CalendarModule,\r\n        InputSwitchModule,\r\n        InputMaskModule,\r\n    ],\r\n})\r\nexport class UtilCompanyModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "UtilCompanyAddComponent"
                        },
                        {
                            "name": "UtilCompanyDetailComponent"
                        },
                        {
                            "name": "UtilCompanyEditComponent"
                        },
                        {
                            "name": "UtilCompanyListComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "UtilModule",
            "id": "module-UtilModule-d191da9a0590f7340a55324b54c07269c58a254bd9e5ae49b108b87d824c0112923f710bccab288a8951241c0facf59e82361eafc9478c257e513e1954596c70",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/util/util.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { UtilRoutingModule } from './util-routing.module';\r\nimport { RoleModule } from './role/role.module';\r\nimport { UserModule } from './user/user.module';\r\nimport { UtilCompanyModule } from './company/util-company.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    UtilRoutingModule,\r\n    RoleModule,\r\n    UserModule,\r\n    UtilCompanyModule\r\n  ]\r\n})\r\nexport class UtilModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "RoleModule"
                        },
                        {
                            "name": "UserModule"
                        },
                        {
                            "name": "UtilCompanyModule"
                        },
                        {
                            "name": "UtilRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "UtilRoutingModule",
            "id": "module-UtilRoutingModule-7a221e30a7175eb0d08da91c33a2695fc83690a702f94827d2f202b65a094c07e8bec62812040236b466d983c69833efbce58395906f94f34a838be4275ad97b",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/util/util-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { UtilCompanyAddComponent } from \"./company/add/util-company-add.component\";\r\nimport { UtilCompanyDetailComponent } from \"./company/detail/util-company-detail.component\";\r\nimport { UtilCompanyEditComponent } from \"./company/edit/util-company-edit.component\";\r\nimport { UtilCompanyListComponent } from \"./company/list/util-company-list.component\";\r\nimport { RoleListComponent } from \"./role/list/role-list.component\";\r\nimport { UserAddComponent } from \"./user/add/user-add.component\";\r\nimport { UserDetailComponent } from \"./user/detail/user-detail.component\";\r\nimport { UserEditComponent } from \"./user/edit/user-edit.component\";\r\nimport { UserListComponent } from \"./user/list/user-list.component\";\r\n\r\n\r\n\r\nconst routes: Routes = [{\r\n        path: 'user',\r\n        children: [{\r\n                path: '',\r\n                component: UserListComponent\r\n            },\r\n            {\r\n                path: 'add',\r\n                component: UserAddComponent\r\n            },\r\n            {\r\n                path: 'edit/:id',\r\n                component: UserEditComponent\r\n            },\r\n            {\r\n                path: ':id',\r\n                component: UserDetailComponent\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        path: 'role',\r\n        children: [{\r\n            path: '',\r\n            component: RoleListComponent\r\n        }]\r\n    },\r\n    {\r\n        path: 'company',\r\n        children: [{\r\n                path: '',\r\n                component: UtilCompanyListComponent\r\n            },\r\n            {\r\n                path: 'add',\r\n                component: UtilCompanyAddComponent\r\n            },\r\n            {\r\n                path: 'edit/:id',\r\n                component: UtilCompanyEditComponent\r\n            },\r\n            {\r\n                path: ':id',\r\n                component: UtilCompanyDetailComponent\r\n            }\r\n        ]\r\n    }\r\n]\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class UtilRoutingModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "AppConstant",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/config/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n    userSessionKey: btoa('currSession'),\r\n    resetPasswordMessage: 'Apakah Anda yakin akan <b>mereset</b> password?',\r\n    prepaymentMessage: 'Apakah Anda yakin akan melanjutkan <b>pembayaran</b>?',\r\n    activateMessage:\r\n        'Apakah Anda yakin akan <b>mengaktifkan</b> <br> pengguna ini?',\r\n    deactivateMessage:\r\n        'Apakah Anda yakin akan <b>menonaktfikan</b> <br> pengguna ini?',\r\n    paidMessage: 'Apakah Anda yakin untuk <b>membayarkan</b> data ini?',\r\n    reopenMessage: 'Apakah Anda yakin akan <b>membuka kembali</b> proses?',\r\n    extendMessage: 'Apakah Anda yakin akan <b>memperpanjang?</b>',\r\n    terminateMessage: 'Apakah Anda yakin akan <b>memberhentikan?</b>',\r\n    closeMessage: 'Apakah Anda yakin akan <b>menyelesaikan</b> proses ?',\r\n    rollbackMessage: 'Apakah Anda yakin akan <b>membalikan</b> proses?',\r\n    cancelMessage: 'Apakah Anda yakin untuk <b>membatalkan</b> data ini?',\r\n    kembaliMessage: 'Apakah Anda yakin akan <b>kembali</b> ke halaman utama?',\r\n    processMessage: 'Apakah Anda yakin akan <b>memproses</b>?',\r\n    rejectMessage: 'Apakah Anda yakin untuk <b>menolak</b> data ini?',\r\n    sendMessage: 'Apakah Anda yakin untuk <b>mengaktivasi premium</b>?',\r\n    renewMessage: 'Apakah Anda yakin untuk <b>perpanjang premium</b>?',\r\n    approveMessage: 'Apakah Anda yakin untuk <b>menyetujui</b> data ini?',\r\n    updateMessage: 'Apakah Anda yakin akan <b>memperbarui</b>?',\r\n    absenMessage:\r\n        'Apakah anda yakin akan mengganti status <br> kehadiran, menjadi <b>Absen</b>?',\r\n    deleteMessage: 'Apakah Anda yakin akan <b>menghapus</b> data ini?',\r\n    earlyOutMessage:\r\n        'Apakah Anda yakin akan mengganti status <br> kehadiran, menjadi <b>Pulang Cepat</b>?',\r\n    lateMessage:\r\n        'Apakah Anda yakin akan mengganti status <br> kehadiran, menjadi <b>Terlambat</b>?',\r\n    presentMessage:\r\n        'Apakah Anda yakin akan mengganti status <br> kehadiran, menjadi <b>Hadir</b>?',\r\n    ApprovedMessage: 'Apakah Anda yakin untuk <b>menyetujui</b> data ini?',\r\n    RejectedMessage: 'Apakah Anda yakin untuk <b>menolak</b> data ini?',\r\n    PaidMessage: 'Apakah Anda yakin untuk <b>membayarkan</b> data ini?',\r\n    changeBalance:\r\n        'Perubahan persentasi pengajuan gaji instan berlaku di bulan berikutnya.',\r\n    month: [\r\n        'Januari',\r\n        'Februari',\r\n        'Maret',\r\n        'April',\r\n        'Mei',\r\n        'Juni',\r\n        'Juli',\r\n        'Agustus',\r\n        'September',\r\n        'Oktober',\r\n        'November',\r\n        'Desember',\r\n    ],\r\n    rowsPerPage: 10,\r\n    rowsPerPageOptions: [10, 20, 50],\r\n    rowsCard: 9,\r\n    rowsCardOptions: [9, 18, 27],\r\n}",
                "rawdescription": "List of Application constants",
                "description": "<p>List of Application constants</p>\n"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.develop.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: true,\r\n  apiUrl:\"https://api-dev-umkm.linovhr.com/api/v1/\",\r\n  isSSO:false,\r\n  linovWordpress:'https://www.linovhr.com/'\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: true,\r\n  apiUrl:\"https://api-upahku.linovhr.com/api/v1/\",\r\n  isSSO:true,\r\n  linovWordpress:'https://www.upahku.id/login/'\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.staging.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: true,\r\n  apiUrl:\"https://api-dev-umkm.linovhr.com/api/v1/\",\r\n  isSSO:false,\r\n  linovWordpress:'https://www.upahku.id/login/'\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: false,\r\n  apiUrl:\"https://api-dev-umkm.linovhr.com/api/v1/\",\r\n  isSSO:false,\r\n  linovWordpress:'https://www.upahku.id/login/'\r\n}"
            },
            {
                "name": "interceptorProviders",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n    {\r\n        provide: HTTP_INTERCEPTORS,\r\n        useClass: HttpErrorInterceptor,\r\n        multi: true,\r\n    }\r\n  ]"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    size: 'large',\n    label: 'Button',\n  },\n}"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    user: {\n      name: 'Jane Doe',\n    },\n  },\n}"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: (args: Page) => ({\n    props: args,\n  }),\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const loginButton = await canvas.getByRole('button', {\n      name: /Log in/i,\n    });\n    await userEvent.click(loginButton);\n  },\n}"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: (args: Page) => ({\n    props: args,\n  }),\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<Button>",
                "defaultValue": "{\n  title: 'Example/Button',\n  component: Button,\n  tags: ['autodocs'],\n  render: (args: Button) => ({\n    props: {\n      backgroundColor: null,\n      ...args,\n    },\n  }),\n  argTypes: {\n    backgroundColor: {\n      control: 'color',\n    },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<Header>",
                "defaultValue": "{\n  title: 'Example/Header',\n  component: Header,\n  // This component will have an automatically generated Autodocs entry: https://storybook.js.org/docs/angular/writing-docs/autodocs\n  tags: ['autodocs'],\n  render: (args) => ({ props: args }),\n  decorators: [\n    moduleMetadata({\n      declarations: [Button],\n      imports: [CommonModule],\n    }),\n  ],\n  parameters: {\n    // More on how to position stories at: https://storybook.js.org/docs/angular/configure/story-layout\n    layout: 'fullscreen',\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<Page>",
                "defaultValue": "{\n  title: 'Example/Page',\n  component: Page,\n  parameters: {\n    // More on how to position stories at: https://storybook.js.org/docs/angular/configure/story-layout\n    layout: 'fullscreen',\n  },\n  decorators: [\n    moduleMetadata({\n      declarations: [Button, Header],\n      imports: [CommonModule],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/shared-component/lov/lov.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<LovComponent>",
                "defaultValue": "{\r\n    component: LovComponent,\r\n    tags: ['autodocs'],\r\n    decorators: [\r\n        moduleMetadata({\r\n            imports: [CommonModule,DropdownModule,FormsModule,LovModule,ProgressBarModule,HttpClientModule],\r\n            providers: [ApiService]\r\n        }),\r\n        applicationConfig({\r\n            providers: [\r\n              importProvidersFrom(BrowserAnimationsModule),\r\n            ],\r\n          })\r\n    ],\r\n\r\n    render: (args: LovComponent) => ({\r\n        props: args,\r\n    }),\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/shared-component/table/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TableComponent>",
                "defaultValue": "{\r\n    component: TableComponent,\r\n    tags: ['autodocs'],\r\n    decorators: [\r\n        moduleMetadata({\r\n            imports: [\r\n                TableModule,\r\n                FormsModule,\r\n                CommonModule,\r\n                LinovTableModule,\r\n                PipeModule,\r\n                HttpClientModule\r\n            ],\r\n            providers: [TableService,ApiService,MessageService,MessageBoxService,HelperService],\r\n        }),\r\n        applicationConfig({\r\n            providers: [\r\n              importProvidersFrom(BrowserAnimationsModule),\r\n            ],\r\n          })\r\n    ],\r\n    render: (args: TableComponent) => ({\r\n        props: args,\r\n    }),\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/primeng/buttons/ghost-button/ghost-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<GhostButton>",
                "defaultValue": "{\r\n    component: GhostButton,\r\n    title: \"primeng/buttons/ghost-button/Ghost Button\",\r\n    tags: ['autodocs'],\r\n    decorators: [\r\n        moduleMetadata({\r\n            imports: [ButtonModule],\r\n        }),\r\n    ],\r\n    render: (args: GhostButton) => ({\r\n        props: args,\r\n    }),\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/primeng/buttons/main-button/main-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<MainButton>",
                "defaultValue": "{\r\n    component: MainButton,\r\n    title: \"primeng/buttons/main-button/Main Button\",\r\n    tags: ['autodocs'],\r\n    decorators: [\r\n        moduleMetadata({\r\n            imports: [ButtonModule],\r\n        }),\r\n    ],\r\n    render: (args: MainButton) => ({\r\n        props: args,\r\n    }),\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/primeng/confirm-dialogs/delete-dialog/delete-dialog.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<DeleteDialogComponent>",
                "defaultValue": "{\r\n    component: DeleteDialogComponent,\r\n    title: \"primeng/confirm-dialogs/delete-dialog/Delete Dialog\",\r\n    tags: ['autodocs'],\r\n    decorators: [\r\n        moduleMetadata({\r\n            imports: [FormsModule, DialogModule, ButtonModule, BrowserAnimationsModule]\r\n        }),\r\n    ],\r\n    render: (args: DeleteDialogComponent) => ({\r\n        props: args,\r\n    }),\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/primeng/confirm-dialogs/leave-dialog/leave-dialog.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<LeaveDialogComponent>",
                "defaultValue": "{\r\n    component: LeaveDialogComponent,\r\n    title: \"primeng/confirm-dialogs/leave-dialog/Leave Dialog\",\r\n    tags: ['autodocs'],\r\n    decorators: [\r\n        moduleMetadata({\r\n            imports: [FormsModule, DialogModule, ButtonModule, BrowserAnimationsModule]\r\n        }),\r\n    ],\r\n    render: (args: LeaveDialogComponent) => ({\r\n        props: args,\r\n    }),\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/primeng/confirm-dialogs/save-dialog/save-dialog.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SaveDialogComponent>",
                "defaultValue": "{\r\n    component: SaveDialogComponent,\r\n    title: \"primeng/confirm-dialogs/save-dialog/Save Dialog\",\r\n    tags: ['autodocs'],\r\n    decorators: [\r\n        moduleMetadata({\r\n            imports: [FormsModule, DialogModule, ButtonModule, BrowserAnimationsModule]\r\n        }),\r\n    ],\r\n    render: (args: SaveDialogComponent) => ({\r\n        props: args,\r\n    }),\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/primeng/confirm-dialogs/update-dialog/update-dialog.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<UpdateDialogComponent>",
                "defaultValue": "{\r\n    component: UpdateDialogComponent,\r\n    title: \"primeng/confirm-dialogs/update-dialog/Update Dialog\",\r\n    tags: ['autodocs'],\r\n    decorators: [\r\n        moduleMetadata({\r\n            imports: [FormsModule, DialogModule, ButtonModule, BrowserAnimationsModule]\r\n        }),\r\n    ],\r\n    render: (args: UpdateDialogComponent) => ({\r\n        props: args,\r\n    }),\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/primeng/controls/checkbox/checkbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<CheckboxComponent>",
                "defaultValue": "{\r\n    component: CheckboxComponent,\r\n    title: \"primeng/controls/checkbox/Checkbox\",\r\n    tags: ['autodocs'],\r\n    decorators: [\r\n        moduleMetadata({\r\n            imports: [CheckboxModule, FormsModule],\r\n        }),\r\n    ],\r\n    render: (args: CheckboxComponent) => ({\r\n        props: args,\r\n    }),\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/primeng/controls/radio-button/radio-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<RadioButtonComponent>",
                "defaultValue": "{\r\n    component: RadioButtonComponent,\r\n    title: \"primeng/controls/radio-button/Radio Button\",\r\n    tags: ['autodocs'],\r\n    decorators: [\r\n        moduleMetadata({\r\n            imports: [RadioButtonModule, FormsModule],\r\n        }),\r\n    ],\r\n    render: (args: RadioButtonComponent) => ({\r\n        props: args,\r\n    }),\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/primeng/controls/toggle/toggle.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ToggleComponent>",
                "defaultValue": "{\r\n    component: ToggleComponent,\r\n    title: \"primeng/controls/toggle/Toggle\",\r\n    tags: ['autodocs'],\r\n    decorators: [\r\n        moduleMetadata({\r\n            imports: [InputSwitchModule, FormsModule]\r\n        }),\r\n    ],\r\n    render: (args: ToggleComponent) => ({\r\n        props: args,\r\n    }),\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/primeng/input-fields/input-calendar/input-calendar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<InputCalendar>",
                "defaultValue": "{\r\n    component: InputCalendar,\r\n    title: 'primeng/input-fields/input-calendar',\r\n    tags: ['autodocs'],\r\n    decorators: [\r\n        moduleMetadata({\r\n            imports: [CalendarModule],\r\n        }),\r\n        applicationConfig({\r\n            providers: [importProvidersFrom(BrowserAnimationsModule)],\r\n        }),\r\n    ],\r\n    render: (args: InputCalendar) => ({\r\n        props: args,\r\n    }),\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/primeng/input-fields/input-dropdown/input-dropdown.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<InputDropdown>",
                "defaultValue": "{\r\n    component: InputDropdown,\r\n    title: 'primeng/input-fields/input-dropdown',\r\n    tags: ['autodocs'],\r\n    decorators: [\r\n        moduleMetadata({\r\n            imports: [DropdownModule],\r\n        }),\r\n        applicationConfig({\r\n            providers: [importProvidersFrom(BrowserAnimationsModule)],\r\n        }),\r\n    ],\r\n    render: (args: InputDropdown) => ({\r\n        props: args,\r\n    }),\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/primeng/input-fields/input-file-upload/input-file-upload.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<InputUpload>",
                "defaultValue": "{\r\n    component: InputUpload,\r\n    title: 'primeng/input-fields/input-file-upload',\r\n    tags: ['autodocs'],\r\n    decorators: [\r\n        moduleMetadata({\r\n            imports: [FileUploadModule],\r\n        }),\r\n        applicationConfig({\r\n            providers: [importProvidersFrom(BrowserAnimationsModule)],\r\n        }),\r\n    ],\r\n    render: (args: InputUpload) => ({\r\n        props: args,\r\n    }),\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/primeng/input-fields/input-number/input-number.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<InputNumber>",
                "defaultValue": "{\r\n    component: InputNumber,\r\n    title: 'primeng/input-fields/input-number',\r\n    tags: ['autodocs'],\r\n    decorators: [\r\n        moduleMetadata({\r\n            imports: [InputNumberModule],\r\n        }),\r\n    ],\r\n    render: (args: InputNumber) => ({\r\n        props: args,\r\n    }),\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/primeng/input-fields/input-text/input-text.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<InputText>",
                "defaultValue": "{\r\n    component: InputText,\r\n    title: 'primeng/input-fields/input-text',\r\n    tags: ['autodocs'],\r\n    decorators: [\r\n        moduleMetadata({\r\n            imports: [InputTextModule],\r\n        }),\r\n    ],\r\n    render: (args: InputText) => ({\r\n        props: args,\r\n    }),\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/primeng/input-fields/input-text-area/input-text-area.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<InputTextArea>",
                "defaultValue": "{\r\n    component: InputTextArea,\r\n    title: 'primeng/input-fields/input-text-area',\r\n    tags: ['autodocs'],\r\n    decorators: [\r\n        moduleMetadata({\r\n            imports: [InputTextareaModule],\r\n        }),\r\n    ],\r\n    render: (args: InputTextArea) => ({\r\n        props: args,\r\n    }),\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/shared-component/linov-button/button-add/button-add.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ButtonAddComponent>",
                "defaultValue": "{\r\n    component: ButtonAddComponent,\r\n    tags: ['autodocs'],\r\n    decorators: [\r\n        moduleMetadata({\r\n            imports: [ButtonModule],\r\n        }),\r\n    ],\r\n    render: (args: ButtonAddComponent) => ({\r\n        props: args,\r\n    }),\r\n}"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": ".storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\r\n  parameters: {\r\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\r\n    controls: {\r\n      matchers: {\r\n        color: /(background|color)$/i,\r\n        date: /Date$/,\r\n      },\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    primary: true,\n    label: 'Button',\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/shared-component/lov/lov.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    render: (args: LovComponent) => ({\r\n        props: args,\r\n    }),\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/shared-component/table/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    render: (args: TableComponent) => ({\r\n        props: args,\r\n    }),\r\n    args:{\r\n        columMap:[{\r\n            label: \"Karyawan\",\r\n            key: \"employee\",\r\n            isDate: false,\r\n            isDateTimezone: false,\r\n          },\r\n          {\r\n            label: \"Tanggal\",\r\n            key: \"date\",\r\n            isDate: true,\r\n            isDateTimezone: false,\r\n          },\r\n          {\r\n            label: \"Masuk\",\r\n            key: \"clockIn\",\r\n            isDate: false,\r\n            isDateTimezone: true,\r\n          },\r\n          {\r\n            label: \"Keluar\",\r\n            key: \"clockOut\",\r\n            isDate: false,\r\n            isDateTimezone: true,\r\n          },\r\n          {\r\n            label: \"Lokasi\",\r\n            key: \"location\",\r\n            isDate: false,\r\n            isDateTimezone: false,\r\n          },\r\n          {\r\n            label: \"Sumber\",\r\n            key: \"sourceType\",\r\n            isDate: false,\r\n            isDateTimezone: false,\r\n          }],\r\n          loading:false,\r\n          rowsPerPage:10,\r\n          rowsPerPageOptions:[10,20,50],\r\n          list:[\r\n            {\r\n                \"id\": \"d573d7c4-aaa4-4437-91cf-b06dfa1a3512\",\r\n                \"employee\": \"Dinah Hagenes\",\r\n                \"date\": \"2022-08-01\",\r\n                \"clockIn\": \"2022-08-01 01:04\",\r\n                \"clockOut\": \"2022-08-01 11:49\",\r\n                \"location\": \"-\",\r\n                \"sourceType\": \"Admin\",\r\n                \"status\": \"Pulang Awal\",\r\n                \"version\": 2\r\n            },\r\n            {\r\n                \"id\": \"cf973814-f5ad-4e9a-b92a-2b853b396725\",\r\n                \"employee\": \"monsta\",\r\n                \"date\": \"2022-09-14\",\r\n                \"clockIn\": \"2022-09-14 06:50\",\r\n                \"clockOut\": \"2022-09-14 06:51\",\r\n                \"location\": \"Lawencon123\",\r\n                \"sourceType\": \"Ess\",\r\n                \"status\": \"Hadir\",\r\n                \"version\": 0\r\n            },\r\n            {\r\n                \"id\": \"f570515d-7c9c-4d59-bc8d-0179dc53c16e\",\r\n                \"employee\": \"Farel M\",\r\n                \"date\": \"2022-08-01\",\r\n                \"clockIn\": \"2022-08-01 01:04\",\r\n                \"clockOut\": \"2022-08-01 11:49\",\r\n                \"location\": \"-\",\r\n                \"sourceType\": \"Admin\",\r\n                \"status\": \"Hadir\",\r\n                \"version\": 0\r\n            },\r\n            {\r\n                \"id\": \"22c3e2c8-7f89-49bb-ab1a-d3b8311b008c\",\r\n                \"employee\": \"Erfan Pramudyana WIjaya\",\r\n                \"date\": \"2022-08-01\",\r\n                \"clockIn\": \"2022-08-01 01:23\",\r\n                \"clockOut\": \"2022-08-01 11:23\",\r\n                \"location\": \"-\",\r\n                \"sourceType\": \"Admin\",\r\n                \"status\": \"Hadir\",\r\n                \"version\": 0\r\n            },\r\n            {\r\n                \"id\": \"ce52903e-a235-4185-abcd-a0ecc82c4d83\",\r\n                \"employee\": \"dwd\",\r\n                \"date\": \"2022-08-01\",\r\n                \"clockIn\": \"2022-08-01 04:20\",\r\n                \"clockOut\": null,\r\n                \"location\": \"PT Lawen\",\r\n                \"sourceType\": \"Ess\",\r\n                \"status\": \"Hadir\",\r\n                \"version\": 0\r\n            },\r\n            {\r\n                \"id\": \"46c22596-c857-449c-bcdd-0bdf8f3ddb8e\",\r\n                \"employee\": \"Farel M\",\r\n                \"date\": \"2022-07-28\",\r\n                \"clockIn\": \"2022-07-28 01:00\",\r\n                \"clockOut\": \"2022-07-28 11:09\",\r\n                \"location\": \"-\",\r\n                \"sourceType\": \"Admin\",\r\n                \"status\": \"Hadir\",\r\n                \"version\": 0\r\n            },\r\n            {\r\n                \"id\": \"ca432931-5588-4e87-9888-5e836f772c93\",\r\n                \"employee\": \"Asian Yard\",\r\n                \"date\": \"2022-07-28\",\r\n                \"clockIn\": \"2022-07-28 01:04\",\r\n                \"clockOut\": \"2022-07-28 09:49\",\r\n                \"location\": \"-\",\r\n                \"sourceType\": \"Admin\",\r\n                \"status\": \"Pulang Awal\",\r\n                \"version\": 0\r\n            },\r\n            {\r\n                \"id\": \"53bffc25-eb7a-424a-987d-c8a74eda0df0\",\r\n                \"employee\": \"Febri\",\r\n                \"date\": \"2022-07-27\",\r\n                \"clockIn\": \"2022-07-27 06:38\",\r\n                \"clockOut\": \"2022-07-27 06:44\",\r\n                \"location\": \"-\",\r\n                \"sourceType\": \"Admin\",\r\n                \"status\": \"Hadir\",\r\n                \"version\": 0\r\n            },\r\n            {\r\n                \"id\": \"ad409533-56e8-466e-a789-62b1496f25f0\",\r\n                \"employee\": \"Sulistiyani Ashfaq\",\r\n                \"date\": \"2022-07-27\",\r\n                \"clockIn\": \"2022-07-27 01:00\",\r\n                \"clockOut\": \"2022-07-27 10:00\",\r\n                \"location\": \"-\",\r\n                \"sourceType\": \"Admin\",\r\n                \"status\": \"Hadir\",\r\n                \"version\": 0\r\n            },\r\n            {\r\n                \"id\": \"dbf78ce5-1e0c-47dd-be3c-a1869d5fee9b\",\r\n                \"employee\": \"Bondan Prakoso\",\r\n                \"date\": \"2022-06-24\",\r\n                \"clockIn\": \"2022-06-24 01:04\",\r\n                \"clockOut\": \"2022-06-24 11:04\",\r\n                \"location\": \"-\",\r\n                \"sourceType\": \"Admin\",\r\n                \"status\": \"Pulang Awal\",\r\n                \"version\": 0\r\n            }\r\n        ],\r\n        count:71,\r\n\r\n    }\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/primeng/buttons/ghost-button/ghost-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    render: (args: GhostButton) => ({\r\n        props: args,\r\n    }),\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/primeng/buttons/main-button/main-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    render: (args: MainButton) => ({\r\n        props: args,\r\n    }),\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/primeng/confirm-dialogs/delete-dialog/delete-dialog.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    render: (args: DeleteDialogComponent) => ({\r\n        props: args,\r\n    }),\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/primeng/confirm-dialogs/leave-dialog/leave-dialog.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    render: (args: LeaveDialogComponent) => ({\r\n        props: args,\r\n    }),\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/primeng/confirm-dialogs/save-dialog/save-dialog.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    render: (args: SaveDialogComponent) => ({\r\n        props: args,\r\n    }),\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/primeng/confirm-dialogs/update-dialog/update-dialog.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    render: (args: UpdateDialogComponent) => ({\r\n        props: args,\r\n    }),\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/primeng/controls/checkbox/checkbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    render: (args: CheckboxComponent) => ({\r\n        props: args,\r\n    }),\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/primeng/controls/radio-button/radio-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    render: (args: RadioButtonComponent) => ({\r\n        props: args,\r\n    }),\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/primeng/controls/toggle/toggle.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    render: (args: ToggleComponent) => ({\r\n        props: args,\r\n    }),\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/primeng/input-fields/input-calendar/input-calendar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    render: (args: InputCalendar) => ({\r\n        props: args,\r\n    }),\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/primeng/input-fields/input-dropdown/input-dropdown.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    render: (args: InputDropdown) => ({\r\n        props: args,\r\n    }),\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/primeng/input-fields/input-file-upload/input-file-upload.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    render: (args: InputUpload) => ({\r\n        props: args,\r\n    }),\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/primeng/input-fields/input-number/input-number.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    render: (args: InputNumber) => ({\r\n        props: args,\r\n    }),\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/primeng/input-fields/input-text/input-text.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    render: (args: InputText) => ({\r\n        props: args,\r\n    }),\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/primeng/input-fields/input-text-area/input-text-area.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    render: (args: InputTextArea) => ({\r\n        props: args,\r\n    }),\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/shared-component/linov-button/button-add/button-add.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n    render: (args: ButtonAddComponent) => ({\r\n        props: args,\r\n    }),\r\n}"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: 'Button',\n  },\n}"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    size: 'small',\n    label: 'Button',\n  },\n}"
            }
        ],
        "functions": [
            {
                "name": "createTranslateLoader",
                "file": "src/app/app.module.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "encryptionPassword",
                "file": "src/app/layout/login/login.component.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "formValue",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "formValue",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<Button>",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<Header>",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<Page>",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<LovComponent>",
                "file": "src/app/core/shared-component/lov/lov.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TableComponent>",
                "file": "src/app/core/shared-component/table/table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<GhostButton>",
                "file": "src/stories/primeng/buttons/ghost-button/ghost-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<MainButton>",
                "file": "src/stories/primeng/buttons/main-button/main-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<DeleteDialogComponent>",
                "file": "src/stories/primeng/confirm-dialogs/delete-dialog/delete-dialog.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<LeaveDialogComponent>",
                "file": "src/stories/primeng/confirm-dialogs/leave-dialog/leave-dialog.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SaveDialogComponent>",
                "file": "src/stories/primeng/confirm-dialogs/save-dialog/save-dialog.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<UpdateDialogComponent>",
                "file": "src/stories/primeng/confirm-dialogs/update-dialog/update-dialog.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<CheckboxComponent>",
                "file": "src/stories/primeng/controls/checkbox/checkbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<RadioButtonComponent>",
                "file": "src/stories/primeng/controls/radio-button/radio-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ToggleComponent>",
                "file": "src/stories/primeng/controls/toggle/toggle.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<InputCalendar>",
                "file": "src/stories/primeng/input-fields/input-calendar/input-calendar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<InputDropdown>",
                "file": "src/stories/primeng/input-fields/input-dropdown/input-dropdown.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<InputUpload>",
                "file": "src/stories/primeng/input-fields/input-file-upload/input-file-upload.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<InputNumber>",
                "file": "src/stories/primeng/input-fields/input-number/input-number.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<InputText>",
                "file": "src/stories/primeng/input-fields/input-text/input-text.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<InputTextArea>",
                "file": "src/stories/primeng/input-fields/input-text-area/input-text-area.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ButtonAddComponent>",
                "file": "src/app/core/shared-component/linov-button/button-add/button-add.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 180
            }
        ],
        "enumerations": [
            {
                "name": "BlockView",
                "childs": [
                    {
                        "name": "PREVIEW",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "CODE",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/showcase/components/blockviewer/blockviewer.component.ts"
            }
        ],
        "groupedVariables": {
            "src/app/core/config/app.config.ts": [
                {
                    "name": "AppConstant",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/config/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n    userSessionKey: btoa('currSession'),\r\n    resetPasswordMessage: 'Apakah Anda yakin akan <b>mereset</b> password?',\r\n    prepaymentMessage: 'Apakah Anda yakin akan melanjutkan <b>pembayaran</b>?',\r\n    activateMessage:\r\n        'Apakah Anda yakin akan <b>mengaktifkan</b> <br> pengguna ini?',\r\n    deactivateMessage:\r\n        'Apakah Anda yakin akan <b>menonaktfikan</b> <br> pengguna ini?',\r\n    paidMessage: 'Apakah Anda yakin untuk <b>membayarkan</b> data ini?',\r\n    reopenMessage: 'Apakah Anda yakin akan <b>membuka kembali</b> proses?',\r\n    extendMessage: 'Apakah Anda yakin akan <b>memperpanjang?</b>',\r\n    terminateMessage: 'Apakah Anda yakin akan <b>memberhentikan?</b>',\r\n    closeMessage: 'Apakah Anda yakin akan <b>menyelesaikan</b> proses ?',\r\n    rollbackMessage: 'Apakah Anda yakin akan <b>membalikan</b> proses?',\r\n    cancelMessage: 'Apakah Anda yakin untuk <b>membatalkan</b> data ini?',\r\n    kembaliMessage: 'Apakah Anda yakin akan <b>kembali</b> ke halaman utama?',\r\n    processMessage: 'Apakah Anda yakin akan <b>memproses</b>?',\r\n    rejectMessage: 'Apakah Anda yakin untuk <b>menolak</b> data ini?',\r\n    sendMessage: 'Apakah Anda yakin untuk <b>mengaktivasi premium</b>?',\r\n    renewMessage: 'Apakah Anda yakin untuk <b>perpanjang premium</b>?',\r\n    approveMessage: 'Apakah Anda yakin untuk <b>menyetujui</b> data ini?',\r\n    updateMessage: 'Apakah Anda yakin akan <b>memperbarui</b>?',\r\n    absenMessage:\r\n        'Apakah anda yakin akan mengganti status <br> kehadiran, menjadi <b>Absen</b>?',\r\n    deleteMessage: 'Apakah Anda yakin akan <b>menghapus</b> data ini?',\r\n    earlyOutMessage:\r\n        'Apakah Anda yakin akan mengganti status <br> kehadiran, menjadi <b>Pulang Cepat</b>?',\r\n    lateMessage:\r\n        'Apakah Anda yakin akan mengganti status <br> kehadiran, menjadi <b>Terlambat</b>?',\r\n    presentMessage:\r\n        'Apakah Anda yakin akan mengganti status <br> kehadiran, menjadi <b>Hadir</b>?',\r\n    ApprovedMessage: 'Apakah Anda yakin untuk <b>menyetujui</b> data ini?',\r\n    RejectedMessage: 'Apakah Anda yakin untuk <b>menolak</b> data ini?',\r\n    PaidMessage: 'Apakah Anda yakin untuk <b>membayarkan</b> data ini?',\r\n    changeBalance:\r\n        'Perubahan persentasi pengajuan gaji instan berlaku di bulan berikutnya.',\r\n    month: [\r\n        'Januari',\r\n        'Februari',\r\n        'Maret',\r\n        'April',\r\n        'Mei',\r\n        'Juni',\r\n        'Juli',\r\n        'Agustus',\r\n        'September',\r\n        'Oktober',\r\n        'November',\r\n        'Desember',\r\n    ],\r\n    rowsPerPage: 10,\r\n    rowsPerPageOptions: [10, 20, 50],\r\n    rowsCard: 9,\r\n    rowsCardOptions: [9, 18, 27],\r\n}",
                    "rawdescription": "List of Application constants",
                    "description": "<p>List of Application constants</p>\n"
                }
            ],
            "src/environments/environment.develop.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.develop.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: true,\r\n  apiUrl:\"https://api-dev-umkm.linovhr.com/api/v1/\",\r\n  isSSO:false,\r\n  linovWordpress:'https://www.linovhr.com/'\r\n}"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: true,\r\n  apiUrl:\"https://api-upahku.linovhr.com/api/v1/\",\r\n  isSSO:true,\r\n  linovWordpress:'https://www.upahku.id/login/'\r\n}"
                }
            ],
            "src/environments/environment.staging.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.staging.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: true,\r\n  apiUrl:\"https://api-dev-umkm.linovhr.com/api/v1/\",\r\n  isSSO:false,\r\n  linovWordpress:'https://www.upahku.id/login/'\r\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: false,\r\n  apiUrl:\"https://api-dev-umkm.linovhr.com/api/v1/\",\r\n  isSSO:false,\r\n  linovWordpress:'https://www.upahku.id/login/'\r\n}"
                }
            ],
            "src/app/app.module.ts": [
                {
                    "name": "interceptorProviders",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n    {\r\n        provide: HTTP_INTERCEPTORS,\r\n        useClass: HttpErrorInterceptor,\r\n        multi: true,\r\n    }\r\n  ]"
                }
            ],
            "src/stories/Button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    size: 'large',\n    label: 'Button',\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<Button>",
                    "defaultValue": "{\n  title: 'Example/Button',\n  component: Button,\n  tags: ['autodocs'],\n  render: (args: Button) => ({\n    props: {\n      backgroundColor: null,\n      ...args,\n    },\n  }),\n  argTypes: {\n    backgroundColor: {\n      control: 'color',\n    },\n  },\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    primary: true,\n    label: 'Button',\n  },\n}"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: 'Button',\n  },\n}"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    size: 'small',\n    label: 'Button',\n  },\n}"
                }
            ],
            "src/stories/Header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    user: {\n      name: 'Jane Doe',\n    },\n  },\n}"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<Header>",
                    "defaultValue": "{\n  title: 'Example/Header',\n  component: Header,\n  // This component will have an automatically generated Autodocs entry: https://storybook.js.org/docs/angular/writing-docs/autodocs\n  tags: ['autodocs'],\n  render: (args) => ({ props: args }),\n  decorators: [\n    moduleMetadata({\n      declarations: [Button],\n      imports: [CommonModule],\n    }),\n  ],\n  parameters: {\n    // More on how to position stories at: https://storybook.js.org/docs/angular/configure/story-layout\n    layout: 'fullscreen',\n  },\n}"
                }
            ],
            "src/stories/Page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: (args: Page) => ({\n    props: args,\n  }),\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const loginButton = await canvas.getByRole('button', {\n      name: /Log in/i,\n    });\n    await userEvent.click(loginButton);\n  },\n}"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: (args: Page) => ({\n    props: args,\n  }),\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<Page>",
                    "defaultValue": "{\n  title: 'Example/Page',\n  component: Page,\n  parameters: {\n    // More on how to position stories at: https://storybook.js.org/docs/angular/configure/story-layout\n    layout: 'fullscreen',\n  },\n  decorators: [\n    moduleMetadata({\n      declarations: [Button, Header],\n      imports: [CommonModule],\n    }),\n  ],\n}"
                }
            ],
            "src/app/core/shared-component/lov/lov.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/shared-component/lov/lov.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<LovComponent>",
                    "defaultValue": "{\r\n    component: LovComponent,\r\n    tags: ['autodocs'],\r\n    decorators: [\r\n        moduleMetadata({\r\n            imports: [CommonModule,DropdownModule,FormsModule,LovModule,ProgressBarModule,HttpClientModule],\r\n            providers: [ApiService]\r\n        }),\r\n        applicationConfig({\r\n            providers: [\r\n              importProvidersFrom(BrowserAnimationsModule),\r\n            ],\r\n          })\r\n    ],\r\n\r\n    render: (args: LovComponent) => ({\r\n        props: args,\r\n    }),\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/shared-component/lov/lov.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    render: (args: LovComponent) => ({\r\n        props: args,\r\n    }),\r\n}"
                }
            ],
            "src/app/core/shared-component/table/table.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/shared-component/table/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TableComponent>",
                    "defaultValue": "{\r\n    component: TableComponent,\r\n    tags: ['autodocs'],\r\n    decorators: [\r\n        moduleMetadata({\r\n            imports: [\r\n                TableModule,\r\n                FormsModule,\r\n                CommonModule,\r\n                LinovTableModule,\r\n                PipeModule,\r\n                HttpClientModule\r\n            ],\r\n            providers: [TableService,ApiService,MessageService,MessageBoxService,HelperService],\r\n        }),\r\n        applicationConfig({\r\n            providers: [\r\n              importProvidersFrom(BrowserAnimationsModule),\r\n            ],\r\n          })\r\n    ],\r\n    render: (args: TableComponent) => ({\r\n        props: args,\r\n    }),\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/shared-component/table/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    render: (args: TableComponent) => ({\r\n        props: args,\r\n    }),\r\n    args:{\r\n        columMap:[{\r\n            label: \"Karyawan\",\r\n            key: \"employee\",\r\n            isDate: false,\r\n            isDateTimezone: false,\r\n          },\r\n          {\r\n            label: \"Tanggal\",\r\n            key: \"date\",\r\n            isDate: true,\r\n            isDateTimezone: false,\r\n          },\r\n          {\r\n            label: \"Masuk\",\r\n            key: \"clockIn\",\r\n            isDate: false,\r\n            isDateTimezone: true,\r\n          },\r\n          {\r\n            label: \"Keluar\",\r\n            key: \"clockOut\",\r\n            isDate: false,\r\n            isDateTimezone: true,\r\n          },\r\n          {\r\n            label: \"Lokasi\",\r\n            key: \"location\",\r\n            isDate: false,\r\n            isDateTimezone: false,\r\n          },\r\n          {\r\n            label: \"Sumber\",\r\n            key: \"sourceType\",\r\n            isDate: false,\r\n            isDateTimezone: false,\r\n          }],\r\n          loading:false,\r\n          rowsPerPage:10,\r\n          rowsPerPageOptions:[10,20,50],\r\n          list:[\r\n            {\r\n                \"id\": \"d573d7c4-aaa4-4437-91cf-b06dfa1a3512\",\r\n                \"employee\": \"Dinah Hagenes\",\r\n                \"date\": \"2022-08-01\",\r\n                \"clockIn\": \"2022-08-01 01:04\",\r\n                \"clockOut\": \"2022-08-01 11:49\",\r\n                \"location\": \"-\",\r\n                \"sourceType\": \"Admin\",\r\n                \"status\": \"Pulang Awal\",\r\n                \"version\": 2\r\n            },\r\n            {\r\n                \"id\": \"cf973814-f5ad-4e9a-b92a-2b853b396725\",\r\n                \"employee\": \"monsta\",\r\n                \"date\": \"2022-09-14\",\r\n                \"clockIn\": \"2022-09-14 06:50\",\r\n                \"clockOut\": \"2022-09-14 06:51\",\r\n                \"location\": \"Lawencon123\",\r\n                \"sourceType\": \"Ess\",\r\n                \"status\": \"Hadir\",\r\n                \"version\": 0\r\n            },\r\n            {\r\n                \"id\": \"f570515d-7c9c-4d59-bc8d-0179dc53c16e\",\r\n                \"employee\": \"Farel M\",\r\n                \"date\": \"2022-08-01\",\r\n                \"clockIn\": \"2022-08-01 01:04\",\r\n                \"clockOut\": \"2022-08-01 11:49\",\r\n                \"location\": \"-\",\r\n                \"sourceType\": \"Admin\",\r\n                \"status\": \"Hadir\",\r\n                \"version\": 0\r\n            },\r\n            {\r\n                \"id\": \"22c3e2c8-7f89-49bb-ab1a-d3b8311b008c\",\r\n                \"employee\": \"Erfan Pramudyana WIjaya\",\r\n                \"date\": \"2022-08-01\",\r\n                \"clockIn\": \"2022-08-01 01:23\",\r\n                \"clockOut\": \"2022-08-01 11:23\",\r\n                \"location\": \"-\",\r\n                \"sourceType\": \"Admin\",\r\n                \"status\": \"Hadir\",\r\n                \"version\": 0\r\n            },\r\n            {\r\n                \"id\": \"ce52903e-a235-4185-abcd-a0ecc82c4d83\",\r\n                \"employee\": \"dwd\",\r\n                \"date\": \"2022-08-01\",\r\n                \"clockIn\": \"2022-08-01 04:20\",\r\n                \"clockOut\": null,\r\n                \"location\": \"PT Lawen\",\r\n                \"sourceType\": \"Ess\",\r\n                \"status\": \"Hadir\",\r\n                \"version\": 0\r\n            },\r\n            {\r\n                \"id\": \"46c22596-c857-449c-bcdd-0bdf8f3ddb8e\",\r\n                \"employee\": \"Farel M\",\r\n                \"date\": \"2022-07-28\",\r\n                \"clockIn\": \"2022-07-28 01:00\",\r\n                \"clockOut\": \"2022-07-28 11:09\",\r\n                \"location\": \"-\",\r\n                \"sourceType\": \"Admin\",\r\n                \"status\": \"Hadir\",\r\n                \"version\": 0\r\n            },\r\n            {\r\n                \"id\": \"ca432931-5588-4e87-9888-5e836f772c93\",\r\n                \"employee\": \"Asian Yard\",\r\n                \"date\": \"2022-07-28\",\r\n                \"clockIn\": \"2022-07-28 01:04\",\r\n                \"clockOut\": \"2022-07-28 09:49\",\r\n                \"location\": \"-\",\r\n                \"sourceType\": \"Admin\",\r\n                \"status\": \"Pulang Awal\",\r\n                \"version\": 0\r\n            },\r\n            {\r\n                \"id\": \"53bffc25-eb7a-424a-987d-c8a74eda0df0\",\r\n                \"employee\": \"Febri\",\r\n                \"date\": \"2022-07-27\",\r\n                \"clockIn\": \"2022-07-27 06:38\",\r\n                \"clockOut\": \"2022-07-27 06:44\",\r\n                \"location\": \"-\",\r\n                \"sourceType\": \"Admin\",\r\n                \"status\": \"Hadir\",\r\n                \"version\": 0\r\n            },\r\n            {\r\n                \"id\": \"ad409533-56e8-466e-a789-62b1496f25f0\",\r\n                \"employee\": \"Sulistiyani Ashfaq\",\r\n                \"date\": \"2022-07-27\",\r\n                \"clockIn\": \"2022-07-27 01:00\",\r\n                \"clockOut\": \"2022-07-27 10:00\",\r\n                \"location\": \"-\",\r\n                \"sourceType\": \"Admin\",\r\n                \"status\": \"Hadir\",\r\n                \"version\": 0\r\n            },\r\n            {\r\n                \"id\": \"dbf78ce5-1e0c-47dd-be3c-a1869d5fee9b\",\r\n                \"employee\": \"Bondan Prakoso\",\r\n                \"date\": \"2022-06-24\",\r\n                \"clockIn\": \"2022-06-24 01:04\",\r\n                \"clockOut\": \"2022-06-24 11:04\",\r\n                \"location\": \"-\",\r\n                \"sourceType\": \"Admin\",\r\n                \"status\": \"Pulang Awal\",\r\n                \"version\": 0\r\n            }\r\n        ],\r\n        count:71,\r\n\r\n    }\r\n}"
                }
            ],
            "src/stories/primeng/buttons/ghost-button/ghost-button.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/primeng/buttons/ghost-button/ghost-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<GhostButton>",
                    "defaultValue": "{\r\n    component: GhostButton,\r\n    title: \"primeng/buttons/ghost-button/Ghost Button\",\r\n    tags: ['autodocs'],\r\n    decorators: [\r\n        moduleMetadata({\r\n            imports: [ButtonModule],\r\n        }),\r\n    ],\r\n    render: (args: GhostButton) => ({\r\n        props: args,\r\n    }),\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/primeng/buttons/ghost-button/ghost-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    render: (args: GhostButton) => ({\r\n        props: args,\r\n    }),\r\n}"
                }
            ],
            "src/stories/primeng/buttons/main-button/main-button.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/primeng/buttons/main-button/main-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<MainButton>",
                    "defaultValue": "{\r\n    component: MainButton,\r\n    title: \"primeng/buttons/main-button/Main Button\",\r\n    tags: ['autodocs'],\r\n    decorators: [\r\n        moduleMetadata({\r\n            imports: [ButtonModule],\r\n        }),\r\n    ],\r\n    render: (args: MainButton) => ({\r\n        props: args,\r\n    }),\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/primeng/buttons/main-button/main-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    render: (args: MainButton) => ({\r\n        props: args,\r\n    }),\r\n}"
                }
            ],
            "src/stories/primeng/confirm-dialogs/delete-dialog/delete-dialog.component.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/primeng/confirm-dialogs/delete-dialog/delete-dialog.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<DeleteDialogComponent>",
                    "defaultValue": "{\r\n    component: DeleteDialogComponent,\r\n    title: \"primeng/confirm-dialogs/delete-dialog/Delete Dialog\",\r\n    tags: ['autodocs'],\r\n    decorators: [\r\n        moduleMetadata({\r\n            imports: [FormsModule, DialogModule, ButtonModule, BrowserAnimationsModule]\r\n        }),\r\n    ],\r\n    render: (args: DeleteDialogComponent) => ({\r\n        props: args,\r\n    }),\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/primeng/confirm-dialogs/delete-dialog/delete-dialog.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    render: (args: DeleteDialogComponent) => ({\r\n        props: args,\r\n    }),\r\n}"
                }
            ],
            "src/stories/primeng/confirm-dialogs/leave-dialog/leave-dialog.component.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/primeng/confirm-dialogs/leave-dialog/leave-dialog.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<LeaveDialogComponent>",
                    "defaultValue": "{\r\n    component: LeaveDialogComponent,\r\n    title: \"primeng/confirm-dialogs/leave-dialog/Leave Dialog\",\r\n    tags: ['autodocs'],\r\n    decorators: [\r\n        moduleMetadata({\r\n            imports: [FormsModule, DialogModule, ButtonModule, BrowserAnimationsModule]\r\n        }),\r\n    ],\r\n    render: (args: LeaveDialogComponent) => ({\r\n        props: args,\r\n    }),\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/primeng/confirm-dialogs/leave-dialog/leave-dialog.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    render: (args: LeaveDialogComponent) => ({\r\n        props: args,\r\n    }),\r\n}"
                }
            ],
            "src/stories/primeng/confirm-dialogs/save-dialog/save-dialog.component.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/primeng/confirm-dialogs/save-dialog/save-dialog.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SaveDialogComponent>",
                    "defaultValue": "{\r\n    component: SaveDialogComponent,\r\n    title: \"primeng/confirm-dialogs/save-dialog/Save Dialog\",\r\n    tags: ['autodocs'],\r\n    decorators: [\r\n        moduleMetadata({\r\n            imports: [FormsModule, DialogModule, ButtonModule, BrowserAnimationsModule]\r\n        }),\r\n    ],\r\n    render: (args: SaveDialogComponent) => ({\r\n        props: args,\r\n    }),\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/primeng/confirm-dialogs/save-dialog/save-dialog.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    render: (args: SaveDialogComponent) => ({\r\n        props: args,\r\n    }),\r\n}"
                }
            ],
            "src/stories/primeng/confirm-dialogs/update-dialog/update-dialog.component.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/primeng/confirm-dialogs/update-dialog/update-dialog.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<UpdateDialogComponent>",
                    "defaultValue": "{\r\n    component: UpdateDialogComponent,\r\n    title: \"primeng/confirm-dialogs/update-dialog/Update Dialog\",\r\n    tags: ['autodocs'],\r\n    decorators: [\r\n        moduleMetadata({\r\n            imports: [FormsModule, DialogModule, ButtonModule, BrowserAnimationsModule]\r\n        }),\r\n    ],\r\n    render: (args: UpdateDialogComponent) => ({\r\n        props: args,\r\n    }),\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/primeng/confirm-dialogs/update-dialog/update-dialog.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    render: (args: UpdateDialogComponent) => ({\r\n        props: args,\r\n    }),\r\n}"
                }
            ],
            "src/stories/primeng/controls/checkbox/checkbox.component.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/primeng/controls/checkbox/checkbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<CheckboxComponent>",
                    "defaultValue": "{\r\n    component: CheckboxComponent,\r\n    title: \"primeng/controls/checkbox/Checkbox\",\r\n    tags: ['autodocs'],\r\n    decorators: [\r\n        moduleMetadata({\r\n            imports: [CheckboxModule, FormsModule],\r\n        }),\r\n    ],\r\n    render: (args: CheckboxComponent) => ({\r\n        props: args,\r\n    }),\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/primeng/controls/checkbox/checkbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    render: (args: CheckboxComponent) => ({\r\n        props: args,\r\n    }),\r\n}"
                }
            ],
            "src/stories/primeng/controls/radio-button/radio-button.component.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/primeng/controls/radio-button/radio-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<RadioButtonComponent>",
                    "defaultValue": "{\r\n    component: RadioButtonComponent,\r\n    title: \"primeng/controls/radio-button/Radio Button\",\r\n    tags: ['autodocs'],\r\n    decorators: [\r\n        moduleMetadata({\r\n            imports: [RadioButtonModule, FormsModule],\r\n        }),\r\n    ],\r\n    render: (args: RadioButtonComponent) => ({\r\n        props: args,\r\n    }),\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/primeng/controls/radio-button/radio-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    render: (args: RadioButtonComponent) => ({\r\n        props: args,\r\n    }),\r\n}"
                }
            ],
            "src/stories/primeng/controls/toggle/toggle.component.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/primeng/controls/toggle/toggle.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ToggleComponent>",
                    "defaultValue": "{\r\n    component: ToggleComponent,\r\n    title: \"primeng/controls/toggle/Toggle\",\r\n    tags: ['autodocs'],\r\n    decorators: [\r\n        moduleMetadata({\r\n            imports: [InputSwitchModule, FormsModule]\r\n        }),\r\n    ],\r\n    render: (args: ToggleComponent) => ({\r\n        props: args,\r\n    }),\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/primeng/controls/toggle/toggle.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    render: (args: ToggleComponent) => ({\r\n        props: args,\r\n    }),\r\n}"
                }
            ],
            "src/stories/primeng/input-fields/input-calendar/input-calendar.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/primeng/input-fields/input-calendar/input-calendar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<InputCalendar>",
                    "defaultValue": "{\r\n    component: InputCalendar,\r\n    title: 'primeng/input-fields/input-calendar',\r\n    tags: ['autodocs'],\r\n    decorators: [\r\n        moduleMetadata({\r\n            imports: [CalendarModule],\r\n        }),\r\n        applicationConfig({\r\n            providers: [importProvidersFrom(BrowserAnimationsModule)],\r\n        }),\r\n    ],\r\n    render: (args: InputCalendar) => ({\r\n        props: args,\r\n    }),\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/primeng/input-fields/input-calendar/input-calendar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    render: (args: InputCalendar) => ({\r\n        props: args,\r\n    }),\r\n}"
                }
            ],
            "src/stories/primeng/input-fields/input-dropdown/input-dropdown.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/primeng/input-fields/input-dropdown/input-dropdown.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<InputDropdown>",
                    "defaultValue": "{\r\n    component: InputDropdown,\r\n    title: 'primeng/input-fields/input-dropdown',\r\n    tags: ['autodocs'],\r\n    decorators: [\r\n        moduleMetadata({\r\n            imports: [DropdownModule],\r\n        }),\r\n        applicationConfig({\r\n            providers: [importProvidersFrom(BrowserAnimationsModule)],\r\n        }),\r\n    ],\r\n    render: (args: InputDropdown) => ({\r\n        props: args,\r\n    }),\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/primeng/input-fields/input-dropdown/input-dropdown.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    render: (args: InputDropdown) => ({\r\n        props: args,\r\n    }),\r\n}"
                }
            ],
            "src/stories/primeng/input-fields/input-file-upload/input-file-upload.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/primeng/input-fields/input-file-upload/input-file-upload.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<InputUpload>",
                    "defaultValue": "{\r\n    component: InputUpload,\r\n    title: 'primeng/input-fields/input-file-upload',\r\n    tags: ['autodocs'],\r\n    decorators: [\r\n        moduleMetadata({\r\n            imports: [FileUploadModule],\r\n        }),\r\n        applicationConfig({\r\n            providers: [importProvidersFrom(BrowserAnimationsModule)],\r\n        }),\r\n    ],\r\n    render: (args: InputUpload) => ({\r\n        props: args,\r\n    }),\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/primeng/input-fields/input-file-upload/input-file-upload.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    render: (args: InputUpload) => ({\r\n        props: args,\r\n    }),\r\n}"
                }
            ],
            "src/stories/primeng/input-fields/input-number/input-number.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/primeng/input-fields/input-number/input-number.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<InputNumber>",
                    "defaultValue": "{\r\n    component: InputNumber,\r\n    title: 'primeng/input-fields/input-number',\r\n    tags: ['autodocs'],\r\n    decorators: [\r\n        moduleMetadata({\r\n            imports: [InputNumberModule],\r\n        }),\r\n    ],\r\n    render: (args: InputNumber) => ({\r\n        props: args,\r\n    }),\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/primeng/input-fields/input-number/input-number.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    render: (args: InputNumber) => ({\r\n        props: args,\r\n    }),\r\n}"
                }
            ],
            "src/stories/primeng/input-fields/input-text/input-text.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/primeng/input-fields/input-text/input-text.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<InputText>",
                    "defaultValue": "{\r\n    component: InputText,\r\n    title: 'primeng/input-fields/input-text',\r\n    tags: ['autodocs'],\r\n    decorators: [\r\n        moduleMetadata({\r\n            imports: [InputTextModule],\r\n        }),\r\n    ],\r\n    render: (args: InputText) => ({\r\n        props: args,\r\n    }),\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/primeng/input-fields/input-text/input-text.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    render: (args: InputText) => ({\r\n        props: args,\r\n    }),\r\n}"
                }
            ],
            "src/stories/primeng/input-fields/input-text-area/input-text-area.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/primeng/input-fields/input-text-area/input-text-area.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<InputTextArea>",
                    "defaultValue": "{\r\n    component: InputTextArea,\r\n    title: 'primeng/input-fields/input-text-area',\r\n    tags: ['autodocs'],\r\n    decorators: [\r\n        moduleMetadata({\r\n            imports: [InputTextareaModule],\r\n        }),\r\n    ],\r\n    render: (args: InputTextArea) => ({\r\n        props: args,\r\n    }),\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/primeng/input-fields/input-text-area/input-text-area.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    render: (args: InputTextArea) => ({\r\n        props: args,\r\n    }),\r\n}"
                }
            ],
            "src/app/core/shared-component/linov-button/button-add/button-add.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/shared-component/linov-button/button-add/button-add.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ButtonAddComponent>",
                    "defaultValue": "{\r\n    component: ButtonAddComponent,\r\n    tags: ['autodocs'],\r\n    decorators: [\r\n        moduleMetadata({\r\n            imports: [ButtonModule],\r\n        }),\r\n    ],\r\n    render: (args: ButtonAddComponent) => ({\r\n        props: args,\r\n    }),\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/shared-component/linov-button/button-add/button-add.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n    render: (args: ButtonAddComponent) => ({\r\n        props: args,\r\n    }),\r\n}"
                }
            ],
            ".storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": ".storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\r\n  parameters: {\r\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\r\n    controls: {\r\n      matchers: {\r\n        color: /(background|color)$/i,\r\n        date: /Date$/,\r\n      },\r\n    },\r\n  },\r\n}"
                }
            ]
        },
        "groupedFunctions": {
            "src/app/app.module.ts": [
                {
                    "name": "createTranslateLoader",
                    "file": "src/app/app.module.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "http",
                            "type": "HttpClient",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "http",
                            "type": "HttpClient",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/layout/login/login.component.ts": [
                {
                    "name": "encryptionPassword",
                    "file": "src/app/layout/login/login.component.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "formValue",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "formValue",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {
            "src/app/showcase/components/blockviewer/blockviewer.component.ts": [
                {
                    "name": "BlockView",
                    "childs": [
                        {
                            "name": "PREVIEW",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "CODE",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/showcase/components/blockviewer/blockviewer.component.ts"
                }
            ]
        },
        "groupedTypeAliases": {
            "src/stories/Button.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<Button>",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/Header.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<Header>",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/Page.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<Page>",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/app/core/shared-component/lov/lov.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<LovComponent>",
                    "file": "src/app/core/shared-component/lov/lov.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/app/core/shared-component/table/table.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TableComponent>",
                    "file": "src/app/core/shared-component/table/table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/primeng/buttons/ghost-button/ghost-button.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<GhostButton>",
                    "file": "src/stories/primeng/buttons/ghost-button/ghost-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/primeng/buttons/main-button/main-button.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<MainButton>",
                    "file": "src/stories/primeng/buttons/main-button/main-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/primeng/confirm-dialogs/delete-dialog/delete-dialog.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<DeleteDialogComponent>",
                    "file": "src/stories/primeng/confirm-dialogs/delete-dialog/delete-dialog.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/primeng/confirm-dialogs/leave-dialog/leave-dialog.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<LeaveDialogComponent>",
                    "file": "src/stories/primeng/confirm-dialogs/leave-dialog/leave-dialog.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/primeng/confirm-dialogs/save-dialog/save-dialog.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SaveDialogComponent>",
                    "file": "src/stories/primeng/confirm-dialogs/save-dialog/save-dialog.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/primeng/confirm-dialogs/update-dialog/update-dialog.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<UpdateDialogComponent>",
                    "file": "src/stories/primeng/confirm-dialogs/update-dialog/update-dialog.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/primeng/controls/checkbox/checkbox.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<CheckboxComponent>",
                    "file": "src/stories/primeng/controls/checkbox/checkbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/primeng/controls/radio-button/radio-button.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<RadioButtonComponent>",
                    "file": "src/stories/primeng/controls/radio-button/radio-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/primeng/controls/toggle/toggle.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ToggleComponent>",
                    "file": "src/stories/primeng/controls/toggle/toggle.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/primeng/input-fields/input-calendar/input-calendar.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<InputCalendar>",
                    "file": "src/stories/primeng/input-fields/input-calendar/input-calendar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/primeng/input-fields/input-dropdown/input-dropdown.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<InputDropdown>",
                    "file": "src/stories/primeng/input-fields/input-dropdown/input-dropdown.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/primeng/input-fields/input-file-upload/input-file-upload.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<InputUpload>",
                    "file": "src/stories/primeng/input-fields/input-file-upload/input-file-upload.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/primeng/input-fields/input-number/input-number.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<InputNumber>",
                    "file": "src/stories/primeng/input-fields/input-number/input-number.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/primeng/input-fields/input-text/input-text.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<InputText>",
                    "file": "src/stories/primeng/input-fields/input-text/input-text.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/stories/primeng/input-fields/input-text-area/input-text-area.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<InputTextArea>",
                    "file": "src/stories/primeng/input-fields/input-text-area/input-text-area.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ],
            "src/app/core/shared-component/linov-button/button-add/button-add.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ButtonAddComponent>",
                    "file": "src/app/core/shared-component/linov-button/button-add/button-add.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 180
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 1,
        "status": "low",
        "files": [
            {
                "filePath": ".storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/app.module.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "createTranslateLoader",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "interceptorProviders",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/auth.guard.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AuthGuard",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/config/app.config.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AppConfig",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/core/config/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AppConstant",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/core/dashboard/component/attendance-dashboard/attendance-dashboard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AttendanceDashboardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/core/dashboard/component/birthday-dashboard/birthday-dashboard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BirthdayDashboardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/dashboard/component/confirmation-dashboard/confirmation-dashboard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ConfirmationDashboardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/core/dashboard/component/employee-info-dashboard/employee-info-dashboard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EmployeeInfoDashboardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/core/dashboard/component/late-loan-payment-dashboard/late-loan-payment-dashboard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LateLoanPaymentDashboardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/core/dashboard/component/leave-request-dashboard/leave-request-dashboard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LeaveRequestDashboardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/core/dashboard/component/loan-info-dashboard/loan-info-dashboard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoanInfoDashboardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/core/dashboard/component/new-employee-dashboard/new-employee-dashboard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NewEmployeeDashboardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/dashboard/component/payroll-info-dashboard/payroll-info-dashboard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PayrollInfoDashboardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/core/dashboard/component/payroll-monthly-dashboard/payroll-monthly-dashboard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PayrollMonthlyDashboardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/core/dashboard/component/reimburse-info-dashboard/reimburse-info-dashboard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ReimburseInfoDashboardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/core/dashboard/component/request-info-dashboard/request-info-dashboard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RequestInfoDashboardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/core/dashboard/component/today-leave-dashboard/today-leave-dashboard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TodayLeaveDashboardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/dashboard/dashboard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DashboardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/dashboard/service/dashboard.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "DashboardService",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/app/core/directive/autocomplete-off.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "AutocompleteOffDirective",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/directive/only-number.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "OnlyNumberDirective",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/core/interceptor/http-error.interceptor.ts",
                "type": "interceptor",
                "linktype": "interceptor",
                "name": "HttpErrorInterceptor",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/core/model/page-info.ts",
                "type": "class",
                "linktype": "classe",
                "name": "PageInfo",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/permision.guard.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "PermisionGuard",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pipe/check-date.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "CheckDateValidPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pipe/curr.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "CurrPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pipe/date-format.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "FormatDatePipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pipe/dateTimeZone-format.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "FormatDateTimeZonePipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pipe/space-to-comma.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "SpaceToCommaPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pipe/time-format.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "FormatTimePipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/service/api.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ApiService",
                "coveragePercent": 4,
                "coverageCount": "1/25",
                "status": "low"
            },
            {
                "filePath": "src/app/core/service/app.config.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ConfigService",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/core/service/authentication.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AuthenticationService",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/core/service/authentication.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Company",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/service/authentication.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Item",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/core/service/authentication.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Item2",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/core/service/authentication.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Tenant",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/service/authentication.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TenantModule",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/core/service/authentication.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Token",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/service/authentication.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/core/service/authentication.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "UserSession",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/core/service/dummy.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "DummyService",
                "coveragePercent": 20,
                "coverageCount": "1/5",
                "status": "low"
            },
            {
                "filePath": "src/app/core/service/helper-service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "HelperService",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/core/service/message-box.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "MessageBoxService",
                "coveragePercent": 25,
                "coverageCount": "2/8",
                "status": "low"
            },
            {
                "filePath": "src/app/core/service/message-box.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ErrorValidationApi",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/shared-component/approval-status/approval-status.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ApprovalStatusComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/core/shared-component/checkbox-all/checkbox-all.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CheckboxAllComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/shared-component/error-field-helper/error-field-helper.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ErrorFieldHelperComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/shared-component/information-view/information-view.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InformationViewComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/shared-component/linov-button/button-add/button-add.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonAddComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/core/shared-component/linov-button/button-add/button-add.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/shared-component/linov-button/button-add/button-add.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/shared-component/linov-button/button-back-general/button-back-general.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonBackComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/shared-component/linov-button/button-cancel/button-cancel.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonCancelComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/core/shared-component/linov-button/button-delete/button-delete.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonDeleteComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/core/shared-component/linov-button/button-download-laporan/button-download-laporan.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonDownloadLaporanComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/core/shared-component/linov-button/button-download/button-download.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonDownloadComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/core/shared-component/linov-button/button-edit/button-edit.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonEditComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/core/shared-component/linov-button/button-generate/button-generate.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonGenerateComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/core/shared-component/linov-button/button-kembali/button-kembali.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonKembaliComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/core/shared-component/linov-button/button-multi-action/button-multi-action.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonMultiActionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/42",
                "status": "low"
            },
            {
                "filePath": "src/app/core/shared-component/linov-button/button-process/button-process.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonProcessComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/core/shared-component/linov-button/button-renew/button-renew.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonRenewComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/core/shared-component/linov-button/button-report/button-report.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonReportComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/core/shared-component/linov-button/button-save/button-save.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonSaveComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/core/shared-component/linov-button/button-send/button-send.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonSendComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/core/shared-component/linov-button/button-terminate/button-terminate.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonTerminateComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/core/shared-component/linov-button/button-update/button-update.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonUpdateComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/core/shared-component/linov-upload/linov-upload.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LinovUploadComponent",
                "coveragePercent": 0,
                "coverageCount": "0/19",
                "status": "low"
            },
            {
                "filePath": "src/app/core/shared-component/lov/lov.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LovComponent",
                "coveragePercent": 0,
                "coverageCount": "0/26",
                "status": "low"
            },
            {
                "filePath": "src/app/core/shared-component/lov/lov.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/shared-component/lov/lov.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/shared-component/search/search.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SearchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/26",
                "status": "low"
            },
            {
                "filePath": "src/app/core/shared-component/table/table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/25",
                "status": "low"
            },
            {
                "filePath": "src/app/core/shared-component/table/table.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "TableService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/shared-component/table/table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/shared-component/table/table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/component/app.config.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppConfigComponent",
                "coveragePercent": 0,
                "coverageCount": "0/19",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/component/app.footer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppFooterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/component/app.main.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppMainComponent",
                "coveragePercent": 0,
                "coverageCount": "0/40",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/component/app.menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppMenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/component/app.menuitem.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppMenuitemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/component/app.topbar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppTopBarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/login/login.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/login/login.component.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "encryptionPassword",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/page-forbidden/page-forbidden.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageForbiddenComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/page-not-found/page-not-found.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageNotFoundComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/layout/redirect/redirect.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RedirectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/showcase/api/appconfig.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AppConfig",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/showcase/api/customer.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Country",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/showcase/api/customer.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Customer",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/showcase/api/customer.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Representative",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/showcase/api/image.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Image",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/showcase/api/product.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Product",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/showcase/components/app-code/app.code.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppCodeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/showcase/components/blocks/blocks.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BlocksComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/showcase/components/blockviewer/blockviewer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BlockViewer",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/showcase/components/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/showcase/components/charts/charts.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ChartsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/20",
                "status": "low"
            },
            {
                "filePath": "src/app/showcase/components/crud/crud.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CrudComponent",
                "coveragePercent": 0,
                "coverageCount": "0/23",
                "status": "low"
            },
            {
                "filePath": "src/app/showcase/components/dashboard/dashboard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DashboardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/showcase/components/documentation/documentation.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DocumentationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/showcase/components/empty/empty.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EmptyComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/showcase/components/file/file.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FileComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/showcase/components/floatlabel/floatlabel.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FloatLabelComponent",
                "coveragePercent": 0,
                "coverageCount": "0/19",
                "status": "low"
            },
            {
                "filePath": "src/app/showcase/components/formlayout/formlayout.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormLayoutComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/showcase/components/icons/icons.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/showcase/components/input/input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/24",
                "status": "low"
            },
            {
                "filePath": "src/app/showcase/components/invalidstate/invalidstate.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InvalidStateComponent",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "src/app/showcase/components/list/list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/showcase/components/media/media.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MediaComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/showcase/components/menus/confirmation.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ConfirmationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/showcase/components/menus/menus.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MenusComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/showcase/components/menus/payment.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PaymentComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/showcase/components/menus/personal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PersonalComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/showcase/components/menus/seat.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SeatComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/showcase/components/messages/messages.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MessagesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/showcase/components/misc/misc.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MiscComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/showcase/components/overlays/overlays.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OverlaysComponent",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "src/app/showcase/components/panels/panels.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PanelsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/showcase/components/table/table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/24",
                "status": "low"
            },
            {
                "filePath": "src/app/showcase/components/timeline/timeline.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TimelineComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/showcase/components/tree/tree.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TreeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/showcase/service/app.config.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ConfigService",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/showcase/service/app.menu.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "MenuService",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/showcase/service/countryservice.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "CountryService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/showcase/service/customerservice.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "CustomerService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/showcase/service/eventservice.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "EventService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/showcase/service/iconservice.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "IconService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/showcase/service/nodeservice.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "NodeService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/showcase/service/photoservice.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "PhotoService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/showcase/service/productservice.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ProductService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/util/company/add/util-company-add.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UtilCompanyAddComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/app/util/company/detail/util-company-detail.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UtilCompanyDetailComponent",
                "coveragePercent": 0,
                "coverageCount": "0/25",
                "status": "low"
            },
            {
                "filePath": "src/app/util/company/edit/util-company-edit.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UtilCompanyEditComponent",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "src/app/util/company/list/util-company-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UtilCompanyListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/24",
                "status": "low"
            },
            {
                "filePath": "src/app/util/company/service/util-company.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "UtilCompanyService",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/util/role/list/role-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RoleListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/21",
                "status": "low"
            },
            {
                "filePath": "src/app/util/role/service/role.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "RoleService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/util/user/add/user-add.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UserAddComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/util/user/detail/user-detail.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UserDetailComponent",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "src/app/util/user/edit/user-edit.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UserEditComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/util/user/list/user-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UserListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "src/app/util/user/service/user.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "UserService",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.develop.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.staging.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/User.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/primeng/buttons/ghost-button/ghost-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GhostButton",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/stories/primeng/buttons/ghost-button/ghost-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/primeng/buttons/ghost-button/ghost-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/primeng/buttons/main-button/main-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MainButton",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/stories/primeng/buttons/main-button/main-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/primeng/buttons/main-button/main-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/primeng/confirm-dialogs/delete-dialog/delete-dialog.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/primeng/confirm-dialogs/delete-dialog/delete-dialog.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/primeng/confirm-dialogs/delete-dialog/delete-dialog.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DeleteDialogComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/stories/primeng/confirm-dialogs/leave-dialog/leave-dialog.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/primeng/confirm-dialogs/leave-dialog/leave-dialog.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/primeng/confirm-dialogs/leave-dialog/leave-dialog.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LeaveDialogComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/stories/primeng/confirm-dialogs/save-dialog/save-dialog.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/primeng/confirm-dialogs/save-dialog/save-dialog.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/primeng/confirm-dialogs/save-dialog/save-dialog.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SaveDialogComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/stories/primeng/confirm-dialogs/update-dialog/update-dialog.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/primeng/confirm-dialogs/update-dialog/update-dialog.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/primeng/confirm-dialogs/update-dialog/update-dialog.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UpdateDialogComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/stories/primeng/controls/checkbox/checkbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/primeng/controls/checkbox/checkbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/primeng/controls/checkbox/checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CheckboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/stories/primeng/controls/radio-button/radio-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/primeng/controls/radio-button/radio-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/primeng/controls/radio-button/radio-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RadioButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/stories/primeng/controls/toggle/toggle.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/primeng/controls/toggle/toggle.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/primeng/controls/toggle/toggle.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ToggleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/primeng/input-fields/input-calendar/input-calendar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputCalendar",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/stories/primeng/input-fields/input-calendar/input-calendar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/primeng/input-fields/input-calendar/input-calendar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/primeng/input-fields/input-dropdown/input-dropdown.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputDropdown",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/primeng/input-fields/input-dropdown/input-dropdown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/primeng/input-fields/input-dropdown/input-dropdown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/primeng/input-fields/input-file-upload/input-file-upload.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputUpload",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/stories/primeng/input-fields/input-file-upload/input-file-upload.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "UploadEvent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/stories/primeng/input-fields/input-file-upload/input-file-upload.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/primeng/input-fields/input-file-upload/input-file-upload.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/primeng/input-fields/input-number/input-number.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputNumber",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/primeng/input-fields/input-number/input-number.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/primeng/input-fields/input-number/input-number.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/primeng/input-fields/input-text-area/input-text-area.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputTextArea",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/primeng/input-fields/input-text-area/input-text-area.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/primeng/input-fields/input-text-area/input-text-area.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/primeng/input-fields/input-text/input-text.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputText",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/primeng/input-fields/input-text/input-text.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/primeng/input-fields/input-text/input-text.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}